var searchIndex = JSON.parse('{\
"pyo3":{"doc":"Rust bindings to the Python interpreter.","t":[12,12,12,12,24,3,3,3,3,3,3,8,8,6,6,3,3,12,12,0,10,0,0,14,0,0,0,11,11,14,14,0,0,0,0,0,11,11,12,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,12,0,0,14,14,0,0,0,0,12,0,12,0,0,0,0,12,12,0,5,0,14,14,0,0,23,0,23,23,23,14,14,14,14,14,14,14,23,0,0,12,12,12,12,0,0,5,14,14,12,12,12,13,8,4,13,3,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,10,11,5,11,11,11,5,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,18,3,8,8,8,11,11,5,10,11,11,5,11,5,11,11,11,10,14,0,0,0,0,0,0,0,0,0,0,0,0,4,13,13,13,13,13,16,16,16,13,16,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,11,11,11,11,11,11,11,11,5,11,11,11,11,5,11,11,11,5,5,11,5,5,5,5,5,11,11,11,11,8,8,8,16,16,10,10,5,5,16,16,16,8,8,8,16,16,16,16,16,11,11,5,5,12,8,8,8,3,3,10,10,12,12,11,11,11,11,11,5,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12,12,12,12,12,12,12,16,16,18,18,18,18,16,16,16,16,8,8,8,8,8,8,8,8,8,3,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,16,16,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,5,10,10,11,11,10,11,11,11,14,14,10,10,11,10,5,11,11,10,5,11,10,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,11,11,10,11,11,10,10,10,10,14,10,11,10,10,10,10,10,10,10,10,14,10,14,11,5,11,11,11,11,4,8,6,8,8,16,16,16,16,13,13,11,11,11,11,11,11,11,5,5,11,11,11,12,12,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,16,16,16,8,8,8,8,8,16,16,16,16,16,11,11,11,11,5,5,5,5,5,12,12,12,12,12,12,13,13,13,13,3,13,3,13,3,13,3,3,3,3,3,4,4,3,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,8,8,8,8,6,16,16,16,16,16,16,13,13,11,11,11,5,5,5,11,11,11,11,11,11,11,11,12,12,16,16,16,16,16,16,16,16,8,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,8,8,8,8,8,8,8,8,8,10,10,11,11,10,11,11,11,10,11,10,10,10,10,10,10,10,10,11,0,0,0,0,0,0,0,0,0,0,5,0,5,5,14,5,14,16,8,4,13,13,16,8,11,11,11,11,11,11,11,11,10,11,11,12,12,3,3,6,11,11,11,11,11,11,11,11,0,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,8,4,3,10,11,11,11,11,5,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,14,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,12,12,12,12,12,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,13,13,13,17,17,17,17,17,17,17,17,17,3,5,5,5,5,3,5,5,5,5,5,5,7,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,7,5,5,7,3,5,5,5,5,5,5,5,5,7,5,5,5,5,5,5,5,5,7,7,5,5,5,5,5,5,5,5,5,5,5,5,5,7,6,6,5,5,5,5,5,5,5,5,7,5,5,7,5,5,6,5,5,5,5,5,5,5,5,5,5,5,7,7,3,5,5,5,5,5,5,5,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,5,5,3,3,5,5,5,5,5,5,5,7,3,5,5,5,5,5,5,5,5,5,5,7,5,5,5,5,5,7,5,5,5,5,5,5,7,5,7,7,3,5,5,5,5,5,5,5,5,5,5,5,3,3,3,5,5,5,5,5,5,5,5,5,5,5,3,7,5,5,5,5,5,5,5,5,5,5,7,7,7,7,3,5,7,3,5,7,7,7,7,5,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,5,5,7,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,5,5,5,5,5,5,5,5,5,5,5,5,5,7,3,5,5,5,5,5,5,5,5,5,7,3,5,5,5,5,5,5,5,5,5,7,5,5,5,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,3,5,5,5,5,5,5,13,5,4,13,3,5,5,5,5,7,3,7,3,5,3,5,3,5,5,5,5,5,5,5,5,5,7,5,5,5,5,5,5,5,5,5,5,5,5,7,5,5,3,5,5,5,5,5,5,5,5,5,5,5,7,3,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,3,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,7,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,3,5,5,5,5,5,5,5,5,5,5,5,7,5,5,5,5,7,3,7,3,3,17,5,3,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,5,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,5,5,5,5,5,5,5,5,5,5,5,5,5,3,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,17,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,5,5,7,7,5,7,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,3,5,5,5,5,5,17,5,5,5,7,3,5,5,5,5,5,7,5,5,5,5,3,5,5,5,5,5,5,5,3,6,3,3,5,5,5,5,5,5,5,5,7,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,5,5,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,17,17,17,17,17,17,17,17,3,7,3,5,5,5,5,5,5,5,5,5,5,5,5,7,3,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,3,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,7,3,19,5,5,5,5,5,5,5,5,17,5,17,5,17,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,17,5,3,5,5,5,3,5,5,5,5,5,5,5,3,5,5,7,5,7,5,5,5,5,7,17,5,5,5,5,5,5,17,17,17,17,17,17,7,5,5,7,17,5,5,5,5,5,5,7,7,5,5,7,17,17,5,5,5,5,5,5,5,5,5,5,5,5,5,17,17,17,7,7,5,5,7,5,5,5,5,7,7,5,5,5,5,5,7,17,17,5,5,17,5,7,7,5,5,7,17,5,5,5,7,5,5,5,5,5,5,5,5,5,5,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,5,5,6,6,6,6,17,7,7,7,5,5,17,17,17,17,17,3,3,17,17,17,6,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,6,6,17,17,17,12,12,12,12,12,12,5,6,6,5,5,7,3,3,5,5,5,5,5,5,5,17,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,5,5,5,5,5,5,4,13,13,13,5,5,5,5,5,5,5,5,5,5,5,7,5,5,5,5,5,5,5,5,12,12,12,12,3,12,3,12,3,3,12,0,12,12,12,6,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,6,0,0,12,12,0,12,0,12,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,12,12,0,12,12,0,0,12,12,0,12,0,12,12,12,12,12,12,12,0,12,6,0,6,6,12,12,12,0,12,12,12,12,12,12,0,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,12,12,0,12,12,12,0,12,12,12,12,12,6,12,0,0,12,6,6,6,6,6,12,12,12,12,12,12,12,12,12,12,12,12,12,12,6,12,12,12,12,12,12,12,12,12,12,0,12,12,6,12,12,6,12,12,12,12,0,12,12,12,12,12,6,0,12,12,12,6,12,12,12,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,12,0,0,12,12,12,12,12,0,12,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,6,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,12,0,6,6,12,14,12,0,12,12,12,12,12,12,12,12,6,12,0,12,0,0,0,0,0,0,0,0,0,12,0,12,0,12,12,12,12,6,6,6,12,12,12,12,12,12,6,6,3,0,6,12,12,12,12,12,12,0,12,12,12,12,12,12,12,12,12,12,12,12,6,6,6,6,12,12,12,12,12,12,12,12,12,0,0,12,12,3,0,12,6,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,12,12,6,0,0,12,12,12,12,6,0,12,12,12,12,12,12,12,12,12,12,6,12,6,0,12,12,12,12,0,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,7,7,5,5,7,5,5,5,5,7,7,7,5,5,5,5,5,5,5,5,7,7,5,5,5,5,5,5,5,5,5,5,5,5,5,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,17,17,17,17,3,5,5,5,5,5,5,5,7,3,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,12,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,5,7,5,5,5,5,5,7,5,5,5,5,5,5,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,17,5,5,5,5,5,5,5,5,5,5,5,5,5,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,5,5,5,5,5,5,5,7,5,5,3,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,12,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,5,5,5,5,3,5,5,5,11,11,11,11,12,12,11,11,11,11,11,11,12,3,3,5,5,5,5,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,3,5,5,5,5,5,5,5,5,7,3,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,5,7,7,5,5,5,5,5,5,5,5,5,3,3,11,11,11,11,11,11,11,11,12,11,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,3,5,5,5,5,5,5,5,5,5,3,5,5,3,5,5,5,5,5,5,5,3,5,5,5,4,13,13,13,12,12,12,12,12,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,5,5,5,12,11,11,11,11,11,11,12,12,11,11,11,11,5,5,5,5,5,0,0,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,11,11,12,11,11,12,11,6,12,11,12,12,12,11,12,12,6,12,12,12,11,11,11,11,3,3,3,5,3,3,3,3,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,6,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,5,5,5,5,5,5,5,13,13,13,4,3,5,5,5,5,5,5,5,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,5,5,5,5,5,5,17,17,17,17,17,17,17,17,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,5,5,5,11,11,11,11,12,12,11,11,11,3,3,3,19,5,17,5,17,5,17,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,17,17,17,17,5,5,5,5,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,7,3,5,5,5,5,5,5,5,5,5,5,5,3,3,3,5,5,5,5,5,5,5,5,5,5,5,3,7,5,5,5,5,5,5,5,5,5,12,12,12,12,12,12,3,17,17,14,14,14,14,14,14,17,3,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,12,12,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,7,5,5,5,5,5,7,3,7,7,7,7,7,5,11,11,11,11,12,12,11,11,12,6,11,12,12,6,11,11,11,11,5,7,7,7,7,5,7,7,7,7,5,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,5,5,7,7,5,5,17,5,5,5,5,5,7,7,7,5,5,3,5,5,5,5,5,5,5,5,5,7,11,11,11,11,12,12,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,5,7,5,7,3,5,5,5,5,7,7,11,11,11,11,11,12,12,12,12,11,12,12,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,5,5,7,7,7,5,5,5,5,5,5,5,5,5,5,5,5,5,7,12,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,5,5,5,5,5,11,11,11,11,11,11,11,5,5,5,5,5,5,7,17,17,17,17,17,17,17,17,6,6,5,5,5,5,5,5,5,5,7,3,6,6,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,17,17,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,17,7,3,3,17,5,3,7,5,5,5,5,5,5,5,5,5,5,5,7,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,7,5,3,5,5,5,5,5,5,5,5,5,5,17,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,3,7,3,5,5,5,17,17,17,5,5,5,5,5,17,17,17,5,5,17,5,5,5,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,5,5,5,5,5,7,7,5,6,12,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,6,6,12,11,11,6,11,11,11,11,6,6,6,6,6,6,11,11,11,11,12,6,6,12,6,12,12,12,12,6,6,12,6,6,6,6,12,12,6,6,6,6,6,11,11,11,11,6,11,11,11,11,11,11,11,11,11,11,11,11,6,6,5,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,11,11,11,11,12,11,12,11,11,11,11,11,11,5,12,3,11,11,11,11,11,11,11,5,6,5,5,5,5,5,5,5,5,5,5,5,7,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,5,5,5,5,5,5,5,5,5,3,3,3,3,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,5,5,5,5,5,5,5,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,3,5,17,17,17,17,5,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,5,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,17,17,6,6,6,6,6,12,12,17,5,5,13,5,4,13,3,5,5,5,5,5,5,5,5,3,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,17,17,17,17,17,17,12,12,12,17,3,5,5,5,5,5,5,5,3,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,7,7,5,7,5,5,5,5,5,7,7,3,5,5,5,5,5,17,5,5,5,7,5,11,11,11,11,12,12,11,11,11,11,12,12,11,11,12,12,12,3,12,12,11,11,11,11,11,11,12,12,7,3,5,5,5,5,5,7,5,5,7,11,11,11,11,12,12,12,12,11,11,11,17,3,5,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,11,11,11,11,12,12,11,11,12,12,11,11,11,12,11,6,3,3,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,7,5,5,5,5,5,5,5,5,5,7,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,5,6,6,6,6,17,5,5,5,5,12,3,5,5,5,5,5,5,5,7,7,7,11,11,11,11,11,11,11,12,3,3,3,17,17,7,6,3,7,12,12,11,11,11,11,11,11,11,11,11,11,5,12,11,11,5,5,11,11,11,11,5,12,5,11,11,11,11,11,11,12,12,5,11,11,11,5,11,5,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,5,0,0,0,0,0,0,0,0,0,17,3,3,12,12,5,11,11,11,11,12,5,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,12,11,12,12,5,12,12,11,11,11,11,11,11,11,11,13,13,3,4,11,11,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,5,12,17,3,11,11,11,11,11,11,11,12,12,8,3,3,8,3,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,5,18,8,5,12,3,11,11,11,11,11,6,11,11,11,12,3,3,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,3,8,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,5,11,11,11,5,14,5,11,11,14,14,14,5,5,5,11,11,11,11,11,11,17,5,5,12,3,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,24,3,11,11,3,3,3,3,6,6,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,23,23,23,23,23,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,23,23,23,23,23,12,3,18,3,3,3,3,3,8,3,3,18,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,10,11,12,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,16,16,17,8,16,5,5,5,5,5,5,5,5,5,5,5,12,3,3,8,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,10,11,11,11,12,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,11,11,16,3,18,18,8,8,8,8,11,11,5,5,5,12,11,11,11,12,10,10,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,8,3,3,3,3,3,3,3,3,8,3,3,8,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,3,8,3,3,3,3,3,13,13,13,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,12,12,12,12,3,5,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,8,3,3,18,18,11,11,11,11,11,11,11,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,12,3,8,3,3,8,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,10,11,11,10,11,11,10,11,11,10,11,10,11,11,10,11,11,10,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,8,16,3,8,3,16,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,17,3,3,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,12,3,11,11,11,11,11,11,5,0,11,11,11,11,11,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,14,12,3,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,14,11,11,11,11,5,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","0","0","1","FromPyObject","GILGuard","GILPool","Py","PyAny","PyDowncastError","PyErr","PyErrArguments","PyNativeType","PyObject","PyResult","Python","PythonVersionInfo","_not_send","_not_send","anyhow","arguments","buffer","callback","callback_body","class","conversion","conversions","convert","convert","create_exception","create_exception_type_object","derive_utils","err","exceptions","eyre","ffi","from","from","from","generate_pyclass_add_slot","generate_pyclass_and_slot","generate_pyclass_divmod_slot","generate_pyclass_floordiv_slot","generate_pyclass_lshift_slot","generate_pyclass_matmul_slot","generate_pyclass_mod_slot","generate_pyclass_mul_slot","generate_pyclass_or_slot","generate_pyclass_pow_slot","generate_pyclass_rshift_slot","generate_pyclass_setattr_slot","generate_pyclass_setdescr_slot","generate_pyclass_setitem_slot","generate_pyclass_sub_slot","generate_pyclass_truediv_slot","generate_pyclass_xor_slot","gil","gstate","hashbrown","impl_","impl_exception_boilerplate","import_exception","indexmap","instance","internal_tricks","macros","major","marshal","minor","num_bigint","num_complex","once_cell","panic","patch","pool","prelude","prepare_freethreaded_python","proc_macro","py_run","py_run_impl","pycell","pyclass","pyclass","pyclass_init","pyfunction","pymethods","pymodule","pyobject_native_type","pyobject_native_type_base","pyobject_native_type_core","pyobject_native_type_extract","pyobject_native_type_info","pyobject_native_type_named","pyobject_native_type_sized","pyproto","python","serde","start","state","suffix","to","type_object","types","with_embedded_python_interpreter","wrap_pyfunction","wrap_pymodule","0","0","1","Bool","Element","ElementType","Float","PyBuffer","ReadOnlyCell","SignedInteger","Unknown","UnsignedInteger","as_fortran_mut_slice","as_fortran_slice","as_mut_slice","as_ptr","as_slice","assert_receiver_is_total_eq","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buf_ptr","clone","clone_into","copy_from_fortran_slice","copy_from_slice","copy_from_slice_impl","copy_to_fortran_slice","copy_to_slice","copy_to_slice_impl","dimensions","drop","eq","equivalent","extract","fmt","format","from","from","from","from_format","get","get","get_ptr","impl_element","into","into","into","is_c_contiguous","is_compatible_format","is_fortran_contiguous","is_matching_endian","item_count","item_size","len_bytes","native_element_type_from_type_char","ne","readonly","release","shape","standard_element_type_from_type_char","strides","suboffsets","to_fortran_vec","to_owned","to_vec","to_vec_impl","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","bytes","bytes","bytes","0","ERR_VALUE","HashCallbackOutput","IntoPyCallbackOutput","PyCallbackOutput","WrappingCastTo","borrow","borrow_mut","convert","convert","convert","from","handle_panic","into","panic_result_into_callback_output","try_from","try_into","type_id","wrapping_cast","wrapping_cast","basic","buffer","descr","gc","impl_","iter","macros","mapping","methods","number","pyasync","sequence","CompareOp","Eq","Ge","Gt","Le","Lt","Name","Name","Name","Ne","Other","PyObjectBoolProtocol","PyObjectDelAttrProtocol","PyObjectGetAttrProtocol","PyObjectHashProtocol","PyObjectProtocol","PyObjectReprProtocol","PyObjectRichcmpProtocol","PyObjectSetAttrProtocol","PyObjectStrProtocol","Result","Result","Result","Result","Result","Result","Result","Result","Value","__bool__","__delattr__","__getattr__","__hash__","__repr__","__richcmp__","__setattr__","__str__","bool","borrow","borrow_mut","clone","clone_into","delattr","fmt","from","from_raw","getattr","hash","into","repr","richcmp","setattr","setdelattr","str","to_owned","try_from","try_into","type_id","PyBufferGetBufferProtocol","PyBufferProtocol","PyBufferReleaseBufferProtocol","Result","Result","bf_getbuffer","bf_releasebuffer","getbuffer","releasebuffer","Inst","Inst","Owner","PyDescrGetProtocol","PyDescrProtocol","PyDescrSetProtocol","Receiver","Receiver","Result","Result","Value","__get__","__set__","descr_get","descr_set","0","PyGCClearProtocol","PyGCProtocol","PyGCTraverseProtocol","PyTraverseError","PyVisit","__clear__","__traverse__","_py","arg","borrow","borrow","borrow_mut","borrow_mut","call","clear","clone","clone_into","from","from","into","into","to_owned","traverse","try_from","try_from","try_into","try_into","type_id","type_id","visit","0","0","0","0","1","1","BaseNativeType","BaseType","DOC","IS_BASETYPE","IS_GC","IS_SUBCLASS","Initializer","Inventory","Layout","LayoutAsBase","PyAsyncProtocolMethods","PyAsyncProtocolSlots","PyBufferProtocolSlots","PyClassAllocImpl","PyClassBaseType","PyClassDefaultSlots","PyClassDescriptors","PyClassFreeImpl","PyClassImpl","PyClassImplCollector","PyClassInventory","PyClassNewImpl","PyClassThreadChecker","PyClassWithFreeList","PyClass__add__SlotFragment","PyClass__and__SlotFragment","PyClass__delattr__SlotFragment","PyClass__delete__SlotFragment","PyClass__delitem__SlotFragment","PyClass__divmod__SlotFragment","PyClass__floordiv__SlotFragment","PyClass__lshift__SlotFragment","PyClass__matmul__SlotFragment","PyClass__mod__SlotFragment","PyClass__mul__SlotFragment","PyClass__or__SlotFragment","PyClass__pow__SlotFragment","PyClass__radd__SlotFragment","PyClass__rand__SlotFragment","PyClass__rdivmod__SlotFragment","PyClass__rfloordiv__SlotFragment","PyClass__rlshift__SlotFragment","PyClass__rmatmul__SlotFragment","PyClass__rmod__SlotFragment","PyClass__rmul__SlotFragment","PyClass__ror__SlotFragment","PyClass__rpow__SlotFragment","PyClass__rrshift__SlotFragment","PyClass__rshift__SlotFragment","PyClass__rsub__SlotFragment","PyClass__rtruediv__SlotFragment","PyClass__rxor__SlotFragment","PyClass__set__SlotFragment","PyClass__setattr__SlotFragment","PyClass__setitem__SlotFragment","PyClass__sub__SlotFragment","PyClass__truediv__SlotFragment","PyClass__xor__SlotFragment","PyDescrProtocolMethods","PyDescrProtocolSlots","PyGCProtocolSlots","PyIterProtocolSlots","PyMappingProtocolMethods","PyMappingProtocolSlots","PyNumberProtocolMethods","PyNumberProtocolSlots","PyObjectProtocolMethods","PyObjectProtocolSlots","PySequenceProtocolSlots","ThreadChecker","ThreadChecker","ThreadCheckerImpl","ThreadCheckerInherited","ThreadCheckerStub","__add__","__and__","__delattr__","__delete__","__delitem__","__divmod__","__floordiv__","__lshift__","__matmul__","__mod__","__mul__","__or__","__pow__","__private__","__radd__","__rand__","__rdivmod__","__rfloordiv__","__rlshift__","__rmatmul__","__rmod__","__rmul__","__ror__","__rpow__","__rrshift__","__rshift__","__rsub__","__rtruediv__","__rxor__","__set__","__setattr__","__setitem__","__sub__","__truediv__","__xor__","alloc_impl","alloc_with_freelist","async_protocol_methods","async_protocol_slots","borrow","borrow_mut","buffer_protocol_slots","clone","clone_into","default","define_pyclass_binary_operator_slot","define_pyclass_setattr_slot","descr_protocol_methods","descr_protocol_slots","dict_offset","ensure","fallback_new","for_each_method_def","for_each_proto_slot","free_impl","free_with_freelist","from","gc_protocol_slots","generate_pyclass_add_slot","generate_pyclass_and_slot","generate_pyclass_divmod_slot","generate_pyclass_floordiv_slot","generate_pyclass_lshift_slot","generate_pyclass_matmul_slot","generate_pyclass_mod_slot","generate_pyclass_mul_slot","generate_pyclass_or_slot","generate_pyclass_pow_slot","generate_pyclass_rshift_slot","generate_pyclass_setattr_slot","generate_pyclass_setdescr_slot","generate_pyclass_setitem_slot","generate_pyclass_sub_slot","generate_pyclass_truediv_slot","generate_pyclass_xor_slot","get_alloc","get_free","get_free_list","get_new","into","iter_protocol_slots","mapping_protocol_methods","mapping_protocol_slots","methods","methods_trait","new","new","new_impl","number_protocol_methods","number_protocol_slots","object_protocol_methods","object_protocol_slots","py_class_default_slots","py_class_descriptors","sequence_protocol_slots","slot_fragment_trait","slots","slots_trait","to_owned","tp_dealloc","try_from","try_into","type_id","weaklist_offset","IterNextOutput","PyIterIterProtocol","PyIterNextOutput","PyIterNextProtocol","PyIterProtocol","Receiver","Receiver","Result","Result","Return","Yield","__iter__","__next__","borrow","borrow_mut","convert","from","into","iter","iternext","try_from","try_into","type_id","0","0","_call_impl","call_mut","call_operator_mut","call_ref","extract_or_return_not_implemented","py_binary_fallback_num_func","py_binary_func","py_binary_num_func","py_binary_reversed_num_func","py_binary_self_func","py_func_del","py_func_set","py_func_set_del","py_len_func","py_ssizearg_func","py_ternarys_func","py_unary_func","py_unarys_func","Key","Key","Key","PyMappingDelItemProtocol","PyMappingGetItemProtocol","PyMappingLenProtocol","PyMappingProtocol","PyMappingSetItemProtocol","Result","Result","Result","Result","Value","__delitem__","__getitem__","__len__","__setitem__","delitem","getitem","len","setdelitem","setitem","0","0","0","0","0","0","Class","ClassAttribute","Getter","Method","PyCFunction","PyCFunction","PyCFunctionFastWithKeywords","PyCFunctionFastWithKeywords","PyCFunctionWithKeywords","PyCFunctionWithKeywords","PyClassAttributeDef","PyClassAttributeFactory","PyGetter","PyGetterDef","PyMethodDef","PyMethodDefType","PyMethodType","PySetter","PySetterDef","Setter","Static","as_method_def","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfunction_with_keywords","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","copy_to","copy_to","doc","doc","fastcall_cfunction_with_keywords","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get_doc","get_name","into","into","into","into","into","into","into","into","into","into","into","into","meth","meth","meth","ml_doc","ml_flags","ml_meth","ml_name","name","name","name","new","new","new","noargs","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","Left","Left","Left","Left","Left","Left","Left","Left","Left","Left","Left","Left","Left","Left","Modulo","Modulo","Modulo","Other","Other","Other","Other","Other","Other","Other","Other","Other","Other","Other","Other","Other","Other","Other","Other","Other","Other","Other","Other","Other","Other","Other","Other","Other","Other","Other","Other","PyNumberAbsProtocol","PyNumberAddProtocol","PyNumberAndProtocol","PyNumberDivmodProtocol","PyNumberFloatProtocol","PyNumberFloordivProtocol","PyNumberIAddProtocol","PyNumberIAndProtocol","PyNumberIDivmodProtocol","PyNumberIFloordivProtocol","PyNumberILShiftProtocol","PyNumberIMatmulProtocol","PyNumberIModProtocol","PyNumberIMulProtocol","PyNumberIOrProtocol","PyNumberIPowProtocol","PyNumberIRShiftProtocol","PyNumberISubProtocol","PyNumberITruedivProtocol","PyNumberIXorProtocol","PyNumberIndexProtocol","PyNumberIntProtocol","PyNumberInvertProtocol","PyNumberLShiftProtocol","PyNumberMatmulProtocol","PyNumberModProtocol","PyNumberMulProtocol","PyNumberNegProtocol","PyNumberOrProtocol","PyNumberPosProtocol","PyNumberPowProtocol","PyNumberProtocol","PyNumberRAddProtocol","PyNumberRAndProtocol","PyNumberRDivmodProtocol","PyNumberRFloordivProtocol","PyNumberRLShiftProtocol","PyNumberRMatmulProtocol","PyNumberRModProtocol","PyNumberRMulProtocol","PyNumberROrProtocol","PyNumberRPowProtocol","PyNumberRRShiftProtocol","PyNumberRShiftProtocol","PyNumberRSubProtocol","PyNumberRTruedivProtocol","PyNumberRXorProtocol","PyNumberSubProtocol","PyNumberTruedivProtocol","PyNumberXorProtocol","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Result","Right","Right","Right","Right","Right","Right","Right","Right","Right","Right","Right","Right","Right","Right","__abs__","__add__","__and__","__divmod__","__float__","__floordiv__","__iadd__","__iand__","__ifloordiv__","__ilshift__","__imatmul__","__imod__","__imul__","__index__","__int__","__invert__","__ior__","__ipow__","__irshift__","__isub__","__itruediv__","__ixor__","__lshift__","__matmul__","__mod__","__mul__","__neg__","__or__","__pos__","__pow__","__radd__","__rand__","__rdivmod__","__rfloordiv__","__rlshift__","__rmatmul__","__rmod__","__rmul__","__ror__","__rpow__","__rrshift__","__rshift__","__rsub__","__rtruediv__","__rxor__","__sub__","__truediv__","__xor__","abs","add","add_radd","and","and_rand","divmod","divmod_rdivmod","float","floordiv","floordiv_rfloordiv","iadd","iand","ifloordiv","ilshift","imatmul","imod","imul","index","int","invert","ior","ipow","irshift","isub","itruediv","ixor","lshift","lshift_rlshift","matmul","matmul_rmatmul","mod_","mod_rmod","mul","mul_rmul","neg","or","or_ror","pos","pow","pow_rpow","radd","rand","rdivmod","rfloordiv","rlshift","rmatmul","rmod","rmul","ror","rpow","rrshift","rshift","rshift_rrshift","rsub","rtruediv","rxor","sub","sub_rsub","truediv","truediv_rtruediv","xor","xor_rxor","IterANextOutput","PyAsyncAiterProtocol","PyAsyncAnextProtocol","PyAsyncAwaitProtocol","PyAsyncProtocol","PyIterANextOutput","Receiver","Receiver","Receiver","Result","Result","Result","Return","Yield","__aiter__","__anext__","__await__","aiter","anext","await_","borrow","borrow_mut","convert","from","into","try_from","try_into","type_id","0","0","Index","Index","Index","Index","Index","Item","Other","Other","PySequenceConcatProtocol","PySequenceContainsProtocol","PySequenceDelItemProtocol","PySequenceGetItemProtocol","PySequenceInplaceConcatProtocol","PySequenceInplaceRepeatProtocol","PySequenceLenProtocol","PySequenceProtocol","PySequenceRepeatProtocol","PySequenceSetItemProtocol","Result","Result","Result","Result","Result","Result","Result","Result","Result","Value","__concat__","__contains__","__delitem__","__getitem__","__inplace_concat__","__inplace_repeat__","__len__","__repeat__","__setitem__","concat","contains","delitem","getitem","inplace_concat","inplace_repeat","len","repeat","setdelitem","setitem","AsPyPointer","FromPyObject","FromPyPointer","IntoPy","IntoPyPointer","PyTryFrom","PyTryInto","ToBorrowedObject","ToPyObject","as_ptr","extract","from_borrowed_ptr","from_borrowed_ptr_or_err","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_panic","from_owned_ptr","from_owned_ptr_or_err","from_owned_ptr_or_opt","from_owned_ptr_or_panic","into_ptr","into_py","to_object","try_from","try_from_exact","try_from_unchecked","try_into","try_into_exact","with_borrowed_ptr","anyhow","array","eyre","hashbrown","indexmap","num_bigint","num_complex","osstr","path","serde","invalid_sequence_length","min_const_generics","array_try_from_fn","create_array_from_obj","bigint_conversion","extract","complex_conversion","Error","ExtractExt","PyFunctionArguments","PyModule","Python","Target","TryFromPyCell","borrow","borrow_mut","from","from","from","into","into_py_and_maybe_module","try_from","try_from_pycell","try_into","type_id","0","0","PyDowncastError","PyErr","PyResult","borrow","borrow","borrow_mut","borrow_mut","cause","clone_ref","convert","convert","err_state","error_on_minusone","exceptions_must_derive_from_base_exception","fetch","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_instance","from_state","from_type","from_value","get_type","impls","instance","into","into","into_instance","into_py","into_value","is_instance","is_instance_of","make_normalized","matches","new","new","new_type","normalized","occurred","panic_after_error","print","print_and_set_sys_last_vars","ptraceback","ptype","pvalue","restore","set_cause","state","take","to","to_object","to_string","to_string","traceback","try_from","try_from","try_into","try_into","type_id","type_id","type_ptr","value","warn","FfiTuple","LazyTypeAndValue","LazyValue","Normalized","PyErrArguments","PyErrState","PyErrStateNormalized","arguments","borrow","borrow","borrow_mut","borrow_mut","boxed_args","clone","clone_into","exceptions_must_derive_from_base_exception","from","from","into","into","into_ffi_tuple","ptraceback","ptype","pvalue","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","0","ptraceback","ptype","ptype","ptype","pvalue","pvalue","pvalue","impl_to_pyerr","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","PyArithmeticError","PyAssertionError","PyAttributeError","PyBaseException","PyBlockingIOError","PyBrokenPipeError","PyBufferError","PyChildProcessError","PyConnectionAbortedError","PyConnectionError","PyConnectionRefusedError","PyConnectionResetError","PyEOFError","PyEnvironmentError","PyException","PyFileExistsError","PyFileNotFoundError","PyFloatingPointError","PyGeneratorExit","PyIOError","PyImportError","PyIndexError","PyInterruptedError","PyIsADirectoryError","PyKeyError","PyKeyboardInterrupt","PyLookupError","PyMemoryError","PyModuleNotFoundError","PyNameError","PyNotADirectoryError","PyNotImplementedError","PyOSError","PyOverflowError","PyPermissionError","PyProcessLookupError","PyRecursionError","PyReferenceError","PyRuntimeError","PyStopAsyncIteration","PyStopIteration","PySyntaxError","PySystemError","PySystemExit","PyTimeoutError","PyTypeError","PyUnboundLocalError","PyUnicodeDecodeError","PyUnicodeEncodeError","PyUnicodeError","PyUnicodeTranslateError","PyValueError","PyZeroDivisionError","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","asyncio","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","impl_native_exception","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","native_doc","new","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_err","new_utf8","socket","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","0","0","0","0","0","0","0","CancelledError","IncompleteReadError","InvalidStateError","LimitOverrunError","QueueEmpty","QueueFull","TimeoutError","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","into","into","into","into","into","into","into","new_err","new_err","new_err","new_err","new_err","new_err","new_err","source","source","source","source","source","source","source","to_object","to_object","to_object","to_object","to_object","to_object","to_object","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","0","0","0","as_ptr","as_ptr","as_ptr","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","gaierror","herror","into","into","into","new_err","new_err","new_err","source","source","source","timeout","to_object","to_object","to_object","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from_exact","try_from_exact","try_from_exact","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_into","try_into","try_into","type_id","type_id","type_id","type_object","type_object","type_object","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","0","0","0","0","0","0","0","0","0","0","CO_ASYNC_GENERATOR","CO_COROUTINE","CO_FUTURE_ABSOLUTE_IMPORT","CO_FUTURE_BARRY_AS_BDFL","CO_FUTURE_DIVISION","CO_FUTURE_GENERATOR_STOP","CO_FUTURE_PRINT_FUNCTION","CO_FUTURE_UNICODE_LITERALS","CO_FUTURE_WITH_STATEMENT","CO_GENERATOR","CO_ITERABLE_COROUTINE","CO_MAXBLOCKS","CO_NESTED","CO_NEWLOCALS","CO_NOFREE","CO_OPTIMIZED","CO_VARARGS","CO_VARKEYWORDS","DateTimeType","DateTime_FromDateAndTime","DateTime_FromDateAndTimeAndFold","DateTime_FromTimestamp","DateType","Date_FromDate","Date_FromTimestamp","DeltaType","Delta_FromDelta","FUTURE_ABSOLUTE_IMPORT","FUTURE_BARRY_AS_BDFL","FUTURE_DIVISION","FUTURE_GENERATORS","FUTURE_GENERATOR_STOP","FUTURE_NESTED_SCOPES","FUTURE_PRINT_FUNCTION","FUTURE_UNICODE_LITERALS","FUTURE_WITH_STATEMENT","MAX_CO_EXTRA_USERS","METH_CLASS","METH_COEXIST","METH_FASTCALL","METH_KEYWORDS","METH_NOARGS","METH_O","METH_STATIC","METH_VARARGS","PYMEM_DOMAIN_MEM","PYMEM_DOMAIN_OBJ","PYMEM_DOMAIN_RAW","PYOS_STACK_MARGIN","PYTHON_ABI_VERSION","PYTHON_API_VERSION","PY_ITERSEARCH_CONTAINS","PY_ITERSEARCH_COUNT","PY_ITERSEARCH_INDEX","PY_SSIZE_T_MAX","PY_SSIZE_T_MIN","PY_STDIOTEXTMODE","PyASCIIObject","PyAST_CompileEx","PyAST_CompileObject","PyAnySet_Check","PyAnySet_CheckExact","PyArena","PyArg_Parse","PyArg_ParseTuple","PyArg_ParseTupleAndKeywords","PyArg_UnpackTuple","PyArg_ValidateKeywordArguments","PyAsyncGen_CheckExact","PyAsyncGen_Type","PyAsyncMethods","PyBUF_ANY_CONTIGUOUS","PyBUF_CONTIG","PyBUF_CONTIG_RO","PyBUF_C_CONTIGUOUS","PyBUF_FORMAT","PyBUF_FULL","PyBUF_FULL_RO","PyBUF_F_CONTIGUOUS","PyBUF_INDIRECT","PyBUF_MAX_NDIM","PyBUF_ND","PyBUF_READ","PyBUF_RECORDS","PyBUF_RECORDS_RO","PyBUF_SIMPLE","PyBUF_STRIDED","PyBUF_STRIDED_RO","PyBUF_STRIDES","PyBUF_WRITABLE","PyBUF_WRITE","PyBUF_WRITEABLE","PyBaseExceptionObject","PyBaseObject_Type","PyBool_Check","PyBool_FromLong","PyBool_Type","PyBufferProcs","PyBuffer_FillContiguousStrides","PyBuffer_FillInfo","PyBuffer_FromContiguous","PyBuffer_GetPointer","PyBuffer_IsContiguous","PyBuffer_Release","PyBuffer_SizeFromFormat","PyBuffer_ToContiguous","PyByteArrayIter_Type","PyByteArray_AsString","PyByteArray_Check","PyByteArray_CheckExact","PyByteArray_Concat","PyByteArray_FromObject","PyByteArray_FromStringAndSize","PyByteArray_Resize","PyByteArray_Size","PyByteArray_Type","PyBytesIter_Type","PyBytes_AsString","PyBytes_AsStringAndSize","PyBytes_Check","PyBytes_CheckExact","PyBytes_Concat","PyBytes_ConcatAndDel","PyBytes_DecodeEscape","PyBytes_FromFormat","PyBytes_FromObject","PyBytes_FromString","PyBytes_FromStringAndSize","PyBytes_Repr","PyBytes_Size","PyBytes_Type","PyCFunction","PyCFunctionWithKeywords","PyCFunction_Call","PyCFunction_Check","PyCFunction_ClearFreeList","PyCFunction_GetFlags","PyCFunction_GetFunction","PyCFunction_GetSelf","PyCFunction_New","PyCFunction_NewEx","PyCFunction_Type","PyCallIter_Check","PyCallIter_New","PyCallIter_Type","PyCallable_Check","PyCapsule_CheckExact","PyCapsule_Destructor","PyCapsule_GetContext","PyCapsule_GetDestructor","PyCapsule_GetName","PyCapsule_GetPointer","PyCapsule_Import","PyCapsule_IsValid","PyCapsule_New","PyCapsule_SetContext","PyCapsule_SetDestructor","PyCapsule_SetName","PyCapsule_SetPointer","PyCapsule_Type","PyClassMethodDescr_Type","PyCodeObject","PyCode_Addr2Line","PyCode_Check","PyCode_GetNumFree","PyCode_New","PyCode_NewEmpty","PyCode_NewWithPosOnlyArgs","PyCode_Optimize","PyCode_Type","PyCodec_BackslashReplaceErrors","PyCodec_Decode","PyCodec_Decoder","PyCodec_Encode","PyCodec_Encoder","PyCodec_IgnoreErrors","PyCodec_IncrementalDecoder","PyCodec_IncrementalEncoder","PyCodec_KnownEncoding","PyCodec_LookupError","PyCodec_Register","PyCodec_RegisterError","PyCodec_ReplaceErrors","PyCodec_StreamReader","PyCodec_StreamWriter","PyCodec_StrictErrors","PyCodec_XMLCharRefReplaceErrors","PyCompactUnicodeObject","PyCompile_OpcodeStackEffect","PyCompile_OpcodeStackEffectWithJump","PyCompilerFlags","PyComplexObject","PyComplex_AsCComplex","PyComplex_Check","PyComplex_CheckExact","PyComplex_FromCComplex","PyComplex_FromDoubles","PyComplex_ImagAsDouble","PyComplex_RealAsDouble","PyComplex_Type","PyConfig","PyConfig_Clear","PyConfig_InitIsolatedConfig","PyConfig_InitPythonConfig","PyConfig_Read","PyConfig_SetArgv","PyConfig_SetBytesArgv","PyConfig_SetBytesString","PyConfig_SetString","PyConfig_SetWideStringList","PyContextToken_CheckExact","PyContextToken_Type","PyContextVar_CheckExact","PyContextVar_Get","PyContextVar_New","PyContextVar_Reset","PyContextVar_Set","PyContextVar_Type","PyContext_CheckExact","PyContext_Copy","PyContext_CopyCurrent","PyContext_Enter","PyContext_Exit","PyContext_New","PyContext_Type","PyCoro_CheckExact","PyCoro_Type","PyDateTimeAPI","PyDateTime_CAPI","PyDateTime_Check","PyDateTime_CheckExact","PyDateTime_DATE_GET_FOLD","PyDateTime_DATE_GET_HOUR","PyDateTime_DATE_GET_MICROSECOND","PyDateTime_DATE_GET_MINUTE","PyDateTime_DATE_GET_SECOND","PyDateTime_DATE_GET_TZINFO","PyDateTime_DELTA_GET_DAYS","PyDateTime_DELTA_GET_MICROSECONDS","PyDateTime_DELTA_GET_SECONDS","PyDateTime_Date","PyDateTime_DateTime","PyDateTime_Delta","PyDateTime_FromTimestamp","PyDateTime_GET_DAY","PyDateTime_GET_MONTH","PyDateTime_GET_YEAR","PyDateTime_IMPORT","PyDateTime_TIME_GET_FOLD","PyDateTime_TIME_GET_HOUR","PyDateTime_TIME_GET_MICROSECOND","PyDateTime_TIME_GET_MINUTE","PyDateTime_TIME_GET_SECOND","PyDateTime_TIME_GET_TZINFO","PyDateTime_Time","PyDateTime_TimeZone_UTC","PyDate_Check","PyDate_CheckExact","PyDate_FromTimestamp","PyDelta_Check","PyDelta_CheckExact","PyDescr_NewClassMethod","PyDescr_NewGetSet","PyDescr_NewMember","PyDescr_NewMethod","PyDictItems_Check","PyDictItems_Type","PyDictIterItem_Type","PyDictIterKey_Type","PyDictIterValue_Type","PyDictKeysObject","PyDictKeys_Check","PyDictKeys_Type","PyDictObject","PyDictProxy_New","PyDictProxy_Type","PyDictRevIterItem_Type","PyDictRevIterKey_Type","PyDictRevIterValue_Type","PyDictValues_Check","PyDictValues_Type","PyDictViewSet_Check","PyDict_Check","PyDict_CheckExact","PyDict_Clear","PyDict_Contains","PyDict_Copy","PyDict_DelItem","PyDict_DelItemString","PyDict_GetItem","PyDict_GetItemString","PyDict_GetItemWithError","PyDict_Items","PyDict_Keys","PyDict_Merge","PyDict_MergeFromSeq2","PyDict_New","PyDict_Next","PyDict_SetItem","PyDict_SetItemString","PyDict_Size","PyDict_Type","PyDict_Update","PyDict_Values","PyEllipsis_Type","PyEnum_Type","PyErr_BadArgument","PyErr_BadInternalCall","PyErr_CheckSignals","PyErr_Clear","PyErr_Display","PyErr_ExceptionMatches","PyErr_Fetch","PyErr_Format","PyErr_GetExcInfo","PyErr_GivenExceptionMatches","PyErr_NewException","PyErr_NewExceptionWithDoc","PyErr_NoMemory","PyErr_NormalizeException","PyErr_Occurred","PyErr_Print","PyErr_PrintEx","PyErr_ProgramText","PyErr_ResourceWarning","PyErr_Restore","PyErr_SetExcInfo","PyErr_SetFromErrno","PyErr_SetFromErrnoWithFilename","PyErr_SetFromErrnoWithFilenameObject","PyErr_SetFromErrnoWithFilenameObjects","PyErr_SetImportError","PyErr_SetImportErrorSubclass","PyErr_SetInterrupt","PyErr_SetNone","PyErr_SetObject","PyErr_SetString","PyErr_SyntaxLocation","PyErr_SyntaxLocationEx","PyErr_WarnEx","PyErr_WarnExplicit","PyErr_WarnFormat","PyErr_WriteUnraisable","PyEval_AcquireLock","PyEval_AcquireThread","PyEval_CallFunction","PyEval_CallMethod","PyEval_CallObject","PyEval_CallObjectWithKeywords","PyEval_EvalCode","PyEval_EvalCodeEx","PyEval_EvalFrame","PyEval_EvalFrameEx","PyEval_GetBuiltins","PyEval_GetCallStats","PyEval_GetFrame","PyEval_GetFuncDesc","PyEval_GetFuncName","PyEval_GetGlobals","PyEval_GetLocals","PyEval_InitThreads","PyEval_ReleaseLock","PyEval_ReleaseThread","PyEval_RestoreThread","PyEval_SaveThread","PyEval_SetProfile","PyEval_SetTrace","PyEval_ThreadsInitialized","PyExc_ArithmeticError","PyExc_AssertionError","PyExc_AttributeError","PyExc_BaseException","PyExc_BlockingIOError","PyExc_BrokenPipeError","PyExc_BufferError","PyExc_BytesWarning","PyExc_ChildProcessError","PyExc_ConnectionAbortedError","PyExc_ConnectionError","PyExc_ConnectionRefusedError","PyExc_ConnectionResetError","PyExc_DeprecationWarning","PyExc_EOFError","PyExc_EnvironmentError","PyExc_Exception","PyExc_FileExistsError","PyExc_FileNotFoundError","PyExc_FloatingPointError","PyExc_FutureWarning","PyExc_GeneratorExit","PyExc_IOError","PyExc_ImportError","PyExc_ImportWarning","PyExc_IndentationError","PyExc_IndexError","PyExc_InterruptedError","PyExc_IsADirectoryError","PyExc_KeyError","PyExc_KeyboardInterrupt","PyExc_LookupError","PyExc_MemoryError","PyExc_ModuleNotFoundError","PyExc_NameError","PyExc_NotADirectoryError","PyExc_NotImplementedError","PyExc_OSError","PyExc_OverflowError","PyExc_PendingDeprecationWarning","PyExc_PermissionError","PyExc_ProcessLookupError","PyExc_RecursionError","PyExc_RecursionErrorInst","PyExc_ReferenceError","PyExc_ResourceWarning","PyExc_RuntimeError","PyExc_RuntimeWarning","PyExc_StopAsyncIteration","PyExc_StopIteration","PyExc_SyntaxError","PyExc_SyntaxWarning","PyExc_SystemError","PyExc_SystemExit","PyExc_TabError","PyExc_TimeoutError","PyExc_TypeError","PyExc_UnboundLocalError","PyExc_UnicodeDecodeError","PyExc_UnicodeEncodeError","PyExc_UnicodeError","PyExc_UnicodeTranslateError","PyExc_UnicodeWarning","PyExc_UserWarning","PyExc_ValueError","PyExc_Warning","PyExc_ZeroDivisionError","PyExceptionClass_Check","PyExceptionInstance_Check","PyExceptionInstance_Class","PyException_GetCause","PyException_GetContext","PyException_GetTraceback","PyException_SetCause","PyException_SetContext","PyException_SetTraceback","PyFile_FromFd","PyFile_GetLine","PyFile_WriteObject","PyFile_WriteString","PyFilter_Type","PyFloatObject","PyFloat_AS_DOUBLE","PyFloat_AsDouble","PyFloat_Check","PyFloat_CheckExact","PyFloat_FromDouble","PyFloat_FromString","PyFloat_GetInfo","PyFloat_GetMax","PyFloat_GetMin","PyFloat_Type","PyFrameObject","PyFrame_BlockPop","PyFrame_BlockSetup","PyFrame_Check","PyFrame_ClearFreeList","PyFrame_FastToLocals","PyFrame_FastToLocalsWithError","PyFrame_GetLineNumber","PyFrame_LocalsToFast","PyFrame_New","PyFrame_Type","PyFrozenSet_Check","PyFrozenSet_CheckExact","PyFrozenSet_New","PyFrozenSet_Type","PyFunction_Check","PyFunction_GetAnnotations","PyFunction_GetClosure","PyFunction_GetCode","PyFunction_GetDefaults","PyFunction_GetGlobals","PyFunction_GetKwDefaults","PyFunction_GetModule","PyFunction_New","PyFunction_NewWithQualName","PyFunction_SetAnnotations","PyFunction_SetClosure","PyFunction_SetDefaults","PyFunction_SetKwDefaults","PyFunction_Type","PyFutureFeatures","PyFuture_FromAST","PyFuture_FromASTObject","PyGC_Collect","PyGILState_Check","PyGILState_Ensure","PyGILState_GetThisThreadState","PyGILState_LOCKED","PyGILState_Release","PyGILState_STATE","PyGILState_UNLOCKED","PyGenObject","PyGen_Check","PyGen_CheckExact","PyGen_NeedsFinalizing","PyGen_New","PyGen_Type","PyGetSetDef","PyGetSetDescr_Type","PyHash_FuncDef","PyHash_GetFuncDef","PyHeapTypeObject","PyHeapType_GET_MEMBERS","PyImportErrorObject","PyImport_AddModule","PyImport_AddModuleObject","PyImport_AppendInittab","PyImport_Cleanup","PyImport_ExecCodeModule","PyImport_ExecCodeModuleEx","PyImport_ExecCodeModuleObject","PyImport_ExecCodeModuleWithPathnames","PyImport_ExtendInittab","PyImport_FrozenModules","PyImport_GetImporter","PyImport_GetMagicNumber","PyImport_GetMagicTag","PyImport_GetModuleDict","PyImport_Import","PyImport_ImportFrozenModule","PyImport_ImportFrozenModuleObject","PyImport_ImportModule","PyImport_ImportModuleEx","PyImport_ImportModuleLevel","PyImport_ImportModuleLevelObject","PyImport_ImportModuleNoBlock","PyImport_Inittab","PyImport_ReloadModule","PyIndex_Check","PyInterpreterState","PyInterpreterState_Clear","PyInterpreterState_Delete","PyInterpreterState_GetDict","PyInterpreterState_GetID","PyInterpreterState_Head","PyInterpreterState_Main","PyInterpreterState_New","PyInterpreterState_Next","PyInterpreterState_ThreadHead","PyIter_Check","PyIter_Next","PyListIter_Type","PyListObject","PyListRevIter_Type","PyList_Append","PyList_AsTuple","PyList_Check","PyList_CheckExact","PyList_GET_ITEM","PyList_GET_SIZE","PyList_GetItem","PyList_GetSlice","PyList_Insert","PyList_New","PyList_Reverse","PyList_SET_ITEM","PyList_SetItem","PyList_SetSlice","PyList_Size","PyList_Sort","PyList_Type","PyLongObject","PyLongRangeIter_Type","PyLong_AsDouble","PyLong_AsLong","PyLong_AsLongAndOverflow","PyLong_AsLongLong","PyLong_AsLongLongAndOverflow","PyLong_AsSize_t","PyLong_AsSsize_t","PyLong_AsUnsignedLong","PyLong_AsUnsignedLongLong","PyLong_AsUnsignedLongLongMask","PyLong_AsUnsignedLongMask","PyLong_AsVoidPtr","PyLong_Check","PyLong_CheckExact","PyLong_FromDouble","PyLong_FromLong","PyLong_FromLongLong","PyLong_FromSize_t","PyLong_FromSsize_t","PyLong_FromString","PyLong_FromUnsignedLong","PyLong_FromUnsignedLongLong","PyLong_FromVoidPtr","PyLong_GetInfo","PyLong_Type","PyMap_Type","PyMappingMethods","PyMapping_Check","PyMapping_DelItem","PyMapping_DelItemString","PyMapping_GetItemString","PyMapping_HasKey","PyMapping_HasKeyString","PyMapping_Items","PyMapping_Keys","PyMapping_Length","PyMapping_SetItemString","PyMapping_Size","PyMapping_Values","PyMarshal_ReadObjectFromString","PyMarshal_WriteObjectToString","PyMemAllocatorDomain","PyMemAllocatorEx","PyMem_Calloc","PyMem_Free","PyMem_GetAllocator","PyMem_Malloc","PyMem_RawCalloc","PyMem_RawFree","PyMem_RawMalloc","PyMem_RawRealloc","PyMem_Realloc","PyMem_SetAllocator","PyMem_SetupDebugHooks","PyMemberDescr_Type","PyMemoryView_Check","PyMemoryView_FromMemory","PyMemoryView_FromObject","PyMemoryView_GetContiguous","PyMemoryView_Type","PyMethodDef","PyMethodDescr_Type","PyModuleDef","PyModuleDef_Base","PyModuleDef_HEAD_INIT","PyModuleDef_Init","PyModuleDef_Slot","PyModuleDef_Type","PyModule_AddFunctions","PyModule_AddIntConstant","PyModule_AddObject","PyModule_AddStringConstant","PyModule_Check","PyModule_CheckExact","PyModule_Create","PyModule_Create2","PyModule_ExecDef","PyModule_FromDefAndSpec","PyModule_FromDefAndSpec2","PyModule_GetDef","PyModule_GetDict","PyModule_GetFilename","PyModule_GetFilenameObject","PyModule_GetName","PyModule_GetNameObject","PyModule_GetState","PyModule_New","PyModule_NewObject","PyModule_SetDocString","PyModule_Type","PyNode_Compile","PyNumberMethods","PyNumber_Absolute","PyNumber_Add","PyNumber_And","PyNumber_AsSsize_t","PyNumber_Check","PyNumber_Divmod","PyNumber_Float","PyNumber_FloorDivide","PyNumber_InPlaceAdd","PyNumber_InPlaceAnd","PyNumber_InPlaceFloorDivide","PyNumber_InPlaceLshift","PyNumber_InPlaceMatrixMultiply","PyNumber_InPlaceMultiply","PyNumber_InPlaceOr","PyNumber_InPlacePower","PyNumber_InPlaceRemainder","PyNumber_InPlaceRshift","PyNumber_InPlaceSubtract","PyNumber_InPlaceTrueDivide","PyNumber_InPlaceXor","PyNumber_Index","PyNumber_Invert","PyNumber_Long","PyNumber_Lshift","PyNumber_MatrixMultiply","PyNumber_Multiply","PyNumber_Negative","PyNumber_Or","PyNumber_Positive","PyNumber_Power","PyNumber_Remainder","PyNumber_Rshift","PyNumber_Subtract","PyNumber_ToBase","PyNumber_TrueDivide","PyNumber_Xor","PyOSErrorObject","PyOS_AfterFork","PyOS_AfterFork_Child","PyOS_AfterFork_Parent","PyOS_BeforeFork","PyOS_FSPath","PyOS_InitInterrupts","PyOS_InterruptOccurred","PyOS_double_to_string","PyOS_getsig","PyOS_setsig","PyOS_string_to_double","PyOS_strtol","PyOS_strtoul","PyObject","PyObjectArenaAllocator","PyObject_ASCII","PyObject_AsFileDescriptor","PyObject_Bytes","PyObject_Call","PyObject_CallFinalizer","PyObject_CallFinalizerFromDealloc","PyObject_CallFunction","PyObject_CallFunctionObjArgs","PyObject_CallMethod","PyObject_CallMethodObjArgs","PyObject_CallNoArgs","PyObject_CallObject","PyObject_CallOneArg","PyObject_Calloc","PyObject_CheckBuffer","PyObject_ClearWeakRefs","PyObject_CopyData","PyObject_DelAttr","PyObject_DelAttrString","PyObject_DelItem","PyObject_DelItemString","PyObject_Dir","PyObject_Format","PyObject_Free","PyObject_GC_Del","PyObject_GC_Track","PyObject_GC_UnTrack","PyObject_GET_WEAKREFS_LISTPTR","PyObject_GenericGetAttr","PyObject_GenericGetDict","PyObject_GenericSetAttr","PyObject_GenericSetDict","PyObject_GetArenaAllocator","PyObject_GetAttr","PyObject_GetAttrString","PyObject_GetBuffer","PyObject_GetItem","PyObject_GetIter","PyObject_HEAD_INIT","PyObject_HasAttr","PyObject_HasAttrString","PyObject_Hash","PyObject_HashNotImplemented","PyObject_IS_GC","PyObject_Init","PyObject_InitVar","PyObject_IsInstance","PyObject_IsSubclass","PyObject_IsTrue","PyObject_Length","PyObject_LengthHint","PyObject_Malloc","PyObject_Not","PyObject_Print","PyObject_Realloc","PyObject_Repr","PyObject_RichCompare","PyObject_RichCompareBool","PyObject_SelfIter","PyObject_SetArenaAllocator","PyObject_SetAttr","PyObject_SetAttrString","PyObject_SetItem","PyObject_Size","PyObject_Str","PyObject_Type","PyObject_TypeCheck","PyObject_Vectorcall","PyObject_VectorcallDict","PyParser_ASTFromFile","PyParser_ASTFromFileObject","PyParser_ASTFromString","PyParser_ASTFromStringObject","PyParser_SimpleParseFile","PyParser_SimpleParseFileFlags","PyParser_SimpleParseString","PyParser_SimpleParseStringFlags","PyParser_SimpleParseStringFlagsFilename","PyPreConfig","PyPreConfig_InitIsolatedConfig","PyPreConfig_InitPythonConfig","PyProperty_Type","PyRangeIter_Type","PyRange_Check","PyRange_Type","PyReversed_Type","PyRun_AnyFile","PyRun_AnyFileEx","PyRun_AnyFileExFlags","PyRun_AnyFileFlags","PyRun_File","PyRun_FileEx","PyRun_FileExFlags","PyRun_FileFlags","PyRun_InteractiveLoop","PyRun_InteractiveLoopFlags","PyRun_InteractiveOne","PyRun_InteractiveOneFlags","PyRun_InteractiveOneObject","PyRun_SimpleFile","PyRun_SimpleFileEx","PyRun_SimpleFileExFlags","PyRun_SimpleString","PyRun_SimpleStringFlags","PyRun_String","PyRun_StringFlags","PySeqIter_Check","PySeqIter_New","PySeqIter_Type","PySequenceMethods","PySequence_Check","PySequence_Concat","PySequence_Contains","PySequence_Count","PySequence_DelItem","PySequence_DelSlice","PySequence_Fast","PySequence_GetItem","PySequence_GetSlice","PySequence_In","PySequence_InPlaceConcat","PySequence_InPlaceRepeat","PySequence_Index","PySequence_Length","PySequence_List","PySequence_Repeat","PySequence_SetItem","PySequence_SetSlice","PySequence_Size","PySequence_Tuple","PySetIter_Type","PySetObject","PySet_Add","PySet_Check","PySet_Clear","PySet_Contains","PySet_Discard","PySet_MINSIZE","PySet_New","PySet_Pop","PySet_Size","PySet_Type","PySliceObject","PySlice_AdjustIndices","PySlice_Check","PySlice_GetIndices","PySlice_GetIndicesEx","PySlice_New","PySlice_Type","PySlice_Unpack","PyState_AddModule","PyState_FindModule","PyState_RemoveModule","PyStatus","PyStatus_Error","PyStatus_Exception","PyStatus_Exit","PyStatus_IsError","PyStatus_IsExit","PyStatus_NoMemory","PyStatus_Ok","PyStopIterationObject","PyStructSequence","PyStructSequence_Desc","PyStructSequence_Field","PyStructSequence_GET_ITEM","PyStructSequence_GetItem","PyStructSequence_InitType","PyStructSequence_InitType2","PyStructSequence_New","PyStructSequence_NewType","PyStructSequence_SET_ITEM","PyStructSequence_SetItem","PySuper_Type","PySyntaxErrorObject","PySys_AddWarnOption","PySys_AddWarnOptionUnicode","PySys_AddXOption","PySys_FormatStderr","PySys_FormatStdout","PySys_GetObject","PySys_GetXOptions","PySys_HasWarnOptions","PySys_ResetWarnOptions","PySys_SetArgv","PySys_SetArgvEx","PySys_SetObject","PySys_SetPath","PySys_WriteStderr","PySys_WriteStdout","PySystemExitObject","PyTZInfo_Check","PyTZInfo_CheckExact","PyThreadState","PyThreadState_Clear","PyThreadState_Delete","PyThreadState_GET","PyThreadState_Get","PyThreadState_GetDict","PyThreadState_New","PyThreadState_Next","PyThreadState_SetAsyncExc","PyThreadState_Swap","PyTime_Check","PyTime_CheckExact","PyTraceBack_Check","PyTraceBack_Here","PyTraceBack_Print","PyTraceBack_Type","PyTrace_CALL","PyTrace_C_CALL","PyTrace_C_EXCEPTION","PyTrace_C_RETURN","PyTrace_EXCEPTION","PyTrace_LINE","PyTrace_OPCODE","PyTrace_RETURN","PyTryBlock","PyTupleIter_Type","PyTupleObject","PyTuple_Check","PyTuple_CheckExact","PyTuple_ClearFreeList","PyTuple_GET_ITEM","PyTuple_GET_SIZE","PyTuple_GetItem","PyTuple_GetSlice","PyTuple_New","PyTuple_Pack","PyTuple_SET_ITEM","PyTuple_SetItem","PyTuple_Size","PyTuple_Type","PyTypeObject","PyTypeObject","PyType_Check","PyType_CheckExact","PyType_ClearCache","PyType_FastSubclass","PyType_FromSpec","PyType_FromSpecWithBases","PyType_GenericAlloc","PyType_GenericNew","PyType_GetFlags","PyType_GetSlot","PyType_HasFeature","PyType_IS_GC","PyType_IsSubtype","PyType_Modified","PyType_Ready","PyType_SUPPORTS_WEAKREFS","PyType_Slot","PyType_Spec","PyType_Type","PyUnicodeDecodeError_Create","PyUnicodeDecodeError_GetEncoding","PyUnicodeDecodeError_GetEnd","PyUnicodeDecodeError_GetObject","PyUnicodeDecodeError_GetReason","PyUnicodeDecodeError_GetStart","PyUnicodeDecodeError_SetEnd","PyUnicodeDecodeError_SetReason","PyUnicodeDecodeError_SetStart","PyUnicodeEncodeError_GetEncoding","PyUnicodeEncodeError_GetEnd","PyUnicodeEncodeError_GetObject","PyUnicodeEncodeError_GetReason","PyUnicodeEncodeError_GetStart","PyUnicodeEncodeError_SetEnd","PyUnicodeEncodeError_SetReason","PyUnicodeEncodeError_SetStart","PyUnicodeErrorObject","PyUnicodeIter_Type","PyUnicodeObject","PyUnicodeObjectData","PyUnicodeTranslateError_GetEnd","PyUnicodeTranslateError_GetObject","PyUnicodeTranslateError_GetReason","PyUnicodeTranslateError_GetStart","PyUnicodeTranslateError_SetEnd","PyUnicodeTranslateError_SetReason","PyUnicodeTranslateError_SetStart","PyUnicode_1BYTE_DATA","PyUnicode_1BYTE_KIND","PyUnicode_2BYTE_DATA","PyUnicode_2BYTE_KIND","PyUnicode_4BYTE_DATA","PyUnicode_4BYTE_KIND","PyUnicode_Append","PyUnicode_AppendAndDel","PyUnicode_AsASCIIString","PyUnicode_AsCharmapString","PyUnicode_AsDecodedObject","PyUnicode_AsDecodedUnicode","PyUnicode_AsEncodedObject","PyUnicode_AsEncodedString","PyUnicode_AsEncodedUnicode","PyUnicode_AsLatin1String","PyUnicode_AsRawUnicodeEscapeString","PyUnicode_AsUCS4","PyUnicode_AsUCS4Copy","PyUnicode_AsUTF16String","PyUnicode_AsUTF32String","PyUnicode_AsUTF8","PyUnicode_AsUTF8AndSize","PyUnicode_AsUTF8String","PyUnicode_AsUnicode","PyUnicode_AsUnicodeAndSize","PyUnicode_AsUnicodeEscapeString","PyUnicode_AsWideChar","PyUnicode_AsWideCharString","PyUnicode_BuildEncodingMap","PyUnicode_Check","PyUnicode_CheckExact","PyUnicode_ClearFreeList","PyUnicode_Compare","PyUnicode_CompareWithASCIIString","PyUnicode_Concat","PyUnicode_Contains","PyUnicode_CopyCharacters","PyUnicode_Count","PyUnicode_DATA","PyUnicode_Decode","PyUnicode_DecodeASCII","PyUnicode_DecodeCharmap","PyUnicode_DecodeFSDefault","PyUnicode_DecodeFSDefaultAndSize","PyUnicode_DecodeLatin1","PyUnicode_DecodeLocale","PyUnicode_DecodeLocaleAndSize","PyUnicode_DecodeRawUnicodeEscape","PyUnicode_DecodeUTF16","PyUnicode_DecodeUTF16Stateful","PyUnicode_DecodeUTF32","PyUnicode_DecodeUTF32Stateful","PyUnicode_DecodeUTF7","PyUnicode_DecodeUTF7Stateful","PyUnicode_DecodeUTF8","PyUnicode_DecodeUTF8Stateful","PyUnicode_DecodeUnicodeEscape","PyUnicode_Encode","PyUnicode_EncodeASCII","PyUnicode_EncodeCharmap","PyUnicode_EncodeDecimal","PyUnicode_EncodeFSDefault","PyUnicode_EncodeLatin1","PyUnicode_EncodeLocale","PyUnicode_EncodeRawUnicodeEscape","PyUnicode_EncodeUTF16","PyUnicode_EncodeUTF32","PyUnicode_EncodeUTF7","PyUnicode_EncodeUTF8","PyUnicode_EncodeUnicodeEscape","PyUnicode_FSConverter","PyUnicode_FSDecoder","PyUnicode_Fill","PyUnicode_Find","PyUnicode_FindChar","PyUnicode_Format","PyUnicode_FromEncodedObject","PyUnicode_FromFormat","PyUnicode_FromKindAndData","PyUnicode_FromObject","PyUnicode_FromOrdinal","PyUnicode_FromString","PyUnicode_FromStringAndSize","PyUnicode_FromUnicode","PyUnicode_FromWideChar","PyUnicode_GET_LENGTH","PyUnicode_GetDefaultEncoding","PyUnicode_GetLength","PyUnicode_GetSize","PyUnicode_IS_ASCII","PyUnicode_IS_COMPACT","PyUnicode_IS_COMPACT_ASCII","PyUnicode_IS_READY","PyUnicode_InternFromString","PyUnicode_InternImmortal","PyUnicode_InternInPlace","PyUnicode_IsIdentifier","PyUnicode_Join","PyUnicode_KIND","PyUnicode_New","PyUnicode_Partition","PyUnicode_READY","PyUnicode_RPartition","PyUnicode_RSplit","PyUnicode_ReadChar","PyUnicode_Replace","PyUnicode_Resize","PyUnicode_RichCompare","PyUnicode_Split","PyUnicode_Splitlines","PyUnicode_Substring","PyUnicode_Tailmatch","PyUnicode_TransformDecimalToASCII","PyUnicode_Translate","PyUnicode_TranslateCharmap","PyUnicode_Type","PyUnicode_WCHAR_KIND","PyUnicode_WriteChar","PyVarObject","PyVectorcall_Call","PyVectorcall_Function","PyVectorcall_NARGS","PyWeakReference","PyWeakref_Check","PyWeakref_CheckProxy","PyWeakref_CheckRef","PyWeakref_CheckRefExact","PyWeakref_GetObject","PyWeakref_NewProxy","PyWeakref_NewRef","PyWideStringList","PyWideStringList_Append","PyWideStringList_Insert","PyWrapperDescr_Type","PyWrapper_New","PyZip_Type","Py_AddPendingCall","Py_AtExit","Py_BuildValue","Py_BytesMain","Py_BytesWarningFlag","Py_CLEANUP_SUPPORTED","Py_CLEAR","Py_CompileString","Py_CompileStringExFlags","Py_CompileStringFlags","Py_CompileStringObject","Py_DECREF","Py_DTSF_ADD_DOT_0","Py_DTSF_ALT","Py_DTSF_SIGN","Py_DTST_FINITE","Py_DTST_INFINITE","Py_DTST_NAN","Py_DebugFlag","Py_DecRef","Py_DecodeLocale","Py_DontWriteBytecodeFlag","Py_EQ","Py_Ellipsis","Py_EncodeLocale","Py_EndInterpreter","Py_Exit","Py_False","Py_FatalError","Py_FileSystemDefaultEncodeErrors","Py_FileSystemDefaultEncoding","Py_Finalize","Py_FinalizeEx","Py_FrozenFlag","Py_GE","Py_GT","Py_GetArgcArgv","Py_GetBuildInfo","Py_GetCompiler","Py_GetCopyright","Py_GetExecPrefix","Py_GetPath","Py_GetPlatform","Py_GetPrefix","Py_GetProgramFullPath","Py_GetProgramName","Py_GetPythonHome","Py_GetRecursionLimit","Py_GetVersion","Py_HASH_EXTERNAL","Py_HASH_FNV","Py_HASH_SIPHASH24","Py_HasFileSystemDefaultEncoding","Py_HashRandomizationFlag","Py_INCREF","Py_IS_TYPE","Py_IgnoreEnvironmentFlag","Py_IncRef","Py_Initialize","Py_InitializeEx","Py_InitializeFromConfig","Py_InspectFlag","Py_InteractiveFlag","Py_Is","Py_IsFalse","Py_IsInitialized","Py_IsNone","Py_IsTrue","Py_IsolatedFlag","Py_LE","Py_LT","Py_Main","Py_MakePendingCalls","Py_NE","Py_NewInterpreter","Py_NoSiteFlag","Py_NoUserSiteDirectory","Py_None","Py_NotImplemented","Py_OptimizeFlag","Py_PRINT_RAW","Py_PreInitialize","Py_PreInitializeFromArgs","Py_PreInitializeFromBytesArgs","Py_QuietFlag","Py_REFCNT","Py_ReprEnter","Py_ReprLeave","Py_RunMain","Py_SIZE","Py_SetPath","Py_SetProgramName","Py_SetPythonHome","Py_SetRecursionLimit","Py_SymtableString","Py_SymtableStringObject","Py_TPFLAGS_BASETYPE","Py_TPFLAGS_BASE_EXC_SUBCLASS","Py_TPFLAGS_BYTES_SUBCLASS","Py_TPFLAGS_DEFAULT","Py_TPFLAGS_DICT_SUBCLASS","Py_TPFLAGS_HAVE_FINALIZE","Py_TPFLAGS_HAVE_GC","Py_TPFLAGS_HAVE_VECTORCALL","Py_TPFLAGS_HAVE_VERSION_TAG","Py_TPFLAGS_HEAPTYPE","Py_TPFLAGS_IS_ABSTRACT","Py_TPFLAGS_LIST_SUBCLASS","Py_TPFLAGS_LONG_SUBCLASS","Py_TPFLAGS_READY","Py_TPFLAGS_READYING","Py_TPFLAGS_TUPLE_SUBCLASS","Py_TPFLAGS_TYPE_SUBCLASS","Py_TPFLAGS_UNICODE_SUBCLASS","Py_TPFLAGS_VALID_VERSION_TAG","Py_TYPE","Py_True","Py_UCS1","Py_UCS2","Py_UCS4","Py_UNICODE","Py_UNICODE_REPLACEMENT_CHARACTER","Py_UnbufferedStdioFlag","Py_UseClassExceptionsFlag","Py_VerboseFlag","Py_XDECREF","Py_XINCREF","Py_am_aiter","Py_am_anext","Py_am_await","Py_bf_getbuffer","Py_bf_releasebuffer","Py_buffer","Py_complex","Py_eval_input","Py_file_input","Py_func_type_input","Py_hash_t","Py_intptr_t","Py_mod_create","Py_mod_exec","Py_mp_ass_subscript","Py_mp_length","Py_mp_subscript","Py_nb_absolute","Py_nb_add","Py_nb_and","Py_nb_bool","Py_nb_divmod","Py_nb_float","Py_nb_floor_divide","Py_nb_index","Py_nb_inplace_add","Py_nb_inplace_and","Py_nb_inplace_floor_divide","Py_nb_inplace_lshift","Py_nb_inplace_matrix_multiply","Py_nb_inplace_multiply","Py_nb_inplace_or","Py_nb_inplace_power","Py_nb_inplace_remainder","Py_nb_inplace_rshift","Py_nb_inplace_subtract","Py_nb_inplace_true_divide","Py_nb_inplace_xor","Py_nb_int","Py_nb_invert","Py_nb_lshift","Py_nb_matrix_multiply","Py_nb_multiply","Py_nb_negative","Py_nb_or","Py_nb_positive","Py_nb_power","Py_nb_remainder","Py_nb_rshift","Py_nb_subtract","Py_nb_true_divide","Py_nb_xor","Py_single_input","Py_sq_ass_item","Py_sq_concat","Py_sq_contains","Py_sq_inplace_concat","Py_sq_inplace_repeat","Py_sq_item","Py_sq_length","Py_sq_repeat","Py_ssize_t","Py_tp_alloc","Py_tp_base","Py_tp_bases","Py_tp_call","Py_tp_clear","Py_tp_dealloc","Py_tp_del","Py_tp_descr_get","Py_tp_descr_set","Py_tp_doc","Py_tp_finalize","Py_tp_free","Py_tp_getattr","Py_tp_getattro","Py_tp_getset","Py_tp_hash","Py_tp_init","Py_tp_is_gc","Py_tp_iter","Py_tp_iternext","Py_tp_members","Py_tp_methods","Py_tp_new","Py_tp_repr","Py_tp_richcompare","Py_tp_setattr","Py_tp_setattro","Py_tp_str","Py_tp_traverse","Py_tracefunc","Py_uhash_t","Py_uintptr_t","SSTATE_INTERNED_IMMORTAL","SSTATE_INTERNED_MORTAL","SSTATE_NOT_INTERNED","TZInfoType","TimeType","TimeZone_FromTimeZone","TimeZone_UTC","Time_FromTime","Time_FromTimeAndFold","_PyBytes_Resize","_PyCFunctionFast","_PyCFunctionFastWithKeywords","_PyCode_GetExtra","_PyCode_SetExtra","_PyCoroWrapper_Type","_PyDateTimeAPI_impl","_PyDateTime_TimeZone_UTC_impl","_PyDict_Contains","_PyDict_NewPresized","_PyDict_Next","_PyDict_SetItem_KnownHash","_PyErr_BadInternalCall","_PyEval_EvalFrameDefault","_PyEval_RequestCodeExtraIndex","_PyHASH_MULTIPLIER","_PyImport_AcquireLock","_PyImport_FindBuiltin","_PyImport_FindExtensionObject","_PyImport_FixupBuiltin","_PyImport_FixupExtensionObject","_PyImport_IsInitialized","_PyImport_ReleaseLock","_PyImport_SetModule","_PyImport_SetModuleString","_PyLong_AsByteArray","_PyLong_FromByteArray","_PyLong_NumBits","_PyObject_CallNoArg","_PyObject_FastCall","_PyObject_FastCallTstate","_PyObject_GC_Calloc","_PyObject_GC_Malloc","_PyObject_GC_New","_PyObject_GC_NewVar","_PyObject_GC_Resize","_PyObject_GetDictPtr","_PyObject_MakeTpCall","_PyObject_New","_PyObject_NewVar","_PyObject_NextNotImplemented","_PyObject_VectorcallTstate","_PyOpcache","_PyRun_AnyFileObject","_PyRun_InteractiveLoopObject","_PyRun_SimpleFileObject","_PySequence_IterSearch","_PySet_NextEntry","_PyStack_AsDict","_PyStatus_TYPE","_PyStatus_TYPE_ERROR","_PyStatus_TYPE_EXIT","_PyStatus_TYPE_OK","_PyUnicode_COMPACT_DATA","_PyUnicode_CheckConsistency","_PyUnicode_NONCOMPACT_DATA","_PyUnicode_Ready","_Py_CheckFunctionResult","_Py_Dealloc","_Py_GetAllocatedBlocks","_Py_HashBytes","_Py_InitializeMain","_Py_IsCoreInitialized","_Py_NewRef","_Py_PackageContext","_Py_XNewRef","_Py_c_abs","_Py_c_diff","_Py_c_neg","_Py_c_pow","_Py_c_prod","_Py_c_quot","_Py_c_sum","_base","_base","_config_init","_config_init","_frozen","_init_main","_inittab","_install_importlib","_mod","_node","_type","abstract_","alloc","allocated","allocator","allocfunc","am_aiter","am_anext","am_await","any","args","argv","as_async","as_buffer","as_mapping","as_number","as_sequence","b_handler","b_level","b_type","base_exec_prefix","base_executable","base_prefix","basicsize","bf_getbuffer","bf_releasebuffer","binaryfunc","bltinmodule","boolobject","buf","buffered_stdio","bytearrayobject","bytes_warning","bytesobject","calloc","cause","ceval","cf_flags","check_hash_pycs_mode","closure","co_argcount","co_cell2arg","co_cellvars","co_code","co_consts","co_extra","co_filename","co_firstlineno","co_flags","co_freevars","co_kwonlyargcount","co_lnotab","co_name","co_names","co_nlocals","co_opcache","co_opcache_flag","co_opcache_map","co_opcache_size","co_posonlyargcount","co_stacksize","co_varnames","co_weakreflist","co_zombieframe","code","code","code","codecs","coerce_c_locale","coerce_c_locale_warn","compile","complexobject","configure_c_stdio","configure_locale","context","context","cpython","ctx","ctx","cval","data","data","data","data","datetime","days","descrgetfunc","descrobject","descrsetfunc","destructor","dev_mode","dev_mode","dict","dictobject","doc","doc","doc","dump_refs","encoding","end","enumobject","err_msg","eval","exception_base","exception_base","exception_base","exception_base","exception_base","exception_base","exec_prefix","executable","exitcode","f_back","f_blockstack","f_builtins","f_code","f_exc_traceback","f_exc_type","f_exc_value","f_executing","f_gen","f_globals","f_iblock","f_lasti","f_lineno","f_locals","f_localsplus","f_stacktop","f_trace","f_valuestack","faulthandler","ff_features","ff_lineno","fields","filename","filename","filename2","fileobject","filesystem_encoding","filesystem_errors","fileutils","fill","finger","flags","floatobject","fold","fold","format","free","free","freefunc","func","funcobject","genobject","get","getattrfunc","getattrofunc","getbufferproc","getiterfunc","getter","gi_code","gi_frame","gi_running","gi_weakreflist","hash","hash","hash","hash","hash_bits","hash_seed","hashcode","hashcode","hashcode","hashcode","hashfunc","hastzinfo","hastzinfo","hastzinfo","home","ht_cached_keys","ht_name","ht_qualname","ht_slots","ht_type","imag","import","import_time","initfun","initproc","inner","inner","inquiry","inspect","install_signal_handlers","interactive","internal","intrcheck","isolated","isolated","items","itemsize","itemsize","iternextfunc","iterobject","key","latin1","len","lenfunc","length","length","lineno","listobject","longobject","m_base","m_clear","m_copy","m_doc","m_free","m_index","m_init","m_methods","m_name","m_size","m_slots","m_traverse","ma_keys","ma_used","ma_values","ma_version_tag","malloc","malloc_stats","marshal","mask","memoryobject","methodobject","microseconds","ml_doc","ml_flags","ml_meth","ml_name","modsupport","module_search_paths","module_search_paths_set","moduleobject","mp_ass_subscript","mp_length","mp_subscript","msg","msg","myerrno","n_in_sequence","name","name","name","name","name","name","name","name","nb_absolute","nb_add","nb_and","nb_bool","nb_divmod","nb_float","nb_floor_divide","nb_index","nb_inplace_add","nb_inplace_and","nb_inplace_floor_divide","nb_inplace_lshift","nb_inplace_matrix_multiply","nb_inplace_multiply","nb_inplace_or","nb_inplace_power","nb_inplace_remainder","nb_inplace_rshift","nb_inplace_subtract","nb_inplace_true_divide","nb_inplace_xor","nb_int","nb_invert","nb_lshift","nb_matrix_multiply","nb_multiply","nb_negative","nb_or","nb_positive","nb_power","nb_remainder","nb_reserved","nb_rshift","nb_subtract","nb_true_divide","nb_xor","ndim","newfunc","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_fval","ob_item","ob_item","ob_refcnt","ob_refcnt","ob_size","ob_type","ob_type","obj","object","object","objimpl","objobjargproc","objobjproc","offset","opaque_struct","optimization_level","osmodule","parse_argv","parse_argv","parser_debug","path","pathconfig_warnings","pfunc","prefix","print_file_and_line","printfunc","program_name","pyarena","pycache_prefix","pycapsule","pyerrors","pyframe","pyhash","pylifecycle","pymem","pyport","pystate","pystrtod","pythonpath_env","pythonrun","quiet","rangeobject","readonly","real","realloc","reason","releasebufferproc","reprfunc","richcmpfunc","run_command","run_filename","run_module","seconds","seed_bits","set","setattrfunc","setattrofunc","setentry","setobject","setter","shape","show_alloc_count","show_ref_count","site_import","size","skip_source_first_line","sliceobject","slot","slot","slots","smalltable","sq_ass_item","sq_concat","sq_contains","sq_inplace_concat","sq_inplace_repeat","sq_item","sq_length","sq_repeat","ssizeargfunc","ssizeobjargproc","ssizessizeargfunc","ssizessizeobjargproc","start","start","state","stdio_encoding","stdio_errors","step","stop","strerror","strides","structmember","structseq","suboffsets","suppress_context","symtable","sysmodule","table","ternaryfunc","text","tp_alloc","tp_alloc","tp_as_async","tp_as_async","tp_as_buffer","tp_as_buffer","tp_as_mapping","tp_as_mapping","tp_as_number","tp_as_number","tp_as_sequence","tp_as_sequence","tp_base","tp_base","tp_bases","tp_bases","tp_basicsize","tp_basicsize","tp_cache","tp_cache","tp_call","tp_call","tp_clear","tp_clear","tp_dealloc","tp_dealloc","tp_del","tp_del","tp_descr_get","tp_descr_get","tp_descr_set","tp_descr_set","tp_dict","tp_dict","tp_dictoffset","tp_dictoffset","tp_doc","tp_doc","tp_finalize","tp_finalize","tp_flags","tp_flags","tp_free","tp_free","tp_getattr","tp_getattr","tp_getattro","tp_getattro","tp_getset","tp_getset","tp_hash","tp_hash","tp_init","tp_init","tp_is_gc","tp_is_gc","tp_itemsize","tp_itemsize","tp_iter","tp_iter","tp_iternext","tp_iternext","tp_members","tp_members","tp_methods","tp_methods","tp_mro","tp_mro","tp_name","tp_name","tp_new","tp_new","tp_repr","tp_repr","tp_richcompare","tp_richcompare","tp_setattr","tp_setattr","tp_setattro","tp_setattro","tp_str","tp_str","tp_subclasses","tp_subclasses","tp_traverse","tp_traverse","tp_vectorcall","tp_vectorcall","tp_vectorcall_offset","tp_vectorcall_offset","tp_version_tag","tp_version_tag","tp_weaklist","tp_weaklist","tp_weaklistoffset","tp_weaklistoffset","traceback","traceback","tracemalloc","traverseproc","tupleobject","typeslots","tzinfo","tzinfo","ucs2","ucs4","unaryfunc","unicodeobject","use_environment","use_environment","use_hash_seed","used","user_site_directory","utf8","utf8_length","utf8_mode","value","value","vectorcallfunc","verbose","visitproc","warnings","warnoptions","was_sq_ass_slice","was_sq_slice","weakreflist","weakrefobject","write_bytecode","written","wstr","wstr_length","xoptions","PyIndex_Check","PyIter_Check","PyIter_Next","PyMapping_Check","PyMapping_DelItem","PyMapping_DelItemString","PyMapping_GetItemString","PyMapping_HasKey","PyMapping_HasKeyString","PyMapping_Items","PyMapping_Keys","PyMapping_Length","PyMapping_SetItemString","PyMapping_Size","PyMapping_Values","PyNumber_Absolute","PyNumber_Add","PyNumber_And","PyNumber_AsSsize_t","PyNumber_Check","PyNumber_Divmod","PyNumber_Float","PyNumber_FloorDivide","PyNumber_InPlaceAdd","PyNumber_InPlaceAnd","PyNumber_InPlaceFloorDivide","PyNumber_InPlaceLshift","PyNumber_InPlaceMatrixMultiply","PyNumber_InPlaceMultiply","PyNumber_InPlaceOr","PyNumber_InPlacePower","PyNumber_InPlaceRemainder","PyNumber_InPlaceRshift","PyNumber_InPlaceSubtract","PyNumber_InPlaceTrueDivide","PyNumber_InPlaceXor","PyNumber_Index","PyNumber_Invert","PyNumber_Long","PyNumber_Lshift","PyNumber_MatrixMultiply","PyNumber_Multiply","PyNumber_Negative","PyNumber_Or","PyNumber_Positive","PyNumber_Power","PyNumber_Remainder","PyNumber_Rshift","PyNumber_Subtract","PyNumber_ToBase","PyNumber_TrueDivide","PyNumber_Xor","PyObject_Call","PyObject_CallFunction","PyObject_CallFunctionObjArgs","PyObject_CallMethod","PyObject_CallMethodObjArgs","PyObject_CallNoArgs","PyObject_CallObject","PyObject_DelAttr","PyObject_DelAttrString","PyObject_DelItem","PyObject_DelItemString","PyObject_Format","PyObject_GetItem","PyObject_GetIter","PyObject_IsInstance","PyObject_IsSubclass","PyObject_Length","PyObject_SetItem","PyObject_Size","PyObject_Type","PySequence_Check","PySequence_Concat","PySequence_Contains","PySequence_Count","PySequence_DelItem","PySequence_DelSlice","PySequence_Fast","PySequence_GetItem","PySequence_GetSlice","PySequence_In","PySequence_InPlaceConcat","PySequence_InPlaceRepeat","PySequence_Index","PySequence_Length","PySequence_List","PySequence_Repeat","PySequence_SetItem","PySequence_SetSlice","PySequence_Size","PySequence_Tuple","PyFilter_Type","PyMap_Type","PyZip_Type","PyBool_Check","PyBool_FromLong","PyBool_Type","Py_False","Py_IsFalse","Py_IsTrue","Py_True","_Py_FalseStruct","_Py_TrueStruct","PyByteArrayIter_Type","PyByteArray_AsString","PyByteArray_Check","PyByteArray_CheckExact","PyByteArray_Concat","PyByteArray_FromObject","PyByteArray_FromStringAndSize","PyByteArray_Resize","PyByteArray_Size","PyByteArray_Type","PyBytesIter_Type","PyBytes_AsString","PyBytes_AsStringAndSize","PyBytes_Check","PyBytes_CheckExact","PyBytes_Concat","PyBytes_ConcatAndDel","PyBytes_DecodeEscape","PyBytes_FromFormat","PyBytes_FromObject","PyBytes_FromString","PyBytes_FromStringAndSize","PyBytes_Repr","PyBytes_Size","PyBytes_Type","PyEval_AcquireLock","PyEval_AcquireThread","PyEval_CallFunction","PyEval_CallMethod","PyEval_CallObject","PyEval_CallObjectWithKeywords","PyEval_EvalFrame","PyEval_EvalFrameEx","PyEval_GetBuiltins","PyEval_GetCallStats","PyEval_GetFrame","PyEval_GetFuncDesc","PyEval_GetFuncName","PyEval_GetGlobals","PyEval_GetLocals","PyEval_InitThreads","PyEval_ReleaseLock","PyEval_ReleaseThread","PyEval_RestoreThread","PyEval_SaveThread","PyEval_ThreadsInitialized","Py_AddPendingCall","Py_GetRecursionLimit","Py_MakePendingCalls","Py_SetRecursionLimit","_Py_CheckRecursiveCall","PyCodec_BackslashReplaceErrors","PyCodec_Decode","PyCodec_Decoder","PyCodec_Encode","PyCodec_Encoder","PyCodec_IgnoreErrors","PyCodec_IncrementalDecoder","PyCodec_IncrementalEncoder","PyCodec_KnownEncoding","PyCodec_LookupError","PyCodec_Register","PyCodec_RegisterError","PyCodec_ReplaceErrors","PyCodec_StreamReader","PyCodec_StreamWriter","PyCodec_StrictErrors","PyCodec_XMLCharRefReplaceErrors","Py_eval_input","Py_file_input","Py_func_type_input","Py_single_input","PyComplexObject","PyComplex_AsCComplex","PyComplex_Check","PyComplex_CheckExact","PyComplex_FromCComplex","PyComplex_FromDoubles","PyComplex_ImagAsDouble","PyComplex_RealAsDouble","PyComplex_Type","Py_complex","_Py_c_abs","_Py_c_diff","_Py_c_neg","_Py_c_pow","_Py_c_prod","_Py_c_quot","_Py_c_sum","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cval","from","from","imag","into","into","ob_base","real","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","PyContextToken_CheckExact","PyContextToken_Type","PyContextVar_CheckExact","PyContextVar_Get","PyContextVar_New","PyContextVar_Reset","PyContextVar_Set","PyContextVar_Type","PyContext_CheckExact","PyContext_Copy","PyContext_CopyCurrent","PyContext_Enter","PyContext_Exit","PyContext_New","PyContext_Type","abstract_","bytesobject","ceval","code","compile","dictobject","frameobject","import","initconfig","listobject","object","pydebug","pylifecycle","pymem","pystate","pythonrun","tupleobject","unicodeobject","PY_ITERSEARCH_CONTAINS","PY_ITERSEARCH_COUNT","PY_ITERSEARCH_INDEX","PY_VECTORCALL_ARGUMENTS_OFFSET","PyBuffer_FillContiguousStrides","PyBuffer_FillInfo","PyBuffer_FromContiguous","PyBuffer_GetPointer","PyBuffer_IsContiguous","PyBuffer_Release","PyBuffer_SizeFromFormat","PyBuffer_ToContiguous","PyObject_CallOneArg","PyObject_CheckBuffer","PyObject_CopyData","PyObject_GetBuffer","PyObject_LengthHint","PyObject_Vectorcall","PyObject_VectorcallDict","PyVectorcall_Call","PyVectorcall_Function","PyVectorcall_NARGS","_PY_FASTCALL_SMALL_STACK","_PyObject_CallNoArg","_PyObject_FastCall","_PyObject_FastCallTstate","_PyObject_MakeTpCall","_PyObject_VectorcallTstate","_PySequence_IterSearch","_PyStack_AsDict","_Py_CheckFunctionResult","_PyBytes_Resize","PyEval_SetProfile","PyEval_SetTrace","_PyEval_EvalFrameDefault","_PyEval_RequestCodeExtraIndex","0","CO_ASYNC_GENERATOR","CO_COROUTINE","CO_FUTURE_ABSOLUTE_IMPORT","CO_FUTURE_BARRY_AS_BDFL","CO_FUTURE_DIVISION","CO_FUTURE_GENERATOR_STOP","CO_FUTURE_PRINT_FUNCTION","CO_FUTURE_UNICODE_LITERALS","CO_FUTURE_WITH_STATEMENT","CO_GENERATOR","CO_ITERABLE_COROUTINE","CO_MAXBLOCKS","CO_NESTED","CO_NEWLOCALS","CO_NOFREE","CO_OPTIMIZED","CO_VARARGS","CO_VARKEYWORDS","PyCodeObject","PyCode_Addr2Line","PyCode_Check","PyCode_GetNumFree","PyCode_New","PyCode_NewEmpty","PyCode_NewWithPosOnlyArgs","PyCode_Optimize","PyCode_Type","_PyCode_GetExtra","_PyCode_SetExtra","_PyOpcache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","co_argcount","co_cell2arg","co_cellvars","co_code","co_consts","co_extra","co_filename","co_firstlineno","co_flags","co_freevars","co_kwonlyargcount","co_lnotab","co_name","co_names","co_nlocals","co_opcache","co_opcache_flag","co_opcache_map","co_opcache_size","co_posonlyargcount","co_stacksize","co_varnames","co_weakreflist","co_zombieframe","from","from","into","into","ob_base","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","FUTURE_ABSOLUTE_IMPORT","FUTURE_BARRY_AS_BDFL","FUTURE_DIVISION","FUTURE_GENERATORS","FUTURE_GENERATOR_STOP","FUTURE_NESTED_SCOPES","FUTURE_PRINT_FUNCTION","FUTURE_UNICODE_LITERALS","FUTURE_WITH_STATEMENT","PyAST_CompileEx","PyAST_CompileObject","PyCompile_OpcodeStackEffect","PyCompile_OpcodeStackEffectWithJump","PyFutureFeatures","PyFuture_FromAST","PyFuture_FromASTObject","PyNode_Compile","borrow","borrow_mut","clone","clone_into","ff_features","ff_lineno","from","into","to_owned","try_from","try_into","type_id","0","PyDictKeysObject","PyDictObject","_PyDict_Contains","_PyDict_NewPresized","_PyDict_Next","_PyDict_SetItem_KnownHash","borrow","borrow","borrow_mut","borrow_mut","fmt","from","from","into","into","ma_keys","ma_used","ma_values","ma_version_tag","ob_base","try_from","try_from","try_into","try_into","type_id","type_id","PyFrameObject","PyFrame_BlockPop","PyFrame_BlockSetup","PyFrame_Check","PyFrame_ClearFreeList","PyFrame_FastToLocals","PyFrame_FastToLocalsWithError","PyFrame_LocalsToFast","PyFrame_New","PyFrame_Type","PyTryBlock","b_handler","b_level","b_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","f_back","f_blockstack","f_builtins","f_code","f_exc_traceback","f_exc_type","f_exc_value","f_executing","f_gen","f_globals","f_iblock","f_lasti","f_lineno","f_locals","f_localsplus","f_stacktop","f_trace","f_valuestack","from","from","into","into","ob_base","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","PyImport_ExtendInittab","PyImport_FrozenModules","PyImport_Inittab","_PyImport_AcquireLock","_PyImport_FindBuiltin","_PyImport_FindExtensionObject","_PyImport_FixupBuiltin","_PyImport_FixupExtensionObject","_PyImport_IsInitialized","_PyImport_ReleaseLock","_PyImport_SetModule","_PyImport_SetModuleString","_frozen","_inittab","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","code","from","from","initfun","into","into","name","name","size","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","PyConfig","PyConfig_Clear","PyConfig_InitIsolatedConfig","PyConfig_InitPythonConfig","PyConfig_Read","PyConfig_SetArgv","PyConfig_SetBytesArgv","PyConfig_SetBytesString","PyConfig_SetString","PyConfig_SetWideStringList","PyPreConfig","PyPreConfig_InitIsolatedConfig","PyPreConfig_InitPythonConfig","PyStatus","PyStatus_Error","PyStatus_Exception","PyStatus_Exit","PyStatus_IsError","PyStatus_IsExit","PyStatus_NoMemory","PyStatus_Ok","PyWideStringList","PyWideStringList_Append","PyWideStringList_Insert","Py_GetArgcArgv","_PyStatus_TYPE","_PyStatus_TYPE_ERROR","_PyStatus_TYPE_EXIT","_PyStatus_TYPE_OK","_config_init","_config_init","_init_main","_install_importlib","_type","allocator","argv","assert_receiver_is_total_eq","base_exec_prefix","base_executable","base_prefix","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffered_stdio","bytes_warning","check_hash_pycs_mode","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","coerce_c_locale","coerce_c_locale_warn","configure_c_stdio","configure_locale","dev_mode","dev_mode","dump_refs","eq","equivalent","err_msg","exec_prefix","executable","exitcode","faulthandler","filesystem_encoding","filesystem_errors","fmt","from","from","from","from","from","func","hash_seed","home","import_time","inspect","install_signal_handlers","interactive","into","into","into","into","into","isolated","isolated","items","length","malloc_stats","module_search_paths","module_search_paths_set","optimization_level","parse_argv","parse_argv","parser_debug","pathconfig_warnings","prefix","program_name","pycache_prefix","pythonpath_env","quiet","run_command","run_filename","run_module","show_alloc_count","show_ref_count","site_import","skip_source_first_line","stdio_encoding","stdio_errors","to_owned","to_owned","to_owned","to_owned","to_owned","tracemalloc","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_environment","use_environment","use_hash_seed","user_site_directory","utf8_mode","verbose","warnoptions","write_bytecode","xoptions","PyListObject","PyList_GET_ITEM","PyList_GET_SIZE","PyList_SET_ITEM","allocated","borrow","borrow_mut","clone","clone_into","from","into","ob_base","ob_item","to_owned","try_from","try_into","type_id","PyObject_CallFinalizer","PyObject_CallFinalizerFromDealloc","PyObject_Print","_PyObject_GetDictPtr","_PyObject_NextNotImplemented","bufferinfo","typeobject","vectorcallfunc","PyBUF_ANY_CONTIGUOUS","PyBUF_CONTIG","PyBUF_CONTIG_RO","PyBUF_C_CONTIGUOUS","PyBUF_FORMAT","PyBUF_FULL","PyBUF_FULL_RO","PyBUF_F_CONTIGUOUS","PyBUF_INDIRECT","PyBUF_MAX_NDIM","PyBUF_ND","PyBUF_READ","PyBUF_RECORDS","PyBUF_RECORDS_RO","PyBUF_SIMPLE","PyBUF_STRIDED","PyBUF_STRIDED_RO","PyBUF_STRIDES","PyBUF_WRITABLE","PyBUF_WRITE","PyBUF_WRITEABLE","Py_buffer","borrow","borrow_mut","buf","clone","clone_into","format","from","getbufferproc","internal","into","itemsize","len","ndim","new","obj","readonly","releasebufferproc","shape","strides","suboffsets","to_owned","try_from","try_into","type_id","PyAsyncMethods","PyBufferProcs","PyHeapTypeObject","PyHeapType_GET_MEMBERS","PyMappingMethods","PyNumberMethods","PySequenceMethods","PyTypeObject","am_aiter","am_anext","am_await","as_async","as_buffer","as_mapping","as_number","as_sequence","bf_getbuffer","bf_releasebuffer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","fmt","from","from","from","from","from","from","from","ht_cached_keys","ht_name","ht_qualname","ht_slots","ht_type","into","into","into","into","into","into","into","mp_ass_subscript","mp_length","mp_subscript","nb_absolute","nb_add","nb_and","nb_bool","nb_divmod","nb_float","nb_floor_divide","nb_index","nb_inplace_add","nb_inplace_and","nb_inplace_floor_divide","nb_inplace_lshift","nb_inplace_matrix_multiply","nb_inplace_multiply","nb_inplace_or","nb_inplace_power","nb_inplace_remainder","nb_inplace_rshift","nb_inplace_subtract","nb_inplace_true_divide","nb_inplace_xor","nb_int","nb_invert","nb_lshift","nb_matrix_multiply","nb_multiply","nb_negative","nb_or","nb_positive","nb_power","nb_remainder","nb_reserved","nb_rshift","nb_subtract","nb_true_divide","nb_xor","ob_base","printfunc","sq_ass_item","sq_concat","sq_contains","sq_inplace_concat","sq_inplace_repeat","sq_item","sq_length","sq_repeat","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tp_alloc","tp_as_async","tp_as_buffer","tp_as_mapping","tp_as_number","tp_as_sequence","tp_base","tp_bases","tp_basicsize","tp_cache","tp_call","tp_clear","tp_dealloc","tp_del","tp_descr_get","tp_descr_set","tp_dict","tp_dictoffset","tp_doc","tp_finalize","tp_flags","tp_free","tp_getattr","tp_getattro","tp_getset","tp_hash","tp_init","tp_is_gc","tp_itemsize","tp_iter","tp_iternext","tp_members","tp_methods","tp_mro","tp_name","tp_new","tp_repr","tp_richcompare","tp_setattr","tp_setattro","tp_str","tp_subclasses","tp_traverse","tp_vectorcall","tp_vectorcall_offset","tp_version_tag","tp_weaklist","tp_weaklistoffset","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","was_sq_ass_slice","was_sq_slice","Py_BytesWarningFlag","Py_DebugFlag","Py_DontWriteBytecodeFlag","Py_FrozenFlag","Py_HashRandomizationFlag","Py_IgnoreEnvironmentFlag","Py_InspectFlag","Py_InteractiveFlag","Py_IsolatedFlag","Py_NoSiteFlag","Py_NoUserSiteDirectory","Py_OptimizeFlag","Py_QuietFlag","Py_UnbufferedStdioFlag","Py_UseClassExceptionsFlag","Py_VerboseFlag","Py_InitializeFromConfig","Py_PreInitialize","Py_PreInitializeFromArgs","Py_PreInitializeFromBytesArgs","Py_RunMain","_Py_InitializeMain","_Py_IsCoreInitialized","PYMEM_DOMAIN_MEM","PYMEM_DOMAIN_OBJ","PYMEM_DOMAIN_RAW","PyMemAllocatorDomain","PyMemAllocatorEx","PyMem_GetAllocator","PyMem_RawCalloc","PyMem_RawFree","PyMem_RawMalloc","PyMem_RawRealloc","PyMem_SetAllocator","PyMem_SetupDebugHooks","borrow","borrow","borrow_mut","borrow_mut","calloc","clone","clone","clone_into","clone_into","ctx","free","from","from","into","into","malloc","realloc","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","PyGILState_Check","PyInterpreterState_Head","PyInterpreterState_Main","PyInterpreterState_Next","PyInterpreterState_ThreadHead","PyThreadState_Next","PyTrace_CALL","PyTrace_C_CALL","PyTrace_C_EXCEPTION","PyTrace_C_RETURN","PyTrace_EXCEPTION","PyTrace_LINE","PyTrace_OPCODE","PyTrace_RETURN","Py_tracefunc","PyParser_ASTFromFile","PyParser_ASTFromFileObject","PyParser_ASTFromString","PyParser_ASTFromStringObject","PyParser_SimpleParseFileFlags","PyParser_SimpleParseStringFlags","PyParser_SimpleParseStringFlagsFilename","PyRun_AnyFile","PyRun_AnyFileEx","PyRun_AnyFileExFlags","PyRun_AnyFileFlags","PyRun_File","PyRun_FileEx","PyRun_FileExFlags","PyRun_FileFlags","PyRun_InteractiveLoop","PyRun_InteractiveLoopFlags","PyRun_InteractiveOne","PyRun_InteractiveOneFlags","PyRun_InteractiveOneObject","PyRun_SimpleFile","PyRun_SimpleFileEx","PyRun_SimpleFileExFlags","PyRun_SimpleString","PyRun_SimpleStringFlags","PyRun_String","PyRun_StringFlags","Py_CompileString","Py_CompileStringExFlags","Py_CompileStringFlags","Py_CompileStringObject","_PyRun_AnyFileObject","_PyRun_InteractiveLoopObject","_PyRun_SimpleFileObject","PyTupleObject","PyTuple_GET_ITEM","PyTuple_GET_SIZE","PyTuple_SET_ITEM","borrow","borrow_mut","from","into","ob_base","ob_item","try_from","try_into","type_id","PyASCIIObject","PyCompactUnicodeObject","PyUnicodeObject","PyUnicodeObjectData","PyUnicode_1BYTE_DATA","PyUnicode_1BYTE_KIND","PyUnicode_2BYTE_DATA","PyUnicode_2BYTE_KIND","PyUnicode_4BYTE_DATA","PyUnicode_4BYTE_KIND","PyUnicode_AsUTF8","PyUnicode_AsUnicode","PyUnicode_AsUnicodeAndSize","PyUnicode_CopyCharacters","PyUnicode_DATA","PyUnicode_Encode","PyUnicode_EncodeASCII","PyUnicode_EncodeCharmap","PyUnicode_EncodeDecimal","PyUnicode_EncodeLatin1","PyUnicode_EncodeRawUnicodeEscape","PyUnicode_EncodeUTF16","PyUnicode_EncodeUTF32","PyUnicode_EncodeUTF7","PyUnicode_EncodeUTF8","PyUnicode_EncodeUnicodeEscape","PyUnicode_Fill","PyUnicode_FromKindAndData","PyUnicode_FromUnicode","PyUnicode_GET_LENGTH","PyUnicode_IS_ASCII","PyUnicode_IS_COMPACT","PyUnicode_IS_COMPACT_ASCII","PyUnicode_IS_READY","PyUnicode_KIND","PyUnicode_New","PyUnicode_READY","PyUnicode_TransformDecimalToASCII","PyUnicode_TranslateCharmap","PyUnicode_WCHAR_KIND","SSTATE_INTERNED_IMMORTAL","SSTATE_INTERNED_MORTAL","SSTATE_NOT_INTERNED","_PyUnicode_COMPACT_DATA","_PyUnicode_CheckConsistency","_PyUnicode_NONCOMPACT_DATA","_PyUnicode_Ready","_base","_base","any","ascii","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compact","data","from","from","from","from","hash","interned","into","into","into","into","kind","latin1","length","ob_base","ready","state","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","ucs2","ucs4","utf8","utf8_length","wstr","wstr_length","DateTimeType","DateTime_FromDateAndTime","DateTime_FromDateAndTimeAndFold","DateTime_FromTimestamp","DateType","Date_FromDate","Date_FromTimestamp","DeltaType","Delta_FromDelta","PyDateTimeAPI","PyDateTime_CAPI","PyDateTime_Check","PyDateTime_CheckExact","PyDateTime_DATE_GET_FOLD","PyDateTime_DATE_GET_HOUR","PyDateTime_DATE_GET_MICROSECOND","PyDateTime_DATE_GET_MINUTE","PyDateTime_DATE_GET_SECOND","PyDateTime_DATE_GET_TZINFO","PyDateTime_DELTA_GET_DAYS","PyDateTime_DELTA_GET_MICROSECONDS","PyDateTime_DELTA_GET_SECONDS","PyDateTime_Date","PyDateTime_DateTime","PyDateTime_Delta","PyDateTime_FromTimestamp","PyDateTime_GET_DAY","PyDateTime_GET_MONTH","PyDateTime_GET_YEAR","PyDateTime_IMPORT","PyDateTime_TIME_GET_FOLD","PyDateTime_TIME_GET_HOUR","PyDateTime_TIME_GET_MICROSECOND","PyDateTime_TIME_GET_MINUTE","PyDateTime_TIME_GET_SECOND","PyDateTime_TIME_GET_TZINFO","PyDateTime_Time","PyDateTime_TimeZone_UTC","PyDate_Check","PyDate_CheckExact","PyDate_FromTimestamp","PyDelta_Check","PyDelta_CheckExact","PyTZInfo_Check","PyTZInfo_CheckExact","PyTime_Check","PyTime_CheckExact","TZInfoType","TimeType","TimeZone_FromTimeZone","TimeZone_UTC","Time_FromTime","Time_FromTimeAndFold","_PyDateTimeAPI_impl","_PyDateTime_DATETIME_DATASIZE","_PyDateTime_DATE_DATASIZE","_PyDateTime_GET_FOLD","_PyDateTime_GET_HOUR","_PyDateTime_GET_MICROSECOND","_PyDateTime_GET_MINUTE","_PyDateTime_GET_SECOND","_PyDateTime_GET_TZINFO","_PyDateTime_TIME_DATASIZE","_PyDateTime_TimeZone_UTC_impl","_access_delta_field","_access_field","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","data","data","data","days","fmt","fmt","fmt","fmt","fmt","fold","fold","from","from","from","from","from","hashcode","hashcode","hashcode","hashcode","hastzinfo","hastzinfo","hastzinfo","inner","inner","into","into","into","into","into","microseconds","ob_base","ob_base","ob_base","ob_base","seconds","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","tzinfo","tzinfo","PyClassMethodDescr_Type","PyDescr_NewClassMethod","PyDescr_NewGetSet","PyDescr_NewMember","PyDescr_NewMethod","PyDictProxy_New","PyDictProxy_Type","PyGetSetDef","PyGetSetDescr_Type","PyMemberDescr_Type","PyMethodDescr_Type","PyProperty_Type","PyWrapperDescr_Type","PyWrapper_New","borrow","borrow_mut","clone","clone_into","closure","doc","fmt","from","get","getter","into","name","set","setter","to_owned","try_from","try_into","type_id","PyDictItems_Check","PyDictItems_Type","PyDictIterItem_Type","PyDictIterKey_Type","PyDictIterValue_Type","PyDictKeys_Check","PyDictKeys_Type","PyDictRevIterItem_Type","PyDictRevIterKey_Type","PyDictRevIterValue_Type","PyDictValues_Check","PyDictValues_Type","PyDictViewSet_Check","PyDict_Check","PyDict_CheckExact","PyDict_Clear","PyDict_Contains","PyDict_Copy","PyDict_DelItem","PyDict_DelItemString","PyDict_GetItem","PyDict_GetItemString","PyDict_GetItemWithError","PyDict_Items","PyDict_Keys","PyDict_Merge","PyDict_MergeFromSeq2","PyDict_New","PyDict_Next","PyDict_SetItem","PyDict_SetItemString","PyDict_Size","PyDict_Type","PyDict_Update","PyDict_Values","PyEnum_Type","PyReversed_Type","PyEval_EvalCode","PyEval_EvalCodeEx","PY_STDIOTEXTMODE","PyFile_FromFd","PyFile_GetLine","PyFile_WriteObject","PyFile_WriteString","PyObject_AsFileDescriptor","Py_FileSystemDefaultEncodeErrors","Py_FileSystemDefaultEncoding","Py_HasFileSystemDefaultEncoding","Py_DecodeLocale","Py_EncodeLocale","PyFloatObject","PyFloat_AS_DOUBLE","PyFloat_AsDouble","PyFloat_Check","PyFloat_CheckExact","PyFloat_FromDouble","PyFloat_FromString","PyFloat_GetInfo","PyFloat_GetMax","PyFloat_GetMin","PyFloat_Type","borrow","borrow_mut","from","into","ob_base","ob_fval","try_from","try_into","type_id","PyFunction_Check","PyFunction_GetAnnotations","PyFunction_GetClosure","PyFunction_GetCode","PyFunction_GetDefaults","PyFunction_GetGlobals","PyFunction_GetKwDefaults","PyFunction_GetModule","PyFunction_New","PyFunction_NewWithQualName","PyFunction_SetAnnotations","PyFunction_SetClosure","PyFunction_SetDefaults","PyFunction_SetKwDefaults","PyFunction_Type","PyAsyncGen_CheckExact","PyAsyncGen_Type","PyCoro_CheckExact","PyCoro_Type","PyGenObject","PyGen_Check","PyGen_CheckExact","PyGen_NeedsFinalizing","PyGen_New","PyGen_Type","_PyCoroWrapper_Type","borrow","borrow_mut","clone","clone_into","from","gi_code","gi_frame","gi_running","gi_weakreflist","into","ob_refcnt","ob_type","to_owned","try_from","try_into","type_id","PyImport_AddModule","PyImport_AddModuleObject","PyImport_AppendInittab","PyImport_Cleanup","PyImport_ExecCodeModule","PyImport_ExecCodeModuleEx","PyImport_ExecCodeModuleObject","PyImport_ExecCodeModuleWithPathnames","PyImport_GetImporter","PyImport_GetMagicNumber","PyImport_GetMagicTag","PyImport_GetModuleDict","PyImport_Import","PyImport_ImportFrozenModule","PyImport_ImportFrozenModuleObject","PyImport_ImportModule","PyImport_ImportModuleEx","PyImport_ImportModuleLevel","PyImport_ImportModuleLevelObject","PyImport_ImportModuleNoBlock","PyImport_ReloadModule","PyOS_AfterFork","PyOS_AfterFork_Child","PyOS_AfterFork_Parent","PyOS_BeforeFork","PyOS_InitInterrupts","PyOS_InterruptOccurred","PyCallIter_Check","PyCallIter_New","PyCallIter_Type","PySeqIter_Check","PySeqIter_New","PySeqIter_Type","PyListIter_Type","PyListRevIter_Type","PyList_Append","PyList_AsTuple","PyList_Check","PyList_CheckExact","PyList_GetItem","PyList_GetSlice","PyList_Insert","PyList_New","PyList_Reverse","PyList_SetItem","PyList_SetSlice","PyList_Size","PyList_Sort","PyList_Type","0","PyLongObject","PyLong_AsDouble","PyLong_AsLong","PyLong_AsLongAndOverflow","PyLong_AsLongLong","PyLong_AsLongLongAndOverflow","PyLong_AsSize_t","PyLong_AsSsize_t","PyLong_AsUnsignedLong","PyLong_AsUnsignedLongLong","PyLong_AsUnsignedLongLongMask","PyLong_AsUnsignedLongMask","PyLong_AsVoidPtr","PyLong_Check","PyLong_CheckExact","PyLong_FromDouble","PyLong_FromLong","PyLong_FromLongLong","PyLong_FromSize_t","PyLong_FromSsize_t","PyLong_FromString","PyLong_FromUnsignedLong","PyLong_FromUnsignedLongLong","PyLong_FromVoidPtr","PyLong_GetInfo","PyLong_Type","PyOS_strtol","PyOS_strtoul","_PyLong_AsByteArray","_PyLong_FromByteArray","_PyLong_NumBits","borrow","borrow_mut","from","into","try_from","try_into","type_id","PyMarshal_ReadObjectFromString","PyMarshal_WriteObjectToString","PyMemoryView_Check","PyMemoryView_FromMemory","PyMemoryView_FromObject","PyMemoryView_GetContiguous","PyMemoryView_Type","METH_CLASS","METH_COEXIST","METH_FASTCALL","METH_KEYWORDS","METH_NOARGS","METH_O","METH_STATIC","METH_VARARGS","PyCFunction","PyCFunctionWithKeywords","PyCFunction_Call","PyCFunction_Check","PyCFunction_ClearFreeList","PyCFunction_GetFlags","PyCFunction_GetFunction","PyCFunction_GetSelf","PyCFunction_New","PyCFunction_NewEx","PyCFunction_Type","PyMethodDef","_PyCFunctionFast","_PyCFunctionFastWithKeywords","borrow","borrow_mut","clone","clone_into","default","from","into","ml_doc","ml_flags","ml_meth","ml_name","to_owned","try_from","try_into","type_id","PYTHON_ABI_VERSION","PYTHON_API_VERSION","PyArg_Parse","PyArg_ParseTuple","PyArg_ParseTupleAndKeywords","PyArg_UnpackTuple","PyArg_ValidateKeywordArguments","PyModule_AddFunctions","PyModule_AddIntConstant","PyModule_AddObject","PyModule_AddStringConstant","PyModule_Create","PyModule_Create2","PyModule_ExecDef","PyModule_FromDefAndSpec","PyModule_FromDefAndSpec2","PyModule_SetDocString","Py_BuildValue","Py_CLEANUP_SUPPORTED","_Py_PackageContext","PyModuleDef","PyModuleDef_Base","PyModuleDef_HEAD_INIT","PyModuleDef_Init","PyModuleDef_Slot","PyModuleDef_Type","PyModule_Check","PyModule_CheckExact","PyModule_GetDef","PyModule_GetDict","PyModule_GetFilename","PyModule_GetFilenameObject","PyModule_GetName","PyModule_GetNameObject","PyModule_GetState","PyModule_New","PyModule_NewObject","PyModule_Type","Py_mod_create","Py_mod_exec","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","from","from","from","into","into","into","m_base","m_clear","m_copy","m_doc","m_free","m_index","m_init","m_methods","m_name","m_size","m_slots","m_traverse","ob_base","slot","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","value","PyBaseObject_Type","PyCallable_Check","PyObject","PyObject_ASCII","PyObject_Bytes","PyObject_ClearWeakRefs","PyObject_Dir","PyObject_GenericGetAttr","PyObject_GenericGetDict","PyObject_GenericSetAttr","PyObject_GenericSetDict","PyObject_GetAttr","PyObject_GetAttrString","PyObject_HEAD_INIT","PyObject_HasAttr","PyObject_HasAttrString","PyObject_Hash","PyObject_HashNotImplemented","PyObject_IsTrue","PyObject_Not","PyObject_Repr","PyObject_RichCompare","PyObject_RichCompareBool","PyObject_SelfIter","PyObject_SetAttr","PyObject_SetAttrString","PyObject_Str","PyObject_TypeCheck","PySuper_Type","PyType_Check","PyType_CheckExact","PyType_ClearCache","PyType_FastSubclass","PyType_FromSpec","PyType_FromSpecWithBases","PyType_GenericAlloc","PyType_GenericNew","PyType_GetFlags","PyType_GetSlot","PyType_HasFeature","PyType_IsSubtype","PyType_Modified","PyType_Ready","PyType_Slot","PyType_Spec","PyType_Type","PyVarObject","Py_CLEAR","Py_DECREF","Py_DecRef","Py_EQ","Py_GE","Py_GT","Py_INCREF","Py_IS_TYPE","Py_IncRef","Py_Is","Py_IsNone","Py_LE","Py_LT","Py_NE","Py_None","Py_NotImplemented","Py_PRINT_RAW","Py_REFCNT","Py_ReprEnter","Py_ReprLeave","Py_SIZE","Py_TPFLAGS_BASETYPE","Py_TPFLAGS_BASE_EXC_SUBCLASS","Py_TPFLAGS_BYTES_SUBCLASS","Py_TPFLAGS_DEFAULT","Py_TPFLAGS_DICT_SUBCLASS","Py_TPFLAGS_HAVE_FINALIZE","Py_TPFLAGS_HAVE_GC","Py_TPFLAGS_HAVE_STACKLESS_EXTENSION","Py_TPFLAGS_HAVE_VECTORCALL","Py_TPFLAGS_HAVE_VERSION_TAG","Py_TPFLAGS_HEAPTYPE","Py_TPFLAGS_IS_ABSTRACT","Py_TPFLAGS_LIST_SUBCLASS","Py_TPFLAGS_LONG_SUBCLASS","Py_TPFLAGS_READY","Py_TPFLAGS_READYING","Py_TPFLAGS_TUPLE_SUBCLASS","Py_TPFLAGS_TYPE_SUBCLASS","Py_TPFLAGS_UNICODE_SUBCLASS","Py_TPFLAGS_VALID_VERSION_TAG","Py_TYPE","Py_XDECREF","Py_XINCREF","_Py_Dealloc","_Py_NewRef","_Py_NoneStruct","_Py_NotImplementedStruct","_Py_XNewRef","allocfunc","basicsize","binaryfunc","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","descrgetfunc","descrsetfunc","destructor","flags","fmt","fmt","freefunc","from","from","from","from","getattrfunc","getattrofunc","getiterfunc","hashfunc","initproc","inquiry","into","into","into","into","itemsize","iternextfunc","lenfunc","name","newfunc","ob_base","ob_refcnt","ob_size","ob_type","objobjargproc","objobjproc","pfunc","reprfunc","richcmpfunc","setattrfunc","setattrofunc","slot","slots","ssizeargfunc","ssizeobjargproc","ssizessizeargfunc","ssizessizeobjargproc","ternaryfunc","to_owned","to_owned","to_owned","to_owned","traverseproc","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unaryfunc","visitproc","PyGC_Collect","PyObjectArenaAllocator","PyObject_Calloc","PyObject_Free","PyObject_GC_Del","PyObject_GC_Track","PyObject_GC_UnTrack","PyObject_GET_WEAKREFS_LISTPTR","PyObject_GetArenaAllocator","PyObject_IS_GC","PyObject_Init","PyObject_InitVar","PyObject_Malloc","PyObject_Realloc","PyObject_SetArenaAllocator","PyType_IS_GC","PyType_SUPPORTS_WEAKREFS","_PyObject_GC_Calloc","_PyObject_GC_Malloc","_PyObject_GC_New","_PyObject_GC_NewVar","_PyObject_GC_Resize","_PyObject_New","_PyObject_NewVar","_Py_GetAllocatedBlocks","alloc","borrow","borrow_mut","clone","clone_into","ctx","default","free","from","into","to_owned","try_from","try_into","type_id","PyOS_FSPath","0","PyArena","borrow","borrow_mut","from","into","try_from","try_into","type_id","PyCapsule_CheckExact","PyCapsule_Destructor","PyCapsule_GetContext","PyCapsule_GetDestructor","PyCapsule_GetName","PyCapsule_GetPointer","PyCapsule_Import","PyCapsule_IsValid","PyCapsule_New","PyCapsule_SetContext","PyCapsule_SetDestructor","PyCapsule_SetName","PyCapsule_SetPointer","PyCapsule_Type","PyBaseExceptionObject","PyErr_BadArgument","PyErr_BadInternalCall","PyErr_CheckSignals","PyErr_Clear","PyErr_ExceptionMatches","PyErr_Fetch","PyErr_Format","PyErr_GetExcInfo","PyErr_GivenExceptionMatches","PyErr_NewException","PyErr_NewExceptionWithDoc","PyErr_NoMemory","PyErr_NormalizeException","PyErr_Occurred","PyErr_ProgramText","PyErr_Restore","PyErr_SetExcInfo","PyErr_SetFromErrno","PyErr_SetFromErrnoWithFilename","PyErr_SetFromErrnoWithFilenameObject","PyErr_SetFromErrnoWithFilenameObjects","PyErr_SetImportError","PyErr_SetImportErrorSubclass","PyErr_SetInterrupt","PyErr_SetNone","PyErr_SetObject","PyErr_SetString","PyErr_SyntaxLocation","PyErr_SyntaxLocationEx","PyErr_WriteUnraisable","PyExc_ArithmeticError","PyExc_AssertionError","PyExc_AttributeError","PyExc_BaseException","PyExc_BlockingIOError","PyExc_BrokenPipeError","PyExc_BufferError","PyExc_BytesWarning","PyExc_ChildProcessError","PyExc_ConnectionAbortedError","PyExc_ConnectionError","PyExc_ConnectionRefusedError","PyExc_ConnectionResetError","PyExc_DeprecationWarning","PyExc_EOFError","PyExc_EnvironmentError","PyExc_Exception","PyExc_FileExistsError","PyExc_FileNotFoundError","PyExc_FloatingPointError","PyExc_FutureWarning","PyExc_GeneratorExit","PyExc_IOError","PyExc_ImportError","PyExc_ImportWarning","PyExc_IndentationError","PyExc_IndexError","PyExc_InterruptedError","PyExc_IsADirectoryError","PyExc_KeyError","PyExc_KeyboardInterrupt","PyExc_LookupError","PyExc_MemoryError","PyExc_ModuleNotFoundError","PyExc_NameError","PyExc_NotADirectoryError","PyExc_NotImplementedError","PyExc_OSError","PyExc_OverflowError","PyExc_PendingDeprecationWarning","PyExc_PermissionError","PyExc_ProcessLookupError","PyExc_RecursionError","PyExc_RecursionErrorInst","PyExc_ReferenceError","PyExc_ResourceWarning","PyExc_RuntimeError","PyExc_RuntimeWarning","PyExc_StopAsyncIteration","PyExc_StopIteration","PyExc_SyntaxError","PyExc_SyntaxWarning","PyExc_SystemError","PyExc_SystemExit","PyExc_TabError","PyExc_TimeoutError","PyExc_TypeError","PyExc_UnboundLocalError","PyExc_UnicodeDecodeError","PyExc_UnicodeEncodeError","PyExc_UnicodeError","PyExc_UnicodeTranslateError","PyExc_UnicodeWarning","PyExc_UserWarning","PyExc_ValueError","PyExc_Warning","PyExc_ZeroDivisionError","PyExceptionClass_Check","PyExceptionInstance_Check","PyExceptionInstance_Class","PyException_GetCause","PyException_GetContext","PyException_GetTraceback","PyException_SetCause","PyException_SetContext","PyException_SetTraceback","PyImportErrorObject","PyOSErrorObject","PyStopIterationObject","PySyntaxErrorObject","PySystemExitObject","PyUnicodeDecodeError_Create","PyUnicodeDecodeError_GetEncoding","PyUnicodeDecodeError_GetEnd","PyUnicodeDecodeError_GetObject","PyUnicodeDecodeError_GetReason","PyUnicodeDecodeError_GetStart","PyUnicodeDecodeError_SetEnd","PyUnicodeDecodeError_SetReason","PyUnicodeDecodeError_SetStart","PyUnicodeEncodeError_GetEncoding","PyUnicodeEncodeError_GetEnd","PyUnicodeEncodeError_GetObject","PyUnicodeEncodeError_GetReason","PyUnicodeEncodeError_GetStart","PyUnicodeEncodeError_SetEnd","PyUnicodeEncodeError_SetReason","PyUnicodeEncodeError_SetStart","PyUnicodeErrorObject","PyUnicodeTranslateError_GetEnd","PyUnicodeTranslateError_GetObject","PyUnicodeTranslateError_GetReason","PyUnicodeTranslateError_GetStart","PyUnicodeTranslateError_SetEnd","PyUnicodeTranslateError_SetReason","PyUnicodeTranslateError_SetStart","Py_FatalError","_PyErr_BadInternalCall","args","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","code","context","dict","encoding","end","exception_base","exception_base","exception_base","exception_base","exception_base","exception_base","filename","filename","filename2","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","lineno","msg","msg","myerrno","name","ob_base","object","offset","path","print_file_and_line","reason","start","strerror","suppress_context","text","traceback","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","written","PyFrame_GetLineNumber","PyHash_FuncDef","PyHash_GetFuncDef","Py_HASH_EXTERNAL","Py_HASH_FNV","Py_HASH_SIPHASH24","_PyHASH_MULTIPLIER","_Py_HashBytes","borrow","borrow_mut","clone","clone_into","default","from","hash","hash_bits","into","name","seed_bits","to_owned","try_from","try_into","type_id","PyOS_getsig","PyOS_setsig","PyOS_sighandler_t","Py_AtExit","Py_BytesMain","Py_EndInterpreter","Py_Exit","Py_Finalize","Py_FinalizeEx","Py_GetBuildInfo","Py_GetCompiler","Py_GetCopyright","Py_GetExecPrefix","Py_GetPath","Py_GetPlatform","Py_GetPrefix","Py_GetProgramFullPath","Py_GetProgramName","Py_GetPythonHome","Py_GetVersion","Py_Initialize","Py_InitializeEx","Py_IsInitialized","Py_Main","Py_NewInterpreter","Py_SetPath","Py_SetProgramName","Py_SetPythonHome","PyMem_Calloc","PyMem_Free","PyMem_Malloc","PyMem_Realloc","PY_SSIZE_T_MAX","PY_SSIZE_T_MIN","Py_hash_t","Py_intptr_t","Py_ssize_t","Py_uhash_t","Py_uintptr_t","0","0","MAX_CO_EXTRA_USERS","PyGILState_Ensure","PyGILState_GetThisThreadState","PyGILState_LOCKED","PyGILState_Release","PyGILState_STATE","PyGILState_UNLOCKED","PyInterpreterState","PyInterpreterState_Clear","PyInterpreterState_Delete","PyInterpreterState_GetDict","PyInterpreterState_GetID","PyInterpreterState_New","PyState_AddModule","PyState_FindModule","PyState_RemoveModule","PyThreadState","PyThreadState_Clear","PyThreadState_Delete","PyThreadState_GET","PyThreadState_Get","PyThreadState_GetDict","PyThreadState_New","PyThreadState_SetAsyncExc","PyThreadState_Swap","assert_receiver_is_total_eq","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","from","from","into","into","into","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","PyOS_double_to_string","PyOS_string_to_double","Py_DTSF_ADD_DOT_0","Py_DTSF_ALT","Py_DTSF_SIGN","Py_DTST_FINITE","Py_DTST_INFINITE","Py_DTST_NAN","0","0","0","PYOS_STACK_MARGIN","PyCompilerFlags","PyErr_Display","PyErr_Print","PyErr_PrintEx","PyParser_SimpleParseFile","PyParser_SimpleParseString","Py_SymtableString","Py_SymtableStringObject","_mod","_node","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cf_flags","clone","clone_into","from","from","from","from","into","into","into","into","symtable","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","PyLongRangeIter_Type","PyRangeIter_Type","PyRange_Check","PyRange_Type","PyAnySet_Check","PyAnySet_CheckExact","PyFrozenSet_Check","PyFrozenSet_CheckExact","PyFrozenSet_New","PyFrozenSet_Type","PySetIter_Type","PySetObject","PySet_Add","PySet_Check","PySet_Clear","PySet_Contains","PySet_Discard","PySet_MINSIZE","PySet_New","PySet_Pop","PySet_Size","PySet_Type","_PySet_NextEntry","borrow","borrow","borrow_mut","borrow_mut","fill","finger","fmt","fmt","from","from","hash","hash","into","into","key","mask","ob_base","setentry","smalltable","table","try_from","try_from","try_into","try_into","type_id","type_id","used","weakreflist","PyEllipsis_Type","PySliceObject","PySlice_AdjustIndices","PySlice_Check","PySlice_GetIndices","PySlice_GetIndicesEx","PySlice_New","PySlice_Type","PySlice_Unpack","Py_Ellipsis","_Py_EllipsisObject","borrow","borrow_mut","from","into","ob_base","start","step","stop","try_from","try_into","type_id","PY_WRITE_RESTRICTED","PyMemberDef","PyMember_GetOne","PyMember_SetOne","READONLY","READ_RESTRICTED","RESTRICTED","T_BOOL","T_BYTE","T_CHAR","T_DOUBLE","T_FLOAT","T_INT","T_LONG","T_LONGLONG","T_NONE","T_OBJECT","T_OBJECT_EX","T_PYSSIZET","T_SHORT","T_STRING","T_STRING_INPLACE","T_UBYTE","T_UINT","T_ULONG","T_ULONGLONG","T_USHORT","borrow","borrow_mut","clone","clone_into","doc","flags","from","into","name","offset","to_owned","try_from","try_into","type_code","type_id","PyStructSequence","PyStructSequence_Desc","PyStructSequence_Field","PyStructSequence_GET_ITEM","PyStructSequence_GetItem","PyStructSequence_InitType","PyStructSequence_InitType2","PyStructSequence_New","PyStructSequence_NewType","PyStructSequence_SET_ITEM","PyStructSequence_SetItem","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","doc","doc","fields","from","from","into","into","n_in_sequence","name","name","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","PySys_AddWarnOption","PySys_AddWarnOptionUnicode","PySys_AddXOption","PySys_FormatStderr","PySys_FormatStdout","PySys_GetObject","PySys_GetXOptions","PySys_HasWarnOptions","PySys_ResetWarnOptions","PySys_SetArgv","PySys_SetArgvEx","PySys_SetObject","PySys_SetPath","PySys_WriteStderr","PySys_WriteStdout","PyTraceBack_Check","PyTraceBack_Here","PyTraceBack_Print","PyTraceBack_Type","PyTupleIter_Type","PyTuple_Check","PyTuple_CheckExact","PyTuple_ClearFreeList","PyTuple_GetItem","PyTuple_GetSlice","PyTuple_New","PyTuple_Pack","PyTuple_SetItem","PyTuple_Size","PyTuple_Type","Py_am_aiter","Py_am_anext","Py_am_await","Py_bf_getbuffer","Py_bf_releasebuffer","Py_mp_ass_subscript","Py_mp_length","Py_mp_subscript","Py_nb_absolute","Py_nb_add","Py_nb_and","Py_nb_bool","Py_nb_divmod","Py_nb_float","Py_nb_floor_divide","Py_nb_index","Py_nb_inplace_add","Py_nb_inplace_and","Py_nb_inplace_floor_divide","Py_nb_inplace_lshift","Py_nb_inplace_matrix_multiply","Py_nb_inplace_multiply","Py_nb_inplace_or","Py_nb_inplace_power","Py_nb_inplace_remainder","Py_nb_inplace_rshift","Py_nb_inplace_subtract","Py_nb_inplace_true_divide","Py_nb_inplace_xor","Py_nb_int","Py_nb_invert","Py_nb_lshift","Py_nb_matrix_multiply","Py_nb_multiply","Py_nb_negative","Py_nb_or","Py_nb_positive","Py_nb_power","Py_nb_remainder","Py_nb_rshift","Py_nb_subtract","Py_nb_true_divide","Py_nb_xor","Py_sq_ass_item","Py_sq_concat","Py_sq_contains","Py_sq_inplace_concat","Py_sq_inplace_repeat","Py_sq_item","Py_sq_length","Py_sq_repeat","Py_tp_alloc","Py_tp_base","Py_tp_bases","Py_tp_call","Py_tp_clear","Py_tp_dealloc","Py_tp_del","Py_tp_descr_get","Py_tp_descr_set","Py_tp_doc","Py_tp_finalize","Py_tp_free","Py_tp_getattr","Py_tp_getattro","Py_tp_getset","Py_tp_hash","Py_tp_init","Py_tp_is_gc","Py_tp_iter","Py_tp_iternext","Py_tp_members","Py_tp_methods","Py_tp_new","Py_tp_repr","Py_tp_richcompare","Py_tp_setattr","Py_tp_setattro","Py_tp_str","Py_tp_traverse","PyUnicodeIter_Type","PyUnicode_Append","PyUnicode_AppendAndDel","PyUnicode_AsASCIIString","PyUnicode_AsCharmapString","PyUnicode_AsDecodedObject","PyUnicode_AsDecodedUnicode","PyUnicode_AsEncodedObject","PyUnicode_AsEncodedString","PyUnicode_AsEncodedUnicode","PyUnicode_AsLatin1String","PyUnicode_AsRawUnicodeEscapeString","PyUnicode_AsUCS4","PyUnicode_AsUCS4Copy","PyUnicode_AsUTF16String","PyUnicode_AsUTF32String","PyUnicode_AsUTF8AndSize","PyUnicode_AsUTF8String","PyUnicode_AsUnicodeEscapeString","PyUnicode_AsWideChar","PyUnicode_AsWideCharString","PyUnicode_BuildEncodingMap","PyUnicode_Check","PyUnicode_CheckExact","PyUnicode_ClearFreeList","PyUnicode_Compare","PyUnicode_CompareWithASCIIString","PyUnicode_Concat","PyUnicode_Contains","PyUnicode_Count","PyUnicode_Decode","PyUnicode_DecodeASCII","PyUnicode_DecodeCharmap","PyUnicode_DecodeFSDefault","PyUnicode_DecodeFSDefaultAndSize","PyUnicode_DecodeLatin1","PyUnicode_DecodeLocale","PyUnicode_DecodeLocaleAndSize","PyUnicode_DecodeRawUnicodeEscape","PyUnicode_DecodeUTF16","PyUnicode_DecodeUTF16Stateful","PyUnicode_DecodeUTF32","PyUnicode_DecodeUTF32Stateful","PyUnicode_DecodeUTF7","PyUnicode_DecodeUTF7Stateful","PyUnicode_DecodeUTF8","PyUnicode_DecodeUTF8Stateful","PyUnicode_DecodeUnicodeEscape","PyUnicode_EncodeFSDefault","PyUnicode_EncodeLocale","PyUnicode_FSConverter","PyUnicode_FSDecoder","PyUnicode_Find","PyUnicode_FindChar","PyUnicode_Format","PyUnicode_FromEncodedObject","PyUnicode_FromFormat","PyUnicode_FromObject","PyUnicode_FromOrdinal","PyUnicode_FromString","PyUnicode_FromStringAndSize","PyUnicode_FromWideChar","PyUnicode_GetDefaultEncoding","PyUnicode_GetLength","PyUnicode_GetSize","PyUnicode_InternFromString","PyUnicode_InternImmortal","PyUnicode_InternInPlace","PyUnicode_IsIdentifier","PyUnicode_Join","PyUnicode_Partition","PyUnicode_RPartition","PyUnicode_RSplit","PyUnicode_ReadChar","PyUnicode_Replace","PyUnicode_Resize","PyUnicode_RichCompare","PyUnicode_Split","PyUnicode_Splitlines","PyUnicode_Substring","PyUnicode_Tailmatch","PyUnicode_Translate","PyUnicode_Type","PyUnicode_WriteChar","Py_UCS1","Py_UCS2","Py_UCS4","Py_UNICODE","Py_UNICODE_REPLACEMENT_CHARACTER","PyErr_ResourceWarning","PyErr_WarnEx","PyErr_WarnExplicit","PyErr_WarnFormat","0","PyWeakReference","PyWeakref_Check","PyWeakref_CheckProxy","PyWeakref_CheckRef","PyWeakref_CheckRefExact","PyWeakref_GetObject","PyWeakref_NewProxy","PyWeakref_NewRef","_PyWeakref_CallableProxyType","_PyWeakref_ProxyType","_PyWeakref_RefType","borrow","borrow_mut","from","into","try_from","try_into","type_id","0","EnsureGIL","GILGuard","GILPool","GIL_COUNT","OWNED_OBJECTS","POOL","PyObjVec","ReferencePool","START","_not_send","_not_send","acquire","acquire_unchecked","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","decrement_gil_count","dirty","drop","drop","ensure_gil","ensure_gil_unchecked","from","from","from","from","gil_is_acquired","gstate","increment_gil_count","into","into","into","into","new","new","pointer_ops","pool","prepare_freethreaded_python","python","python","python","register_decref","register_decref","register_incref","register_incref","register_owned","start","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_counts","with_embedded_python_interpreter","deprecations","extract_argument","freelist","frompyobject","not_send","pyclass","pyfunction","pymethods","pymodule","CALL_ATTRIBUTE","FunctionDescription","KeywordOnlyParameterDescription","accept_varargs","accept_varkeywords","argument_extraction_error","borrow","borrow","borrow_mut","borrow_mut","cls_name","extract_argument","extract_arguments","extract_arguments_fastcall","extract_arguments_tuple_dict","extract_keyword_arguments","find_keyword_parameter_in_positionals","from","from","full_name","func_name","into","into","keyword_only_parameters","missing_required_arguments","missing_required_keyword_arguments","missing_required_positional_arguments","multiple_values_for_argument","name","positional_only_keyword_arguments","positional_only_parameters","positional_parameter_names","push_parameter_list","required","required_positional_parameters","too_many_positional_arguments","try_from","try_from","try_into","try_into","type_id","type_id","unexpected_keyword_argument","Empty","Filled","FreeList","Slot","borrow","borrow","borrow_mut","borrow_mut","capacity","entries","from","from","insert","into","into","pop","split","try_from","try_from","try_into","try_into","type_id","type_id","with_capacity","0","failed_to_extract_enum","0","NOT_SEND","NotSend","borrow","borrow_mut","from","into","try_from","try_into","type_id","0","0","PyClassDict","PyClassDictSlot","PyClassDummySlot","PyClassWeakRef","PyClassWeakRefSlot","__private__","__private__","__private__","__private__","__private__","__private__","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear_dict","clear_dict","clear_weakrefs","clear_weakrefs","dict_offset","from","from","from","into","into","into","new","new","new","new","new","new","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","weaklist_offset","DEF","PyFunctionDef","wrap_pyfunction","0","IPowModulo","borrow","borrow_mut","extract","from","into","ipowfunc","try_from","try_into","type_id","0","ModuleDef","ModuleInitializer","borrow","borrow","borrow_mut","borrow_mut","ffi_def","from","from","initializer","into","into","make_module","module_init","new","try_from","try_from","try_into","try_into","type_id","type_id","0","1","Py","PyNativeType","PyObject","as_ptr","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow_mut","borrow_mut","call","call0","call1","call_method","call_method0","call_method1","cast_as","cast_as","clone","clone_into","clone_ref","convert","convert","deserialize","drop","eq","extract","extract","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_borrowed_ptr","from_borrowed_ptr_or_err","from_borrowed_ptr_or_opt","from_non_null","from_owned_ptr","from_owned_ptr_or_err","from_owned_ptr_or_opt","get_refcnt","getattr","into","into_non_null","into_ptr","into_py","into_ref","into_ref","into_ref","into_ref","is_none","is_true","new","py","py","serialize","setattr","to_object","to_owned","to_string","try_borrow","try_borrow_mut","try_from","try_from_pycell","try_into","type_id","unchecked_downcast","unchecked_downcast","0","NulByteInString","PrivateMarker","borrow","borrow","borrow_mut","borrow_mut","extract_cstr_or_leak_cstring","fmt","from","from","get_ssize_index","index_impls","index_len_fail","into","into","private_decl","private_impl","pyo3_exception","slice_end_index_len_fail","slice_index_order_fail","slice_start_index_len_fail","try_from","try_from","try_into","try_into","type_id","type_id","VERSION","dumps","loads","0","GILOnceCell","borrow","borrow_mut","from","get","get_mut","get_or_init","into","new","set","try_from","try_into","type_id","0","PanicException","as_ptr","as_ref","borrow","borrow_mut","deref","eq","fmt","fmt","from","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","from_panic_payload","into","new_err","source","to_object","to_string","try_from","try_from","try_from_exact","try_from_unchecked","try_into","type_id","type_object","type_object_raw","type_object_raw","0","0","0","0","1","FromPyObject","GILGuard","None","NotImplemented","Py","PyAny","PyErr","PyModule","PyObject","PyResult","Python","_not_send","acquire_gil","add","add_class","add_function","add_submodule","add_wrapped","allow_threads","as_ptr","as_ptr","as_ref","assume_gil_acquired","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","call0","call1","call_method","call_method0","call_method1","cast_as","cast_as","check_signals","checked_cast_as","clone","clone_into","compare","del_item","delattr","deref","dict","dir","downcast","eq","eq","eval","extract","filename","fmt","fmt","fmt","fmt","from","from","from","from_borrowed_ptr","from_borrowed_ptr_or_err","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_code","from_owned_ptr","from_owned_ptr_or_err","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","get_item","get_refcnt","get_type","get_type","get_type_ptr","getattr","gstate","hasattr","hash","import","import","index","into","into","into","is_callable","is_empty","is_instance","is_instance_of","is_none","is_true","is_type_of","is_type_of","iter","len","name","new","new_pool","pool","py","pyclass","pyfunction","pymethods","pymodule","pyproto","repr","rich_compare","run","run_code","set_item","setattr","state","str","to_object","to_object","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from_exact","try_from_exact","try_from_unchecked","try_from_unchecked","try_into","try_into","try_into","try_into","try_into_exact","type_id","type_id","type_id","type_object","type_object","type_object_raw","type_object_raw","version","version_info","with_gil","with_gil_unchecked","wrap_pyfunction","pyclass","pyfunction","pymethods","pymodule","pyproto","0","BorrowFlag","HAS_MUTABLE_BORROW","PyBorrowError","PyBorrowMutError","PyCell","PyCellBase","PyCellContents","PyCellLayout","PyRef","PyRefMut","UNUSED","_private","_private","as_mut","as_ptr","as_ptr","as_ptr","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_flag","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","contents","convert","convert","convert","convert","decrement","deref","deref","deref","deref_mut","dict","dict_offset","drop","drop","extract","extract","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","get_borrow_flag","get_ptr","increment","inner","inner","into","into","into","into","into","into","into_py","into_py","into_super","into_super","new","ob_base","ob_base","py","py","replace","replace_with","set_borrow_flag","swap","thread_checker","to_string","to_string","tp_dealloc","try_borrow","try_borrow_mut","try_borrow_unguarded","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_exact","try_from_pycell","try_from_pycell","try_from_unchecked","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value","weaklist_offset","weakref","BaseNativeType","Dict","PY_GET_SET_DEF_INIT","PyClass","WeakRef","create_type_object","create_type_object_impl","into_raw","push_dict_getset","py_class_doc","py_class_flags","py_class_method_defs","py_class_properties","py_class_qualified_name","tp_init_additional","type_object_creation_failed","0","PyClassInitializer","PyNativeTypeInitializer","PyObjectInit","__private__","__private__","__private__","add_subclass","borrow","borrow","borrow_mut","borrow_mut","convert","create_cell","create_cell_from_subtype","from","from","from","from","init","into","into","into_new_object","into_new_object","into_new_object","new","super_init","try_from","try_from","try_into","try_into","type_id","type_id","0","Python","PythonVersionInfo","borrow","borrow_mut","eq","eq","fmt","from","from_str","into","major","minor","partial_cmp","partial_cmp","patch","suffix","try_from","try_into","type_id","AsRefTarget","LazyStaticType","MODULE","NAME","PyLayout","PySizedLayout","PyTypeInfo","PyTypeObject","ensure_init","get_or_init","get_tp_alloc","get_tp_free","initialize_tp_dict","initializing_threads","is_exact_type_of","is_type_of","new","tp_dict_filled","type_object","type_object_raw","value","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","IntoPyDict","PyAny","PyBool","PyByteArray","PyBytes","PyCFunction","PyCapsule","PyComplex","PyDate","PyDateAccess","PyDateTime","PyDelta","PyDeltaAccess","PyDict","PyFloat","PyFrozenSet","PyFunction","PyInt","PyIterator","PyList","PyLong","PyMapping","PyModule","PySequence","PySet","PySlice","PySliceIndices","PyString","PyStringData","PyTime","PyTimeAccess","PyTraceback","PyTuple","PyType","PyTzInfo","PyUnicode","Ucs1","Ucs2","Ucs4","any","boolobject","bytearray","bytes","capsule","complex","datetime","dict","floatob","function","get_day","get_days","get_fold","get_hour","get_microsecond","get_microseconds","get_minute","get_month","get_second","get_seconds","get_year","into_py_dict","iterator","list","mapping","module","num","sequence","set","slice","slicelength","start","step","stop","string","traceback","tuple","typeobject","0","0","0","0","PyAny","PyObject_Check","0","PyBool","as_ptr","as_ref","borrow","borrow_mut","deref","eq","fmt","fmt","from","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","into","is_true","is_type_of","new","to_object","to_string","try_from","try_from","try_from_exact","try_from_unchecked","try_into","type_id","type_object","type_object_raw","0","PyByteArray","as_bytes","as_bytes_mut","as_ptr","as_ref","borrow","borrow_mut","data","deref","eq","fmt","fmt","from","from","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","into","is_empty","is_type_of","len","new","new_with","resize","to_object","to_string","to_vec","try_from","try_from","try_from_exact","try_from_unchecked","try_into","type_id","type_object","type_object_raw","0","PyBytes","as_bytes","as_ptr","as_ref","borrow","borrow_mut","deref","eq","fmt","fmt","from","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","from_ptr","index","into","is_type_of","new","new_with","to_object","to_string","try_from","try_from","try_from_exact","try_from_unchecked","try_into","type_id","type_object","type_object_raw","0","AssertNotZeroSized","CapsuleContents","PyCapsule","_CHECK","_CONDITION","as_ptr","as_ref","assert_not_zero_sized","borrow","borrow","borrow_mut","borrow_mut","capsule_destructor","deref","destructor","eq","fmt","fmt","from","from","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","get_context","import","into","into","is_type_of","is_valid","name","new","new_with_destructor","pointer","reference","set_context","to_object","to_string","try_from","try_from","try_from","try_from_exact","try_from_unchecked","try_into","try_into","type_id","type_id","type_object","type_object_raw","value","0","PyComplex","abs","as_ptr","as_ref","borrow","borrow_mut","deref","eq","fmt","fmt","from","from_borrowed_ptr_or_opt","from_complex","from_doubles","from_owned_ptr_or_opt","imag","into","is_type_of","not_limited_impls","pow","real","to_object","to_string","try_from","try_from","try_from_exact","try_from_unchecked","try_into","type_id","type_object","type_object_raw","complex_operation","0","0","0","0","0","PyDate","PyDateAccess","PyDateTime","PyDelta","PyDeltaAccess","PyTime","PyTimeAccess","PyTzInfo","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_timestamp","from_timestamp","get_day","get_day","get_day","get_days","get_days","get_fold","get_fold","get_fold","get_hour","get_hour","get_hour","get_microsecond","get_microsecond","get_microsecond","get_microseconds","get_microseconds","get_minute","get_minute","get_minute","get_month","get_month","get_month","get_second","get_second","get_second","get_seconds","get_seconds","get_year","get_year","get_year","into","into","into","into","into","is_type_of","is_type_of","is_type_of","is_type_of","is_type_of","new","new","new","new","new_with_fold","new_with_fold","opt_to_pyobj","to_object","to_object","to_object","to_object","to_object","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_exact","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_object","type_object","type_object","type_object","type_object","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","0","IntoPyDict","K","PyDict","PyDictItem","PyDictIterator","V","as_mapping","as_ptr","as_ref","borrow","borrow","borrow_mut","borrow_mut","clear","contains","copy","del_item","deref","dict","eq","fmt","fmt","from","from","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","from_sequence","get_item","into","into","into_iter","into_py_dict","is_empty","is_type_of","items","iter","key","keys","len","new","next","pos","set_item","size_hint","to_object","to_string","try_from","try_from","try_from","try_from_exact","try_from_unchecked","try_into","try_into","type_id","type_id","type_object","type_object_raw","value","values","0","PyFloat","as_ptr","as_ref","borrow","borrow_mut","deref","eq","fmt","fmt","from","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","into","is_type_of","new","to_object","to_string","try_from","try_from","try_from_exact","try_from_unchecked","try_into","type_id","type_object","type_object_raw","value","0","0","CLOSURE_CAPSULE_NAME","PyCFunction","PyFunction","as_ptr","as_ptr","as_ref","as_ref","borrow","borrow","borrow_mut","borrow_mut","deref","deref","drop_closure","eq","eq","fmt","fmt","fmt","fmt","from","from","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","internal_new","internal_new_from_pointers","into","into","is_type_of","is_type_of","new","new_closure","new_with_keywords","run_closure","to_object","to_object","to_string","to_string","try_from","try_from","try_from","try_from","try_from_exact","try_from_exact","try_from_unchecked","try_from_unchecked","try_into","try_into","type_id","type_id","type_object","type_object","type_object_raw","type_object_raw","0","PyIterator","as_ptr","as_ref","borrow","borrow_mut","deref","eq","fmt","fmt","from","from_borrowed_ptr_or_opt","from_object","from_owned_ptr_or_opt","into","to_object","to_string","try_from","try_from","try_from_exact","try_from_unchecked","try_into","type_id","0","PyList","PyListIterator","append","as_ptr","as_ref","as_sequence","borrow","borrow","borrow_mut","borrow_mut","contains","del_item","del_slice","deref","empty","eq","fmt","fmt","from","from","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","get_item","get_item_unchecked","get_slice","index","index","index","index","index","index","index","index","index","insert","into","into","into_iter","is_empty","is_type_of","iter","len","list","new","new_from_iter","next","reverse","set_item","set_slice","size_hint","sort","to_object","to_string","try_from","try_from","try_from","try_from_exact","try_from_unchecked","try_into","try_into","type_id","type_id","type_object","type_object_raw","0","PyMapping","as_ptr","as_ref","borrow","borrow_mut","del_item","deref","eq","fmt","fmt","from","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","get_item","into","is_empty","items","keys","len","set_item","to_object","to_string","try_from","try_from","try_from_exact","try_from_unchecked","try_into","type_id","values","0","PyModule","0","PyLong","as_ptr","as_ref","borrow","borrow_mut","deref","eq","err_if_invalid_value","fast_128bit_int_conversion","fmt","fmt","from","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","int_convert_u64_or_i64","int_fits_c_long","int_fits_larger_int","into","is_type_of","to_object","to_string","try_from","try_from","try_from_exact","try_from_unchecked","try_into","type_id","type_object","type_object_raw","int_convert_128","0","PySequence","as_ptr","as_ref","borrow","borrow_mut","concat","contains","count","del_item","del_slice","deref","eq","extract_sequence","fmt","fmt","from","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","get_item","get_slice","in_place_concat","in_place_repeat","index","index","index","index","index","index","index","index","into","is_empty","len","list","repeat","sequence_len","sequence_slice","set_item","set_slice","to_object","to_string","try_from","try_from","try_from_exact","try_from_unchecked","try_into","tuple","type_id","0","0","PyFrozenSet","PySet","PySetIterator","add","as_ptr","as_ptr","as_ref","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","contains","contains","deref","deref","discard","empty","empty","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","into","into","into","into_iter","is_empty","is_empty","is_type_of","is_type_of","iter","iter","len","len","new","new","new","next","pop","pos","set","size_hint","to_object","to_object","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from_exact","try_from_exact","try_from_unchecked","try_from_unchecked","try_into","try_into","try_into","type_id","type_id","type_id","type_object","type_object","type_object_raw","type_object_raw","0","PySlice","PySliceIndices","as_ptr","as_ref","borrow","borrow","borrow_mut","borrow_mut","deref","eq","fmt","fmt","from","from","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","indices","into","into","is_type_of","new","new","slicelength","start","step","stop","to_object","to_object","to_string","try_from","try_from","try_from","try_from_exact","try_from_unchecked","try_into","try_into","type_id","type_id","type_object","type_object_raw","0","PyString","PyStringData","Ucs1","Ucs2","Ucs4","as_bytes","as_ptr","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","data","deref","eq","eq","fmt","fmt","fmt","from","from","from_borrowed_ptr_or_opt","from_object","from_owned_ptr_or_opt","into","into","is_type_of","ne","new","to_object","to_owned","to_str","to_string","to_string","to_string_lossy","to_string_lossy","try_from","try_from","try_from","try_from_exact","try_from_unchecked","try_into","try_into","type_id","type_id","type_object","type_object_raw","value_width_bytes","0","0","0","0","PyTraceback","as_ptr","as_ref","borrow","borrow_mut","deref","eq","fmt","fmt","format","from","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","into","is_type_of","to_object","to_string","try_from","try_from","try_from_exact","try_from_unchecked","try_into","type_id","type_object","type_object_raw","0","PyTuple","PyTupleIterator","as_ptr","as_ref","as_sequence","as_slice","borrow","borrow","borrow_mut","borrow_mut","contains","deref","empty","eq","fmt","fmt","from","from","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","get_item","get_item_unchecked","get_slice","index","index","index","index","index","index","index","index","index","into","into","into_iter","is_empty","is_type_of","iter","len","len","length","new","next","size_hint","slice","split_from","to_object","to_string","try_from","try_from","try_from","try_from_exact","try_from_unchecked","try_into","try_into","tuple","tuple_conversion","type_id","type_id","type_object","type_object_raw","wrong_tuple_length","0","PyType","as_ptr","as_ref","as_type_ptr","borrow","borrow_mut","deref","eq","fmt","fmt","from","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","from_type_ptr","into","is_instance","is_subclass","is_subclass_of","is_type_of","name","new","to_object","to_string","try_from","try_from","try_from_exact","try_from_unchecked","try_into","type_id","type_object","type_object_raw"],"q":["pyo3","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::buffer::ElementType","","","pyo3::callback","","","","","","","","","","","","","","","","","","","","pyo3::class","","","","","","","","","","","","pyo3::class::basic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::class::buffer","","","","","","","","","pyo3::class::descr","","","","","","","","","","","","","","","pyo3::class::gc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::class::implpyo3::class::iter","","","","","","","","","","","","","","","","","","","","","","","pyo3::class::iter::IterNextOutput","","pyo3::class::macros","","","","","","","","","","","","","","","","","","pyo3::class::mapping","","","","","","","","","","","","","","","","","","","","","","pyo3::class::methodspyo3::class::methods::PyMethodDefType","","","","","","pyo3::class::methods::PyMethodType","","","pyo3::class::numberpyo3::class::pyasync","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::class::pyasync::IterANextOutput","","pyo3::class::sequence","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::conversion","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::conversions","","","","","","","","","","pyo3::conversions::array","","pyo3::conversions::array::min_const_generics","","pyo3::conversions::num_bigint","","pyo3::conversions::num_complex","pyo3::derive_utils","","","","","","","","","","","","","","","","","","pyo3::derive_utils::PyFunctionArguments","","pyo3::err","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::err::err_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::err::err_state::PyErrState","","","","","","","","pyo3::err::impls","pyo3::exceptionspyo3::exceptions::asynciopyo3::exceptions::socket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffipyo3::ffi::abstract_","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::bltinmodule","","","pyo3::ffi::boolobject","","","","","","","","","pyo3::ffi::bytearrayobject","","","","","","","","","","pyo3::ffi::bytesobject","","","","","","","","","","","","","","","pyo3::ffi::ceval","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::codecs","","","","","","","","","","","","","","","","","pyo3::ffi::compile","","","","pyo3::ffi::complexobject","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::context","","","","","","","","","","","","","","","pyo3::ffi::cpython","","","","","","","","","","","","","","","","","","pyo3::ffi::cpython::abstract_","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::cpython::bytesobject","pyo3::ffi::cpython::ceval","","","","pyo3::ffi::cpython::code","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::cpython::compile","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::cpython::dictobject","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::cpython::frameobject","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::cpython::import","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::cpython::initconfig","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::cpython::listobject","","","","","","","","","","","","","","","","","pyo3::ffi::cpython::object","","","","","","","","pyo3::ffi::cpython::object::bufferinfo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::cpython::object::typeobjectpyo3::ffi::cpython::pydebug","","","","","","","","","","","","","","","","pyo3::ffi::cpython::pylifecycle","","","","","","","pyo3::ffi::cpython::pymem","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::cpython::pystate","","","","","","","","","","","","","","","pyo3::ffi::cpython::pythonrun","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::cpython::tupleobject","","","","","","","","","","","","","pyo3::ffi::cpython::unicodeobject","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::datetime","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::descrobject","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::dictobject","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::enumobject","","pyo3::ffi::eval","","pyo3::ffi::fileobject","","","","","","","","","pyo3::ffi::fileutils","","pyo3::ffi::floatobject","","","","","","","","","","","","","","","","","","","","pyo3::ffi::funcobject","","","","","","","","","","","","","","","pyo3::ffi::genobject","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::import","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::intrcheck","","","","","","pyo3::ffi::iterobject","","","","","","pyo3::ffi::listobject","","","","","","","","","","","","","","","","pyo3::ffi::longobject","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::marshal","","pyo3::ffi::memoryobject","","","","","pyo3::ffi::methodobject","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::modsupport","","","","","","","","","","","","","","","","","","","","pyo3::ffi::moduleobject","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::objectpyo3::ffi::objimpl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::osmodule","pyo3::ffi::pyarena","","","","","","","","","pyo3::ffi::pycapsule","","","","","","","","","","","","","","pyo3::ffi::pyerrorspyo3::ffi::pyframe","pyo3::ffi::pyhash","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::pylifecycle","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::pymem","","","","pyo3::ffi::pyport","","","","","","","pyo3::ffi::pystate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::pystrtod","","","","","","","","pyo3::ffi::pythonrun","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::rangeobject","","","","pyo3::ffi::setobject","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::sliceobject","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::structmember","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::structseq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::sysmodule","","","","","","","","","","","","","","","pyo3::ffi::traceback","","","","pyo3::ffi::tupleobject","","","","","","","","","","","pyo3::ffi::typeslots","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::unicodeobject","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::ffi::warnings","","","","pyo3::ffi::weakrefobject","","","","","","","","","","","","","","","","","","","pyo3::gil","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::impl_","","","","","","","","","pyo3::impl_::deprecations","pyo3::impl_::extract_argument","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::impl_::freelist","","","","","","","","","","","","","","","","","","","","","","","","pyo3::impl_::freelist::Slot","pyo3::impl_::frompyobject","pyo3::impl_::not_send","","","","","","","","","","pyo3::impl_::pyclass","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::impl_::pyfunction","","","pyo3::impl_::pymethods","","","","","","","","","","","pyo3::impl_::pymodule","","","","","","","","","","","","","","","","","","","","","","pyo3::instance","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::internal_tricks","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::marshal","","","pyo3::once_cell","","","","","","","","","","","","","","pyo3::panic","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::proc_macro","","","","","pyo3::pycell","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::pyclass","","","","","","","","","","","","","","","","pyo3::pyclass_init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::python","","","","","","","","","","","","","","","","","","","","pyo3::type_object","","","","","","","","","","","","","","","","","","","","","pyo3::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::types::PyStringData","","","pyo3::types::any","","","pyo3::types::boolobject","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::types::bytearray","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::types::bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::types::capsule","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::types::complex","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::types::complex::not_limited_impls","pyo3::types::datetimepyo3::types::dict","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::types::floatob","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::types::function","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::types::iterator","","","","","","","","","","","","","","","","","","","","","","","pyo3::types::list","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::types::mapping","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::types::module","","pyo3::types::num","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::types::num::fast_128bit_int_conversion","pyo3::types::sequence","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::types::set","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::types::slice","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::types::string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::types::string::PyStringData","","","pyo3::types::traceback","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::types::tuple","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3::types::typeobject","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","RAII type that represents the Global Interpreter Lock …","A RAII pool which PyO3 uses to store owned Python …","A GIL-independent reference to an object allocated on the …","Represents any Python object.","Error that indicates a failure to convert a PyAny to a …","Represents a Python exception.","Helper conversion trait that allows to use custom …","Types that are built into the Python interpreter.","A commonly-used alias for <code>Py&lt;PyAny&gt;</code>.","Represents the result of a Python call.","A marker token that represents holding the GIL.","Represents the major, minor, and patch (if any) versions …","","","A conversion from anyhow’s <code>Error</code> type to <code>PyErr</code>.","Arguments for exception","<code>PyBuffer</code> implementation","Utilities for a Python callable object that invokes a Rust …","Use this macro for all internal callback functions which …","Python object protocols","Defines conversions between Rust and Python types.","This module contains conversions between various Rust …","","","Defines a new exception type.","<code>impl $crate::type_object::PyTypeObject for $name</code> where …","Functionality for the code generated by the derive backend","","Exception types defined by Python.","A conversion from eyre’s <code>Report</code> type to <code>PyErr</code>.","Raw FFI declarations for Python’s C API.","","","","","","","","","","","","","","","","","","","","","Interaction with Python’s global interpreter lock","","Conversions to and from hashbrown’s <code>HashMap</code> and <code>HashSet</code>.","Internals of PyO3 which are accessed by code expanded from …","The boilerplate to convert between a Rust type and a …","Defines a Rust type for an exception defined in Python …","Conversions to and from indexmap’s <code>IndexMap</code>.","","","","Python major version (e.g. <code>3</code>).","Support for the Python <code>marshal</code> format.","Python minor version (e.g. <code>11</code>).","Conversions to and from num-bigint’s <code>BigInt</code> and <code>BigUint</code> …","Conversions to and from num-complex’ <code>Complex</code><code>&lt;</code><code>f32</code><code>&gt;</code> and …","A write-once cell mediated by the Python GIL.","Helper to convert Rust panics to Python exceptions.","Python patch version (e.g. <code>0</code>).","","PyO3’s prelude.","Prepares the use of Python in a free-threaded context.","","A convenient macro to execute a Python code snippet, with …","","PyO3’s interior mutability primitive.","<code>PyClass</code> and related traits.","A proc macro used to expose Rust structs as Python objects.","Contains initialization utilities for <code>#[pyclass]</code>.","A proc macro used to expose Rust functions to Python.","A proc macro used to expose methods to Python.","A proc macro used to implement Python modules.","Declares all of the boilerplate for Python types which can …","","Declares all of the boilerplate for Python types.","","","","","A proc macro used to implement Python’s dunder methods.","","Enables (de)serialization of <code>Py</code><code>&lt;T&gt;</code> objects via serde.","Initial length of owned objects and anys. <code>Option</code> is used …","","Python version suffix, if applicable (e.g. <code>a0</code>).","","Python type object information","Various types defined by the Python interpreter such as <code>int</code>…","Executes the provided closure with an embedded Python …","Wraps a Rust function annotated with <code>#[pyfunction]</code>.","Returns a function that takes a <code>Python</code> instance and …","","","","A boolean type.","Trait implemented for possible element types of <code>PyBuffer</code>.","Represents the type of a Python buffer element.","A float type and its width in bytes.","Allows access to the underlying buffer used by a python …","Like std::cell::Cell, but only provides read-only access …","A signed integer type and its width in bytes.","An unknown type. This may occur when parsing has failed.","An unsigned integer type and its width in bytes.","Gets the buffer memory as a slice.","Gets the buffer memory as a slice.","Gets the buffer memory as a slice.","Returns a pointer to the current value.","Gets the buffer memory as a slice.","","","","","","","","Gets the pointer to the start of the buffer memory.","","","Copies the specified slice into the buffer. If the buffer …","Copies the specified slice into the buffer. If the buffer …","","Copies the buffer elements to the specified slice. If the …","Copies the buffer elements to the specified slice. If the …","","Gets the number of dimensions.","","","","","","A NUL terminated string in struct module style syntax …","","","","Determines the <code>ElementType</code> from a Python <code>struct</code> module …","Get the underlying buffer from the specified python object.","Returns a copy of the current value.","Gets a pointer to the specified item.","","","","","Gets whether the buffer is contiguous in C-style order …","Gets whether the element specified in the format string is …","Gets whether the buffer is contiguous in Fortran-style …","","Gets the total number of items.","Gets the size of a single element, in bytes. Important …","<code>item_size() * item_count()</code>. For contiguous arrays, this is …","","","Gets whether the underlying buffer is read-only.","","Returns an array of length <code>dimensions</code>. <code>shape()[i]</code> is the …","","Returns an array that holds, for each dimension, the …","An array of length ndim. If <code>suboffsets[n] &gt;= 0</code>, the values …","Copies the buffer elements to a newly allocated vector. If …","","Copies the buffer elements to a newly allocated vector. If …","","","","","","","","","","","","","","","The error value to return to python if the callback raised …","","Convert the result of callback function into the …","A type which can be the return type of a python C-API …","","","","","","","","Variant of the above which does not perform the callback …","","","","","","","","Basic Python Object customization","Represent Python Buffer protocol implementation","Python Description Interface","Python GC support","","Python Iterator Interface. Trait and support …","","Python Mapping Interface Trait and support implementation …","","Python Number Interface Trait and support implementation …","Python Async/Await Interface.","Python Sequence Interface Trait and support implementation …","Operators for the <code>__richcmp__</code> method","The equality operator.","The <em>greater than or equal to</em> operator.","The <em>greater than</em> operator.","The <em>less than or equal to</em> operator.","The <em>less than</em> operator.","","","","The <em>not equal to</em> operator.","","","","","","Basic Python class customization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Buffer protocol interface","","","","","","","","","","","","Descriptor interface","","","","","","","","","","","","","GC support","","","Object visitor for GC.","","","VisitProc contains a Python instance to ensure that","","","","","","Visit <code>obj</code>.","","","","","","","","","","","","","","","","","","","","","","","","Base class","Class doc string","#[pyclass(subclass)]","#[pyclass(gc)]","#[pyclass(extends=…)]","","","Layout","","","","","","Trait denoting that this class is suitable to be used as a …","","","","Implements the underlying functionality of <code>#[pyclass]</code>, …","This type is used as a “dummy” type on which dtolnay …","Implementation detail. Only to be used through our proc …","","","Implements a freelist.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This handles following two situations:","","Thread checker for unsendable types. Panics when the value …","Thread checker for types that have <code>Send</code> and <code>extends=...</code>. …","Stub checker for <code>Send</code> types.","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _attr must be valid non-null Python …","Safety: _slf and _attr must be valid non-null Python …","Safety: _slf and _attr must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","This trait is private to implement; this method exists to …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _attr must be valid non-null Python …","Safety: _slf and _attr must be valid non-null Python …","Safety: _slf and _attr must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","Safety: _slf and _other must be valid non-null Python …","","Implementation of tp_alloc for <code>freelist</code> classes.","","","","","","","","","Macro which expands to three items","Macro which expands to three items","","","","","Default new implementation","","","","Implementation of tp_free for <code>freelist</code> classes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the methods for a single <code>#[pymethods] impl</code> block","","","","","","","","","","","","","Returns the slots for a single <code>#[pymethods] impl</code> block","","","Implementation of tp_dealloc for all pyclasses","","","","","Output of <code>__next__</code> which can either <code>yield</code> the next value …","","","","Python Iterator Interface.","","","","","The <code>StopIteration</code> object.","The value yielded by the iterator.","","","","","","","","","","","","","","","","Call <code>slf.try_borrow_mut()?.$fn(...)</code>","","Call <code>slf.try_borrow()?.$fn(...)</code>","","","","","","","","","","","","","","","","","","","","","Mapping interface","","","","","","","","","","","","","","","","","","","","","","Represents class method","Represents class attribute, used by <code>#[attribute]</code>","Represents getter descriptor, used by <code>#[getter]</code>","Represents normal method","","","","","","","","","","","","<code>PyMethodDefType</code> represents different types of Python …","","","","Represents setter descriptor, used by <code>#[setter]</code>","Represents static method","Convert <code>PyMethodDef</code> to Python method definition struct …","","","","","","","","","","","","","","","","","","","","","","","","","Define a function that can take <code>*args</code> and <code>**kwargs</code>.","","","","","","","","","","","","","","","","","","","","","","","Copy descriptor information to <code>ffi::PyGetSetDef</code>","Copy descriptor information to <code>ffi::PyGetSetDef</code>","","","Define a function that can take <code>*args</code> and <code>**kwargs</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Define a class attribute.","Define a getter.","Define a setter.","Define a function with no <code>*args</code> and <code>**kwargs</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number interfaceutput of <code>__anext__</code>.","","","","Python Async/Await support interface.","An IterANextOutput of Python objects.","","","","","","","A <code>StopAsyncIteration</code> object.","An expression which the generator yielded.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sequence interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This trait represents that <strong>we can do zero-cost conversion </strong>…","<code>FromPyObject</code> is implemented by various types that can be …","Raw level conversion between <code>*mut ffi::PyObject</code> and PyO3 …","Defines a conversion from a Rust type to a Python object.","This trait allows retrieving the underlying FFI pointer …","Trait implemented by Python object types that allow a …","Trait implemented by Python object types that allow a …","This trait has two implementations: The slow one is …","Conversion trait that allows various objects to be …","Retrieves the underlying FFI pointer (as a borrowed …","Extracts <code>Self</code> from the source <code>PyObject</code>.","Convert from an arbitrary borrowed <code>PyObject</code>.","Convert from an arbitrary borrowed <code>PyObject</code>.","Convert from an arbitrary borrowed <code>PyObject</code>.","Convert from an arbitrary borrowed <code>PyObject</code>.","Convert from an arbitrary <code>PyObject</code> or panic.","Convert from an arbitrary <code>PyObject</code>.","Convert from an arbitrary <code>PyObject</code>.","Convert from an arbitrary <code>PyObject</code> or panic.","Retrieves the underlying FFI pointer. Whether pointer …","Performs the conversion.","Converts self into a Python object.","Cast from a concrete Python object type to PyObject.","Cast from a concrete Python object type to PyObject. With …","Cast a PyAny to a specific type of PyObject. The caller …","Cast from PyObject to a concrete Python object type.","Cast from PyObject to a concrete Python object type. With …","Converts self into a Python object and calls the specified …","A conversion from anyhow’s <code>Error</code> type to <code>PyErr</code>.","","A conversion from eyre’s <code>Report</code> type to <code>PyErr</code>.","Conversions to and from hashbrown’s <code>HashMap</code> and <code>HashSet</code>.","Conversions to and from indexmap’s <code>IndexMap</code>.","Conversions to and from num-bigint’s <code>BigInt</code> and <code>BigUint</code> …","Conversions to and from num-complex’ <code>Complex</code><code>&lt;</code><code>f32</code><code>&gt;</code> and …","","","Enables (de)serialization of <code>Py</code><code>&lt;T&gt;</code> objects via serde.","","","","","","","","","Utility trait to enable &amp;PyClass as a pymethod/function …","Enum to abstract over the arguments of Python function …","","","","A trait for types that can be borrowed from a cell.","","","","","","","","","","","","","","Error that indicates a failure to convert a PyAny to a …","Represents a Python exception.","Represents the result of a Python call.","","","","","Return the cause (either an exception instance, or None, …","Clone the PyErr. This requires the GIL, which is why PyErr …","","","","Returns Ok if the error code is not -1.","","Equivalent to PyErr::take, but when no error is set:","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deprecated name for <code>PyErr::from_value</code>.","","Constructs a new PyErr from the given Python type and …","Creates a new PyErr.","Returns the type of this exception.","","Deprecated name for <code>PyErr::value</code>.","","","Deprecated name for <code>PyErr::into_value</code>.","","Consumes self to take ownership of the exception value …","Returns true if the current exception is instance of <code>T</code>.","Returns true if the current exception is instance of <code>T</code>.","","Returns true if the current exception matches the …","Creates a new PyErr of type <code>T</code>.","","Creates a new exception type with the given name and …","","Gets whether an error is present in the Python interpreter…","","Prints a standard traceback to <code>sys.stderr</code>.","Prints a standard traceback to <code>sys.stderr</code>, and sets …","Deprecated name for <code>PyErr::traceback</code>.","Deprecated name for <code>PyErr::get_type</code>.","Deprecated name for <code>PyErr::value</code>.","Writes the error back to the Python interpreter’s global …","Set the cause associated with the exception, pass <code>None</code> to …","","Takes the current error from the Python interpreter’s …","","","","","Returns the traceback of this exception object.","","","","","","","Returns borrowed reference to this Err’s type","Returns the value of this exception.","Issues a warning message. May return a <code>PyErr</code> if …","","","","","Helper conversion trait that allows to use custom …","","","Arguments for exception","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents Python’s <code>ArithmeticError</code> exception.","Represents Python’s <code>AssertionError</code> exception.","Represents Python’s <code>AttributeError</code> exception.","Represents Python’s <code>BaseException</code> exception.","Represents Python’s <code>BlockingIOError</code> exception.","Represents Python’s <code>BrokenPipeError</code> exception.","Represents Python’s <code>BufferError</code> exception.","Represents Python’s <code>ChildProcessError</code> exception.","Represents Python’s <code>ConnectionAbortedError</code> exception.","Represents Python’s <code>ConnectionError</code> exception.","Represents Python’s <code>ConnectionRefusedError</code> exception.","Represents Python’s <code>ConnectionResetError</code> exception.","Represents Python’s <code>EOFError</code> exception.","Represents Python’s <code>EnvironmentError</code> exception.","Represents Python’s <code>Exception</code> exception.","Represents Python’s <code>FileExistsError</code> exception.","Represents Python’s <code>FileNotFoundError</code> exception.","Represents Python’s <code>FloatingPointError</code> exception.","Represents Python’s <code>GeneratorExit</code> exception.","Represents Python’s <code>IOError</code> exception.","Represents Python’s <code>ImportError</code> exception.","Represents Python’s <code>IndexError</code> exception.","Represents Python’s <code>InterruptedError</code> exception.","Represents Python’s <code>IsADirectoryError</code> exception.","Represents Python’s <code>KeyError</code> exception.","Represents Python’s <code>KeyboardInterrupt</code> exception.","Represents Python’s <code>LookupError</code> exception.","Represents Python’s <code>MemoryError</code> exception.","Represents Python’s <code>ModuleNotFoundError</code> exception.","Represents Python’s <code>NameError</code> exception.","Represents Python’s <code>NotADirectoryError</code> exception.","Represents Python’s <code>NotImplementedError</code> exception.","Represents Python’s <code>OSError</code> exception.","Represents Python’s <code>OverflowError</code> exception.","Represents Python’s <code>PermissionError</code> exception.","Represents Python’s <code>ProcessLookupError</code> exception.","Represents Python’s <code>RecursionError</code> exception.","Represents Python’s <code>ReferenceError</code> exception.","Represents Python’s <code>RuntimeError</code> exception.","Represents Python’s <code>StopAsyncIteration</code> exception.","Represents Python’s <code>StopIteration</code> exception.","Represents Python’s <code>SyntaxError</code> exception.","Represents Python’s <code>SystemError</code> exception.","Represents Python’s <code>SystemExit</code> exception.","Represents Python’s <code>TimeoutError</code> exception.","Represents Python’s <code>TypeError</code> exception.","Represents Python’s <code>UnboundLocalError</code> exception.","Represents Python’s <code>UnicodeDecodeError</code> exception.","Represents Python’s <code>UnicodeEncodeError</code> exception.","Represents Python’s <code>UnicodeError</code> exception.","Represents Python’s <code>UnicodeTranslateError</code> exception.","Represents Python’s <code>ValueError</code> exception.","Represents Python’s <code>ZeroDivisionError</code> exception.","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Exceptions defined in Python’s <code>asyncio</code> modulereates a Python <code>UnicodeDecodeError</code>.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a Python <code>UnicodeDecodeError</code> from a Rust UTF-8 …","Exceptions defined in Python’s <code>socket</code> moduleust type representing an exception defined in Python …","A Rust type representing an exception defined in Python …","A Rust type representing an exception defined in Python …","A Rust type representing an exception defined in Python …","A Rust type representing an exception defined in Python …","A Rust type representing an exception defined in Python …","A Rust type representing an exception defined in Python …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Rust type representing an exception defined in Python …","A Rust type representing an exception defined in Python …","","","","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","","","","A Rust type representing an exception defined in Python …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maximum number of dimensions","","","","","","","","","","","","","built-in ‘object’","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safe wrapper around the Python datetime C-API global. Note …","","Check if <code>op</code> is a <code>PyDateTimeAPI.DateTimeType</code> or subtype.","Check if <code>op</code>’s type is exactly <code>PyDateTimeAPI.DateTimeType</code>.","Retrieve the fold component of a <code>PyDateTime_DateTime</code>. …","Retrieve the hour component of a <code>PyDateTime_DateTime</code>. …","Retrieve the microsecond component of a <code>PyDateTime_DateTime</code>…","Retrieve the minute component of a <code>PyDateTime_DateTime</code>. …","Retrieve the second component of a <code>PyDateTime_DateTime</code>. …","Retrieve the tzinfo component of a <code>PyDateTime_DateTime</code>. …","Retrieve the days component of a <code>PyDateTime_Delta</code>.","Retrieve the seconds component of a <code>PyDateTime_Delta</code>.","Retrieve the seconds component of a <code>PyDateTime_Delta</code>.","Structure representing a <code>datetime.date</code>","Structure representing a <code>datetime.datetime</code>","Structure representing a <code>datetime.timedelta</code>.","","Retrieve the day component of a <code>PyDateTime_Date</code> or …","Retrieve the month component of a <code>PyDateTime_Date</code> or …","Retrieve the year component of a <code>PyDateTime_Date</code> or …","Populates the <code>PyDateTimeAPI</code> object","Retrieve the fold component of a <code>PyDateTime_Time</code>. Returns …","Retrieve the hour component of a <code>PyDateTime_Time</code>. Returns …","Retrieve the microsecond component of a <code>PyDateTime_DateTime</code>…","Retrieve the minute component of a <code>PyDateTime_Time</code>. …","Retrieve the second component of a <code>PyDateTime_DateTime</code>. …","Retrieve the tzinfo component of a <code>PyDateTime_Time</code>. …","Structure representing a <code>datetime.time</code>.","Safe wrapper around the Python C-API global …","Type Check macros","Check if <code>op</code>’s type is exactly <code>PyDateTimeAPI.DateType</code>.","","Check if <code>op</code> is a <code>PyDateTimeAPI.DetaType</code> or subtype.","Check if <code>op</code>’s type is exactly <code>PyDateTimeAPI.DeltaType</codestruct _frame as typedef’ed in pyframe.h","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Macro, trading safety for speed","","","","","","","Macro, <em>only</em> to be used to fill in brand new listsest if an object has a GC head","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","built-in ‘super’","","","","","","","","","","","","","","","","","","Check if <code>op</code> is a <code>PyDateTimeAPI.TZInfoType</code> or subtype.","Check if <code>op</code>’s type is exactly <code>PyDateTimeAPI.TZInfoType</code>.","","","","","","","","","","","Check if <code>op</code> is a <code>PyDateTimeAPI.TimeType</code> or subtype.","Check if <code>op</code>’s type is exactly <code>PyDateTimeAPI.TimeType</code>.","","","","","","","","","","","","","","","","","","","","Macro, trading safety for speed","","","","","Macro, <em>only</em> to be used to fill in brand new tuples","","","","","","","","","","","","","","","","","Test if a type has a GC head","","","","Test if a type supports weak references","","","built-in ‘type’et if the type allows subclassing","","","","","","Objects support garbage collection (see objimp.h)","Set if the type implements the vectorcall protocol (PEP …","Objects support type attribute cache","Set if the type object is dynamically allocated","","","","Set if the type is ‘ready’ – fully initialized","Set while the type is being ‘readied’, to prevent …bindings to the functions and structs defined in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Owned reference","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A bit field with various propertiesstruct _frame as typedef’ed in pyframe.hacro, trading safety for speed","","Macro, <em>only</em> to be used to fill in brand new lists","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maximum number of dimensions","","","","","","","","","","","","","","","","","","","","","","","","","","","Owned referenceacro, trading safety for speed","Macro, <em>only</em> to be used to fill in brand new tuples","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A bit field with various properties.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safe wrapper around the Python datetime C-API global. Note …","","Check if <code>op</code> is a <code>PyDateTimeAPI.DateTimeType</code> or subtype.","Check if <code>op</code>’s type is exactly <code>PyDateTimeAPI.DateTimeType</code>.","Retrieve the fold component of a <code>PyDateTime_DateTime</code>. …","Retrieve the hour component of a <code>PyDateTime_DateTime</code>. …","Retrieve the microsecond component of a <code>PyDateTime_DateTime</code>…","Retrieve the minute component of a <code>PyDateTime_DateTime</code>. …","Retrieve the second component of a <code>PyDateTime_DateTime</code>. …","Retrieve the tzinfo component of a <code>PyDateTime_DateTime</code>. …","Retrieve the days component of a <code>PyDateTime_Delta</code>.","Retrieve the seconds component of a <code>PyDateTime_Delta</code>.","Retrieve the seconds component of a <code>PyDateTime_Delta</code>.","Structure representing a <code>datetime.date</code>","Structure representing a <code>datetime.datetime</code>","Structure representing a <code>datetime.timedelta</code>.","","Retrieve the day component of a <code>PyDateTime_Date</code> or …","Retrieve the month component of a <code>PyDateTime_Date</code> or …","Retrieve the year component of a <code>PyDateTime_Date</code> or …","Populates the <code>PyDateTimeAPI</code> object","Retrieve the fold component of a <code>PyDateTime_Time</code>. Returns …","Retrieve the hour component of a <code>PyDateTime_Time</code>. Returns …","Retrieve the microsecond component of a <code>PyDateTime_DateTime</code>…","Retrieve the minute component of a <code>PyDateTime_Time</code>. …","Retrieve the second component of a <code>PyDateTime_DateTime</code>. …","Retrieve the tzinfo component of a <code>PyDateTime_Time</code>. …","Structure representing a <code>datetime.time</code>.","Safe wrapper around the Python C-API global …","Type Check macros","Check if <code>op</code>’s type is exactly <code>PyDateTimeAPI.DateType</code>.","","Check if <code>op</code> is a <code>PyDateTimeAPI.DetaType</code> or subtype.","Check if <code>op</code>’s type is exactly <code>PyDateTimeAPI.DeltaType</code>.","Check if <code>op</code> is a <code>PyDateTimeAPI.TZInfoType</code> or subtype.","Check if <code>op</code>’s type is exactly <code>PyDateTimeAPI.TZInfoType</code>.","Check if <code>op</code> is a <code>PyDateTimeAPI.TimeType</code> or subtype.","Check if <code>op</code>’s type is exactly <code>PyDateTimeAPI.TimeType</codebuilt-in ‘object’","","","","","","","","","","","","","","","","","","","","","","","","","","","","built-in ‘super’","","","","","","","","","","","","","","","","","built-in ‘type’","","","","","","","","","","","","","","","","","","","","","","","Set if the type allows subclassing","","","","","","Objects support garbage collection (see objimp.h)","","Set if the type implements the vectorcall protocol (PEP …","Objects support type attribute cache","Set if the type object is dynamically allocated","","","","Set if the type is ‘ready’ – fully initialized","Set while the type is being ‘readied’, to prevent …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Test if an object has a GC head","","","","","","Test if a type has a GC head","Test if a type supports weak referencestruct used internally which avoids acquiring the GIL …","RAII type that represents the Global Interpreter Lock …","A RAII pool which PyO3 uses to store owned Python …","This is an internal counter in pyo3 monitoring whether …","Temporarily hold objects that will be released when the …","","","Thread-safe storage for objects which were inc_ref / …","","","","PyO3 internal API for acquiring the GIL. The public API is …","Acquires the <code>GILGuard</code> without performing any state …","","","","","","","","","Decrements pyo3’s internal GIL count - to be called …","","","","Ensures the GIL is held, used in the implementation of …","Ensures the GIL is held, without interpreter state …","","","","","Checks whether the GIL is acquired.","","Increments pyo3’s internal GIL count - to be called …","","","","","","Creates a new <code>GILPool</code>. This function should only ever be …","","","Prepares the use of Python in a free-threaded context.","Retrieves the marker type that proves that the GIL was …","Gets the Python token associated with this <code>GILPool</code>.","Get the GIL token.","Registers a Python object pointer inside the release pool, …","","Registers a Python object pointer inside the release pool, …","","Registers an owned object inside the GILPool, to be …","Initial length of owned objects and anys. <code>Option</code> is used …","","","","","","","","","","","","","","Executes the provided closure with an embedded Python …","Symbols used to denote deprecated usages of PyO3’s proc …","","Support for free allocation lists.","","","","","","Implementation details of <code>#[pymodule]</code> which need to be …","","Function argument specification for a <code>#[pyfunction]</code> or …","","","","Adds the argument name to the error message of an error …","","","","","","","Extracts the <code>args</code> and <code>kwargs</code> provided into <code>output</code>, …","Wrapper around <code>extract_arguments</code> which uses the Python …","Wrapper around <code>extract_arguments</code> which uses the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A free slot.","An allocated slot.","A free allocation list.","Represents a slot of a <code>FreeList</code>.","","","","","","","","","Inserts a value into the list. Returns <code>None</code> if the <code>FreeList</code>…","","","Pops the first non empty item.","","","","","","","","Creates a new <code>FreeList</code> instance with specified capacity.","","","","","A marker type that makes the type !Send. Workaround for …","","","","","","","","","","Represents the <code>__dict__</code> field for <code>#[pyclass]</code>.","Actual dict field, which holds the pointer to <code>__dict__</code>.","Zero-sized dummy field.","Represents the <code>__weakref__</code> field for <code>#[pyclass]</code>.","Actual weakref field, which holds the pointer to …","This trait is private to implement; this method exists to …","This trait is private to implement; this method exists to …","","","","","","","","","","","Empties the dictionary of its key-value pairs.","","Clears the weak references to the given object.","","Gets the offset of the dictionary from the start of the …","","","","","","","Initializes a PyObject <code>__dict__</code> reference.","Initializes a <code>weakref</code> instance.","","","","","","","","","","","","","","Gets the offset of the weakref list from the start of the …","","","","","Python 3.8 and up - <strong>ipow</strong> has modulo argument correctly …","","","","","","Helper to use as pymethod ffi definition","","","","","<code>Sync</code> wrapper of <code>ffi::PyModuleDef</code>.","Wrapper to enable initializer to be used in const fns.","","","","","","","","","","","Builds a module using user given initializer. Used for …","Implementation of <code>PyInit_foo</code> functions generated in …","Make new module definition with given module name.","","","","","","","","","A GIL-independent reference to an object allocated on the …","Types that are built into the Python interpreter.","A commonly-used alias for <code>Py&lt;PyAny&gt;</code>.","Gets the underlying FFI pointer, returns a borrowed …","Borrows a GIL-bound reference to the PyIterator. By …","Borrows a GIL-bound reference to the PyMapping. By binding …","Borrows a GIL-bound reference to the contained <code>T</code>.","Borrows a GIL-bound reference to the PySequence. By …","","Immutably borrows the value <code>T</code>.","","Mutably borrows the value <code>T</code>.","Calls the object.","Calls the object without arguments.","Calls the object with only positional arguments.","Calls a method on the object.","Calls a method on the object with no arguments.","Calls a method on the object with only positional …","Casts the PyObject to a concrete Python object type.","Casts the PyObject to a concrete Python object type.","","","Makes a clone of <code>self</code>.","","","","","","Extracts <code>Self</code> from the source <code>PyObject</code>.","Extracts some type from the Python object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a <code>Py&lt;T&gt;</code> instance by creating a new reference from …","Create a <code>Py&lt;T&gt;</code> instance by creating a new reference from …","Create a <code>Py&lt;T&gt;</code> instance by creating a new reference from …","For internal conversions.","Create a <code>Py&lt;T&gt;</code> instance by taking ownership of the given …","Create a <code>Py&lt;T&gt;</code> instance by taking ownership of the given …","Create a <code>Py&lt;T&gt;</code> instance by taking ownership of the given …","Gets the reference count of the <code>ffi::PyObject</code> pointer.","Retrieves an attribute value.","","Returns the inner pointer without decreasing the refcount.","Gets the underlying FFI pointer, returns a owned pointer.","Converts a <code>Py</code> instance to <code>PyObject</code>. Consumes <code>self</code> without …","Similar to <code>as_ref</code>, and also consumes this <code>Py</code> and registers …","Similar to <code>as_ref</code>, and also consumes this <code>Py</code> and registers …","Similar to <code>as_ref</code>, and also consumes this <code>Py</code> and registers …","Borrows a GIL-bound reference to the contained <code>T</code> …","Returns whether the object is considered to be None.","Returns whether the object is considered to be true.","Creates a new instance <code>Py&lt;T&gt;</code> of a <code>#[pyclass]</code> on the Python …","Returns a GIL marker constrained to the lifetime of this …","Returns a GIL marker constrained to the lifetime of this …","","Sets an attribute value.","Converts <code>Py</code> instance -&gt; PyObject.","","","Attempts to immutably borrow the value <code>T</code>, returning an …","Attempts to mutably borrow the value <code>T</code>, returning an error …","","","","","Cast <code>&amp;PyAny</code> to <code>&amp;Self</code> without no type checking.","Cast <code>&amp;PyAny</code> to <code>&amp;Self</code> without no type checking.","","","","","","","","","","","","Convert an usize index into a Py_ssize_t index, clamping …","Implementations used for slice indexing PySequence, …","","","","","","","","","","","","","","","","The current version of the marshal binary format.","Serialize an object to bytes using the Python built-in …","Deserialize an object from bytes using the Python built-in …","","A write-once cell similar to <code>once_cell::OnceCell</code>.","","","","Get a reference to the contained value, or <code>None</code> if the …","Get the contents of the cell mutably. This is only …","Get a reference to the contained value, initializing it if …","","Create a <code>GILOnceCell</code> which does not yet contain a value.","Set the value in the cell.","","","","","The exception raised when Rust code called from Python …","Gets the underlying FFI pointer, returns a borrowed …","","","","","","","","","","","","","Creates a new <code>PyErr</code> of this type.","","","","","","","","","","","","","","","","","","","RAII type that represents the Global Interpreter Lock …","Gets the Python builtin value <code>None</code>.","Gets the Python builtin value <code>NotImplemented</code>.","A GIL-independent reference to an object allocated on the …","Represents any Python object.","Represents a Python exception.","Represents a Python <code>module</code> object.","A commonly-used alias for <code>Py&lt;PyAny&gt;</code>.","Represents the result of a Python call.","A marker token that represents holding the GIL.","","Acquires the global interpreter lock, allowing access to …","Adds an attribute to the module.","Adds a new class to the module.","Add a function to a module.","Adds a submodule to a module.","Adds a function or a (sub)module to a module, using the …","Temporarily releases the GIL, thus allowing other Python …","","Gets the underlying FFI pointer, returns a borrowed …","","Retrieves a Python instance under the assumption that the …","","","","","","","Calls the object.","Calls the object without arguments.","Calls the object with only positional arguments.","Calls a method on the object.","Calls a method on the object without arguments.","Calls a method on the object with only positional …","Casts the PyObject to a concrete Python object type.","Registers the object in the release pool, and does an …","Lets the Python interpreter check and handle any pending …","Registers the object in the release pool, and tries to …","","","Returns an <code>Ordering</code> between <code>self</code> and <code>other</code>.","Deletes an item from the collection.","Deletes an attribute.","","Returns the module’s <code>__dict__</code> attribute, which contains …","Returns the list of attributes of this object.","Converts this <code>PyAny</code> to a concrete Python type.","","","Evaluates a Python expression in the given context and …","Extracts some type from the Python object.","Returns the filename (the <code>__file__</code> attribute) of the …","","","","","","","","Does an unchecked downcast to the specific type.","Does an unchecked downcast to the specific type.","","","Does an unchecked downcast to the specific type.","Creates and loads a module named <code>module_name</code>, containing …","Registers the object pointer in the release pool, and does …","Registers the owned object pointer in the release pool.","","","Registers the owned object pointer in release pool.","Gets an item from the collection.","Returns the reference count for the Python object.","Returns the Python type object for this object’s type.","Gets the Python type object for type <code>T</code>.","Returns the Python type pointer for this object.","Retrieves an attribute value.","","Determines whether this object has the given attribute.","Retrieves the hash code of self.","Imports the Python module with the specified name.","Imports the Python module with the specified name.","Returns the index (the <code>__all__</code> attribute) of the module, …","","","","Determines whether this object appears callable.","Returns true if the sequence or mapping has a length of 0.","Checks whether this object is an instance of type <code>typ</code>.","Checks whether this object is an instance of type <code>T</code>.","Returns whether the object is considered to be None.","Returns whether the object is considered to be true.","","","Takes an object and returns an iterator for it.","Returns the length of the sequence or mapping.","Returns the name (the <code>__name__</code> attribute) of the module.","Creates a new module object with the <code>__name__</code> attribute …","Create a new pool for managing PyO3’s owned references.","","Returns a GIL marker constrained to the lifetime of this …","A proc macro used to expose Rust structs as Python objects.","A proc macro used to expose Rust functions to Python.","A proc macro used to expose methods to Python.","A proc macro used to implement Python modules.","A proc macro used to implement Python’s dunder methods.","Computes the “repr” representation of self.","Tests whether two Python objects obey a given <code>CompareOp</code>.","Executes one or more Python statements in the given …","Runs code in the given context.","Sets a collection item value.","Sets an attribute value.","","Computes the “str” representation of self.","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the running Python interpreter version as a string.","Gets the running Python interpreter version as a struct …","Acquires the global interpreter lock, allowing access to …","Like <code>Python::with_gil</code> except Python interpreter state …","Wraps a Rust function annotated with <code>#[pyfunction]</code>.","A proc macro used to expose Rust structs as Python objects.","A proc macro used to expose Rust functions to Python.","A proc macro used to expose methods to Python.","A proc macro used to implement Python modules.","A proc macro used to implement Python’s dunder methods.","","","","An error type returned by <code>PyCell::try_borrow</code>.","An error type returned by <code>PyCell::try_borrow_mut</code>.","A container type for (mutably) accessing <code>PyClass</code> values","Base layout of PyCell. This is necessary for sharing …","","","A wrapper type for an immutably borrowed value from a …","A wrapper type for a mutably borrowed value from a<code>PyCell</code><code>&lt;T&gt;</code>…","","","","","","","","","","","Immutably borrows the value <code>T</code>. This borrow lasts as long …","","","","","","","","","Mutably borrows the value <code>T</code>. This borrow lasts as long as …","","","","","","","","","","","","","","","","","Gets the offset of the dictionary from the start of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets a <code>PyRef&lt;T::BaseType&gt;</code>.","Gets a <code>PyRef&lt;T::BaseType&gt;</code>.","Makes a new <code>PyCell</code> on the Python heap and return the …","","","Returns a <code>Python</code> token that is bound to the lifetime of …","Returns a <code>Python</code> token that is bound to the lifetime of …","Replaces the wrapped value with a new one, returning the …","Replaces the wrapped value with a new one computed from <code>f</code>, …","","Swaps the wrapped value of <code>self</code> with the wrapped value of …","","","","Implementation of tp_dealloc.","Immutably borrows the value <code>T</code>, returning an error if the …","Mutably borrows the value <code>T</code>, returning an error if the …","Immutably borrows the value <code>T</code>, returning an error if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the offset of the weakref list from the start of the …","","The closest native ancestor. This is <code>PyAny</code> by default, and …","Specify this class has <code>#[pyclass(dict)]</code> or not.","","If <code>PyClass</code> is implemented for a Rust type <code>T</code>, then we can …","Specify this class has <code>#[pyclass(weakref)]</code> or not.","","","","","","","","","","Additional type initializations necessary before Python …","","","Initializer for our <code>#[pyclass]</code> system.","Initializer for Python native types, like <code>PyDict</code>.","Initializer for Python types.","This trait is private to implement; this method exists to …","","","Constructs a new initializer from an initializer for the …","","","","","","Creates a new PyCell and initializes it.","Creates a new PyCell and initializes it given a typeobject …","","","","","","","","Safety","","","Constructs a new initializer from value <code>T</code> and base class’…","","","","","","","","","A marker token that represents holding the GIL.","Represents the major, minor, and patch (if any) versions …","","","","","","","Parses a hard-coded Python interpreter version string …","","Python major version (e.g. <code>3</code>).","Python minor version (e.g. <code>11</code>).","","","Python patch version (e.g. <code>0</code>).","Python version suffix, if applicable (e.g. <code>a0</code>).","","","","Utility type to make Py::as_ref work.","Lazy type object for PyClass.","Module name, if any.","Class name.","<code>T: PyLayout&lt;U&gt;</code> represents that <code>T</code> is a concrete …","<code>T: PySizedLayout&lt;U&gt;</code> represents that <code>T</code> is not a instance of …","Python type information. All Python native types (e.g., …","Python object types that have a corresponding type object.","","","","","","","Checks if <code>object</code> is an instance of this type.","Checks if <code>object</code> is an instance of this type or a subclass …","","","Returns the safe abstraction over the type object.","PyTypeObject instance for this type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Conversion trait that allows a sequence of tuples to be …","Represents any Python object.","Represents a Python <code>bool</code>.","Represents a Python <code>bytearray</code>.","Represents a Python <code>bytes</code> object.","Represents a builtin Python function object.","Represents a Python Capsule as described in Capsules:","Represents a Python <code>complex</code> object.","Bindings around <code>datetime.date</code>","Trait for accessing the date components of a struct …","Bindings for <code>datetime.datetime</code>","Bindings for <code>datetime.timedelta</code>","Trait for accessing the components of a struct containing …","Represents a Python <code>dict</code>.","Represents a Python <code>float</code> object.","Represents a  Python <code>frozenset</code>","Represents a Python function object.","Represents a Python <code>int</code> object.","A Python iterator object.","Represents a Python <code>list</code>.","Represents a Python <code>int</code> object.","Represents a reference to a Python object supporting the …","Represents a Python <code>module</code> object.","Represents a reference to a Python object supporting the …","Represents a Python <code>set</code>","Represents a Python <code>slice</code>.","Represents Python <code>slice</code> indices.","Represents a Python <code>string</code> (a Unicode string object).","Represents raw data backing a Python <code>str</code>.","Bindings for <code>datetime.time</code>","Trait for accessing the time components of a struct …","Represents a Python traceback.","Represents a Python <code>tuple</code> object.","Represents a reference to a Python <code>type object</code>.","Bindings for <code>datetime.tzinfo</code>","Represents a Python <code>string</code> (a Unicode string object).","UCS1 representation.","UCS2 representation.","UCS4 representation.","","","","","","","Safe Rust wrappers for types defined in the Python <code>datetime</code>…","","","","Returns the day, as an int from 1 through 31.","Returns the number of days, as an int from -999999999 to …","Returns whether this date is the later of two moments with …","Returns the hour, as an int from 0 through 23.","Returns the microsecond, as an int from 0 through 999999.","Returns the number of microseconds, as an int from 0 …","Returns the minute, as an int from 0 through 59.","Returns the month, as an int from 1 through 12.","Returns the second, as an int from 0 through 59.","Returns the number of seconds, as an int from 0 through …","Returns the year, as a positive int.","Converts self into a <code>PyDict</code> object pointer. Whether …","","","","","","","","","","","","","","","","","","","","","Represents any Python object.","","","Represents a Python <code>bool</code>.","Gets the underlying FFI pointer, returns a borrowed …","","","","","","","","","","","","Gets whether this boolean is <code>true</code>.","","Depending on <code>val</code>, returns <code>true</code> or <code>false</code>.","","","","","","","","","","","","Represents a Python <code>bytearray</code>.","Get the contents of this buffer as a slice.","Get the contents of this buffer as a mutable slice.","Gets the underlying FFI pointer, returns a borrowed …","","","","Get the start of the buffer containing the contents of the …","","","","","","Creates a new Python bytearray object from another …","","","","Checks if the bytearray is empty.","","Gets the length of the bytearray.","Creates a new Python bytearray object.","Creates a new Python <code>bytearray</code> object with an <code>init</code> closure …","Resizes the bytearray object to the new length <code>len</code>.","","","Copies the contents of the bytearray to a Rust vector.","","","","","","","","","","Represents a Python <code>bytes</code> object.","Gets the Python string as a byte slice.","Gets the underlying FFI pointer, returns a borrowed …","","","","","","","","","","","Creates a new Python byte string object from a raw pointer …","","","","Creates a new Python bytestring object. The bytestring is …","Creates a new Python <code>bytes</code> object with an <code>init</code> closure to …","","","","","","","","","","","","Guarantee <code>T</code> is not zero sized at compile time.","","Represents a Python Capsule as described in Capsules:","","","Gets the underlying FFI pointer, returns a borrowed …","","","","","","","","","","","","","","","","","Gets the current context stored in the capsule. If there …","Imports an existing capsule.","","","","Checks if this is a valid capsule.","Retrieves the name of this capsule.","Constructs a new capsule whose contents are <code>value</code>, …","Constructs a new capsule whose contents are <code>value</code>, …","Gets the raw <code>c_void</code> pointer to the value in this capsule.","Obtains a reference to the value of this capsule.","Sets the context pointer in the capsule.","","","","","","","","","","","","","","","","Represents a Python <code>complex</code> object.","Returns <code>|self|</code>.","Gets the underlying FFI pointer, returns a borrowed …","","","","","","","","","","Creates a new Python <code>PyComplex</code> object from <code>num_complex</code>’s …","Creates a new <code>PyComplex</code> from the given real and imaginary …","","Returns the imaginary part of the complex number.","","","","Returns <code>self</code> raised to the power of <code>other</code>.","Returns the real part of the complex number.","","","","","","","","","","","","","","","","","Bindings around <code>datetime.date</code>","Trait for accessing the date components of a struct …","Bindings for <code>datetime.datetime</code>","Bindings for <code>datetime.timedelta</code>","Trait for accessing the components of a struct containing …","Bindings for <code>datetime.time</code>","Trait for accessing the time components of a struct …","Bindings for <code>datetime.tzinfo</code>","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a <code>datetime.date</code> from a POSIX timestamp","Construct a <code>datetime</code> object from a POSIX timestamp","Returns the day, as an int from 1 through 31.","","","Returns the number of days, as an int from -999999999 to …","","Returns whether this date is the later of two moments with …","","","Returns the hour, as an int from 0 through 23.","","","Returns the microsecond, as an int from 0 through 999999.","","","Returns the number of microseconds, as an int from 0 …","","Returns the minute, as an int from 0 through 59.","","","Returns the month, as an int from 1 through 12.","","","Returns the second, as an int from 0 through 59.","","","Returns the number of seconds, as an int from 0 through …","","Returns the year, as a positive int.","","","","","","","","","","","","","Creates a new <code>datetime.date</code>.","","Creates a new <code>datetime.time</code> object.","Creates a new <code>timedelta</code>.","Alternate constructor that takes a <code>fold</code> parameter. A <code>true</code> …","Alternate constructor that takes a <code>fold</code> argument","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Conversion trait that allows a sequence of tuples to be …","","Represents a Python <code>dict</code>.","Represents a tuple which can be used as a PyDict item.","","","Returns <code>self</code> cast as a <code>PyMapping</code>.","Gets the underlying FFI pointer, returns a borrowed …","","","","","","Empties an existing dictionary of all key-value pairs.","Determines if the dictionary contains the specified key.","Returns a new dictionary that contains the same key-value …","Deletes an item.","","","","","","","","","","Creates a new dictionary from the sequence given.","Gets an item from the dictionary.","","","","Converts self into a <code>PyDict</code> object pointer. Whether …","Checks if the dict is empty, i.e. <code>len(self) == 0</code>.","","Returns a list of dict items.","Returns an iterator of <code>(key, value)</code> pairs in this …","","Returns a list of dict keys.","Return the number of items in the dictionary.","Creates a new empty dictionary.","","","Sets an item value.","","","","","","","","","","","","","","","","Returns a list of dict values.","","Represents a Python <code>float</code> object.","Gets the underlying FFI pointer, returns a borrowed …","","","","","","","","","","","","","Creates a new Python <code>float</code> object.","","","","","","","","","","","Gets the value of this float.","","","","Represents a builtin Python function object.","Represents a Python function object.","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new built-in function without keywords.","Create a new function from a closure.","Create a new built-in function with keywords.","","","","","","","","","","","","","","","","","","","","","","","A Python iterator object.","Gets the underlying FFI pointer, returns a borrowed …","","","","","","","","","","Constructs a <code>PyIterator</code> from a Python iterable object.","","","","","","","","","","","","Represents a Python <code>list</code>.","Used by <code>PyList::iter()</code>.","Appends an item to the list.","Gets the underlying FFI pointer, returns a borrowed …","","Returns <code>self</code> cast as a <code>PySequence</code>.","","","","","Determines if self contains <code>value</code>.","Deletes the <code>index</code>th element of self.","Deletes the slice from <code>low</code> to <code>high</code> from <code>self</code>.","","Constructs a new empty list.","","","","","","","","Gets the list item at the specified index.","Gets the list item at the specified index. Undefined …","Takes the slice <code>self[low:high]</code> and returns it as a new …","","","","","","Returns the first index <code>i</code> for which <code>self[i] == value</code>.","","","","Inserts an item at the specified index.","","","","Checks if the list is empty.","","Returns an iterator over this list’s items.","Returns the length of the list.","","Constructs a new list with the given elements.","","","Reverses the list in-place. Equivalent to the Python …","Sets the item at the specified index.","Assigns the sequence <code>seq</code> to the slice of <code>self</code> from <code>low</code> to …","","Sorts the list in-place. Equivalent to the Python …","","","","","","","","","","","","","","","Represents a reference to a Python object supporting the …","Gets the underlying FFI pointer, returns a borrowed …","","","","Deletes the item with key <code>key</code>.","","","","","","","","Gets the item in self with key <code>key</code>.","","Returns whether the mapping is empty.","Returns a sequence of tuples of all (key, value) pairs in …","Returns a sequence containing all keys in the mapping.","Returns the number of objects in the mapping.","Sets the item in self with key <code>key</code>.","","","","","","","","","Returns a sequence containing all values in the mapping.","","Represents a Python <code>module</code> object.","","Represents a Python <code>int</code> object.","Gets the underlying FFI pointer, returns a borrowed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a reference to a Python object supporting the …","Gets the underlying FFI pointer, returns a borrowed …","","","","Returns the concatenation of <code>self</code> and <code>other</code>.","Determines if self contains <code>value</code>.","Returns the number of occurrences of <code>value</code> in self, that …","Deletes the <code>i</code>th element of self.","Deletes the slice from <code>i1</code> to <code>i2</code> from <code>self</code>.","","","","","","","","","Returns the <code>index</code>th element of the Sequence.","Returns the slice of sequence object between <code>begin</code> and <code>end</code>.","Concatenates <code>self</code> and <code>other</code>, in place if possible.","Repeats the sequence object <code>count</code> times and updates <code>self</code>, …","Returns the first index <code>i</code> for which <code>self[i] == value</code>.","","","","","","","","","Returns whether the sequence is empty.","Returns the number of objects in sequence.","Returns a fresh list based on the Sequence.","Returns the result of repeating a sequence object <code>count</code> …","","","Assigns object <code>item</code> to the <code>i</code>th element of self.","Assigns the sequence <code>v</code> to the slice of <code>self</code> from <code>i1</code> to <code>i2</code>.","","","","","","","","Returns a fresh tuple based on the Sequence.","","","","Represents a  Python <code>frozenset</code>","Represents a Python <code>set</code>","","Adds an element to the set.","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","","","","","","","","","Removes all elements from the set.","Determines if the set contains the specified key.","Determine if the set contains the specified key. This is …","","","Removes the element from the set if it is present.","Creates a new empty set.","Creates a new empty frozen set","","","","","","","","","","","","","","","","","","Checks if set is empty.","Check if set is empty.","","","Returns an iterator of values in this set.","Returns an iterator of values in this frozen set.","Returns the number of items in the set.","Return the number of items in the set. This is equivalent …","Creates a new set with elements from the given slice.","Creates a new frozenset.","","","Removes and returns an arbitrary element from the set.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a Python <code>slice</code>.","Represents Python <code>slice</code> indices.","Gets the underlying FFI pointer, returns a borrowed …","","","","","","","","","","","","","","Retrieves the start, stop, and step indices from the slice …","","","","Constructs a new slice with the given elements.","","","","","","","","","","","","","","","","","","","","","Represents a Python <code>string</code> (a Unicode string object).","Represents raw data backing a Python <code>str</code>.","UCS1 representation.","UCS2 representation.","UCS4 representation.","Obtain the raw bytes backing this instance as a u8 slice.","Gets the underlying FFI pointer, returns a borrowed …","","","","","","","","Obtains the raw data backing the Python string.","","","","","","","","","","Attempts to create a Python string from a Python …","","","","","","Creates a new Python string object.","","","Gets the Python string as a byte slice.","","Convert the raw data to a Rust string.","Converts the <code>PyString</code> into a Rust string.","Convert the raw data to a Rust string, possibly with data …","","","","","","","","","","","","Size in bytes of each value/item in the underlying slice.","","","","","Represents a Python traceback.","Gets the underlying FFI pointer, returns a borrowed …","","","","","","","","Formats the traceback as a string.","","","","","","","","","","","","","","","","","Represents a Python <code>tuple</code> object.","Used by <code>PyTuple::iter()</code>.","Gets the underlying FFI pointer, returns a borrowed …","","Returns <code>self</code> cast as a <code>PySequence</code>.","Returns <code>self</code> as a slice of objects.","","","","","Determines if self contains <code>value</code>.","","Constructs an empty tuple (on the Python side, a singleton …","","","","","","","","Gets the tuple item at the specified index.","Gets the tuple item at the specified index. Undefined …","Takes the slice <code>self[low:high]</code> and returns it as a new …","Returns the first index <code>i</code> for which <code>self[i] == value</code>.","","","","","","","","","","","","Checks if the tuple is empty.","","Returns an iterator over the tuple items.","Gets the length of the tuple.","","","Constructs a new tuple with the given elements.","","","Takes the slice <code>self[low:high]</code> and returns it as a new …","Takes a slice of the tuple from <code>low</code> to the end and returns …","","","","","","","","","","","","","","","","","","Represents a reference to a Python <code>type object</code>.","Gets the underlying FFI pointer, returns a borrowed …","","Retrieves the underlying FFI pointer associated with this …","","","","","","","","","","Retrieves the <code>PyType</code> instance for the given FFI pointer.","","Equivalent to Python’s <code>isinstance(obj, self)</code>.","Checks whether <code>self</code> is a subclass of <code>other</code>.","Checks whether <code>self</code> is a subclass of type <code>T</code>.","","Gets the name of the <code>PyType</code>.","Creates a new type object.","","","","","","","","","",""],"i":[1,2,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,0,6,0,0,0,0,0,0,7,8,0,0,0,0,0,0,0,9,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,11,0,11,0,0,0,0,11,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,12,11,10,0,0,0,0,0,13,14,13,15,0,0,15,0,0,15,15,15,13,13,13,14,13,15,13,14,15,13,14,15,13,15,15,13,13,13,13,13,13,13,13,15,15,13,13,13,13,14,15,15,13,14,13,0,13,14,15,13,16,13,0,13,13,13,0,15,13,13,13,0,13,13,13,15,13,13,13,14,15,13,14,15,13,14,15,17,18,19,20,21,0,0,0,0,20,20,0,22,20,20,0,20,0,20,20,20,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,25,26,27,24,28,0,0,0,0,0,0,0,0,0,25,26,27,29,30,31,32,28,26,33,33,33,33,33,33,33,33,0,24,24,24,24,0,24,24,24,0,0,24,0,0,0,0,0,24,24,24,24,0,0,0,34,35,36,36,0,0,37,38,37,0,0,0,37,38,37,38,38,39,39,0,0,40,0,0,0,0,0,41,41,42,42,40,42,40,42,42,0,42,42,40,42,40,42,42,0,40,42,40,42,40,42,42,43,44,45,46,45,46,47,48,48,48,48,48,47,48,48,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,47,0,0,0,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,0,85,86,43,43,87,43,43,43,0,0,88,89,48,62,0,48,48,90,0,43,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,48,92,48,43,93,94,95,96,0,62,43,97,98,99,100,101,102,103,104,0,96,0,43,0,43,43,43,48,0,0,0,0,0,105,106,105,106,107,107,108,108,107,107,107,107,107,0,0,107,107,107,109,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,111,112,113,0,0,0,0,0,114,111,112,113,112,115,115,115,115,0,0,0,0,0,116,117,118,119,120,121,122,122,122,122,0,123,0,123,0,123,0,0,0,0,0,0,0,0,0,122,122,124,122,123,116,117,118,119,120,121,124,125,126,127,122,123,116,117,118,119,120,121,124,125,126,127,124,123,116,117,118,119,120,121,124,125,126,127,123,116,117,118,119,120,121,124,125,126,127,126,127,126,127,124,124,122,123,116,117,118,119,120,124,125,126,127,122,123,116,117,118,119,120,121,124,125,126,127,0,0,122,123,116,117,118,119,120,121,124,125,126,127,125,126,127,124,124,124,124,125,126,127,125,126,127,124,123,116,117,118,119,120,121,124,125,126,127,122,123,116,117,118,119,120,121,124,125,126,127,122,123,116,117,118,119,120,121,124,125,126,127,122,123,116,117,118,119,120,121,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,145,151,152,153,154,155,156,157,158,159,160,151,161,162,163,164,165,166,167,168,169,170,171,172,173,152,174,175,176,177,178,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,156,157,158,159,160,151,161,162,163,164,165,166,167,168,169,170,171,172,173,152,174,175,176,177,178,179,180,181,182,183,184,185,137,138,139,140,141,142,143,144,145,146,147,148,149,150,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,187,188,189,187,188,189,190,190,191,191,191,0,0,0,190,190,190,190,190,190,190,190,192,193,194,195,196,197,198,199,200,201,0,0,0,0,0,0,0,0,0,0,202,194,195,196,199,200,197,201,198,195,203,203,203,203,203,203,203,203,203,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,204,205,206,206,206,206,206,206,206,206,207,208,209,210,210,210,211,211,212,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,213,0,0,214,214,215,0,214,214,214,214,214,214,214,214,213,214,214,216,217,0,0,0,12,10,12,10,12,12,12,12,0,0,0,12,12,12,10,10,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,10,12,12,12,12,12,0,12,12,10,12,12,12,12,12,12,12,12,10,12,12,12,0,12,12,12,12,12,12,12,12,12,10,12,12,10,12,12,10,12,10,12,10,12,12,12,218,218,218,218,0,0,0,6,218,219,218,219,0,219,219,218,218,219,218,219,218,219,219,219,219,218,219,218,219,218,219,220,221,222,223,221,222,223,221,0,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,0,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,224,224,225,225,226,226,227,227,228,228,229,229,230,230,231,231,232,232,233,233,234,234,235,235,236,236,237,237,238,238,239,239,240,240,241,241,242,242,243,243,244,244,245,245,246,246,247,247,248,248,249,249,250,250,251,251,252,252,253,253,254,254,255,255,256,256,257,257,258,258,259,259,260,260,261,261,262,262,263,263,264,264,265,265,266,266,267,267,268,268,269,269,270,270,271,271,272,272,273,273,274,274,275,275,276,276,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,0,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,0,255,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,255,0,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,224,224,225,225,226,226,227,227,228,228,229,229,230,230,231,231,232,232,233,233,234,234,235,235,236,236,237,237,238,238,239,239,240,240,241,241,242,242,243,243,244,244,245,245,246,246,247,247,248,248,249,249,250,250,251,251,252,252,253,253,254,254,255,255,256,256,257,257,258,258,259,259,260,260,261,261,262,262,263,263,264,264,265,265,266,266,267,267,268,268,269,269,270,270,271,271,272,272,273,273,274,274,275,275,276,276,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,0,0,0,0,0,0,0,277,278,279,280,281,282,283,277,278,279,280,281,282,283,277,278,279,280,281,282,283,277,278,279,280,281,282,283,277,278,279,280,281,282,283,277,278,279,280,281,282,283,277,277,278,278,279,279,280,280,281,281,282,282,283,283,277,278,279,280,281,282,283,277,278,279,280,281,282,283,277,278,279,280,281,282,283,277,278,279,280,281,282,283,277,278,279,280,281,282,283,277,278,279,280,281,282,283,277,278,279,280,281,282,283,277,278,279,280,281,282,283,277,277,278,278,279,279,280,280,281,281,282,282,283,283,277,278,279,280,281,282,283,277,278,279,280,281,282,283,277,278,279,280,281,282,283,277,278,279,280,281,282,283,277,278,279,280,281,282,283,277,277,278,278,279,279,280,280,281,281,282,282,283,283,284,285,286,284,285,286,284,285,286,284,285,286,284,285,286,284,285,286,284,285,286,284,284,285,285,286,286,284,285,286,284,285,286,284,285,286,0,0,284,285,286,284,285,286,284,285,286,0,284,285,286,284,285,286,284,284,285,285,286,286,284,285,286,284,285,286,284,285,286,284,285,286,284,285,286,284,284,285,285,286,286,287,288,289,290,291,292,293,294,295,296,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,297,297,297,297,297,297,297,297,297,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,298,298,298,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,299,0,0,299,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,297,297,297,297,297,297,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,300,300,300,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,301,302,303,304,0,304,0,304,0,0,305,0,306,307,303,0,308,308,308,309,310,304,311,311,311,311,311,312,312,312,304,304,304,313,314,314,0,0,0,315,304,0,304,0,316,310,0,317,304,318,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,0,320,321,0,303,303,0,0,304,303,0,310,0,306,316,322,302,323,324,325,0,326,0,0,0,0,303,304,310,0,318,327,328,304,329,329,0,305,0,330,331,329,320,332,333,304,304,305,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,304,335,335,328,330,332,332,0,304,304,0,336,336,313,0,323,325,315,306,316,0,305,0,0,318,0,0,0,0,0,337,337,337,337,338,339,340,336,339,304,326,323,324,325,0,323,324,325,304,311,311,311,311,311,341,0,304,342,0,343,344,0,304,304,304,315,0,303,304,345,313,315,0,0,340,309,315,0,338,345,330,0,0,346,346,347,346,346,347,347,346,346,346,346,346,348,348,348,348,316,304,0,336,0,0,326,349,349,349,349,0,304,304,0,350,350,350,330,331,332,328,318,313,331,339,327,328,342,321,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,315,0,352,353,354,338,322,326,323,324,325,347,355,310,336,319,348,334,307,356,356,352,354,307,337,357,355,337,357,315,0,329,0,0,0,330,0,304,0,303,304,304,331,304,358,304,330,0,304,0,304,0,0,0,0,0,0,0,0,0,304,0,304,0,315,341,316,329,0,0,0,304,304,304,326,339,318,0,0,0,0,0,315,304,304,304,321,304,0,359,358,313,336,360,360,360,360,360,360,360,360,0,0,0,0,353,329,338,304,304,353,353,332,315,0,0,315,310,0,0,336,0,330,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,0,310,304,0,0,0,323,325,309,309,0,0,303,304,304,336,304,301,301,303,359,333,0,304,0,0,304,360,360,336,0,304,332,338,301,304,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,341,322,341,322,341,322,341,322,322,341,322,341,341,322,322,341,341,322,341,322,341,322,341,322,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,295,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,295,319,295,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,295,319,295,319,319,319,295,319,295,319,295,319,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,335,335,335,335,335,335,335,335,335,335,335,335,296,0,0,0,0,0,0,296,348,296,348,348,296,348,296,348,348,348,348,348,348,296,348,296,348,296,348,0,0,0,0,0,0,0,0,0,0,0,312,312,312,312,334,312,334,312,334,312,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,312,334,312,334,334,312,334,312,334,312,334,312,334,0,0,0,0,0,0,0,0,0,0,0,0,0,0,342,321,342,321,342,321,342,321,321,342,321,342,342,321,342,321,321,342,321,342,321,342,321,342,321,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,300,300,300,303,304,304,304,305,303,304,300,304,304,304,300,305,345,303,304,300,305,345,303,304,304,304,304,300,305,345,303,304,300,305,345,303,304,303,303,304,303,303,304,304,300,300,305,304,304,305,304,304,304,300,300,305,345,303,304,305,304,304,304,304,304,304,300,305,345,303,304,303,304,345,345,304,304,304,304,303,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,300,305,345,303,304,304,300,305,345,303,304,300,305,345,303,304,300,305,345,303,304,303,304,304,304,303,304,304,304,304,0,0,0,0,307,307,307,307,307,307,307,307,307,307,307,307,307,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,315,315,315,315,315,315,315,0,315,315,315,315,315,315,315,315,0,315,315,315,315,315,315,315,0,0,0,0,0,0,0,0,308,308,308,311,311,311,311,311,314,314,351,360,350,308,314,356,311,351,360,350,308,314,356,311,351,360,350,308,314,356,311,351,360,350,308,314,356,311,350,308,314,311,356,351,360,350,308,314,356,311,311,311,311,311,311,351,360,350,308,314,356,311,350,350,350,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,356,0,360,360,360,360,360,360,360,360,351,360,350,308,314,356,311,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,351,360,350,308,314,356,311,351,360,350,308,314,356,311,351,360,350,308,314,356,311,360,360,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,298,298,298,0,0,0,0,0,0,0,0,0,298,316,298,316,316,298,316,298,316,316,316,298,316,298,316,316,316,298,316,298,316,298,316,298,316,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,354,354,354,354,354,354,354,354,354,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,301,302,309,338,338,301,309,302,338,301,309,302,338,302,338,301,309,302,338,338,338,301,309,302,338,309,338,338,338,338,338,301,309,302,338,301,309,302,338,301,309,302,309,309,301,301,338,301,297,297,297,297,297,297,297,297,297,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,297,297,297,297,297,297,0,0,0,0,0,0,0,0,0,0,0,0,0,326,323,324,325,297,326,323,324,325,297,326,323,324,325,297,326,323,324,325,297,323,324,325,326,326,323,324,325,297,323,325,326,323,324,325,297,326,323,324,325,323,324,325,343,344,326,323,324,325,297,326,326,323,324,325,326,326,323,324,325,297,326,323,324,325,297,326,323,324,325,297,326,323,324,325,297,323,325,0,0,0,0,0,0,0,0,0,0,0,0,0,0,318,318,318,318,318,318,318,318,318,0,318,318,318,0,318,318,318,318,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,352,352,352,352,352,352,352,352,352,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,287,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,287,287,287,287,287,287,287,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,347,359,346,347,359,346,347,359,346,347,359,346,347,359,346,347,359,346,346,346,347,346,346,347,347,346,346,346,346,346,347,359,347,359,346,347,359,346,347,359,346,347,359,346,359,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,313,0,357,355,358,313,357,355,358,313,357,355,358,313,357,355,358,313,358,313,0,0,0,313,357,355,0,357,355,358,313,0,0,0,0,0,0,357,355,358,313,313,0,0,313,0,355,357,355,357,0,0,358,0,0,0,0,358,313,0,0,0,0,0,357,355,358,313,0,357,355,358,313,357,355,358,313,357,355,358,313,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,306,306,306,306,306,306,306,306,306,306,306,306,306,306,0,288,0,288,288,288,288,288,288,288,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,310,310,330,331,329,320,332,333,310,330,331,329,320,332,333,310,320,310,310,329,329,330,331,329,320,332,333,330,332,332,310,330,331,329,320,332,333,310,330,331,329,320,332,333,310,330,331,329,320,332,333,330,330,331,332,331,310,329,330,331,330,329,329,332,310,330,310,310,330,331,329,320,332,333,310,330,331,329,320,332,333,310,330,331,329,320,332,333,333,332,0,0,0,0,0,0,0,0,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,289,290,0,0,0,299,0,0,299,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,299,289,290,299,289,290,299,299,299,299,299,299,289,290,299,289,290,299,299,289,290,299,289,290,299,289,290,299,0,0,0,0,0,0,0,0,291,292,293,0,0,0,0,0,0,0,0,0,0,0,317,291,292,293,317,291,292,293,317,317,317,317,291,292,293,317,291,292,293,0,317,317,291,292,293,317,291,292,293,317,291,292,293,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,340,336,340,336,336,336,340,336,340,336,340,336,340,336,340,336,336,0,336,336,340,336,340,336,340,336,336,336,0,0,0,0,0,0,0,0,0,0,0,353,353,353,353,353,353,353,353,353,353,353,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,0,0,0,0,0,0,0,0,0,0,0,327,328,327,328,327,328,327,328,327,328,328,327,328,327,328,328,327,328,327,328,327,328,327,328,327,328,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,294,0,0,0,0,0,0,0,0,0,0,0,294,294,294,294,294,294,294,362,0,0,0,0,0,0,0,0,0,4,5,4,4,4,363,5,362,4,363,5,362,0,363,4,5,0,0,4,363,5,362,0,4,0,4,363,5,362,363,5,363,4,0,4,5,362,0,363,0,363,0,5,4,363,5,362,4,363,5,362,4,363,5,362,363,0,0,0,0,0,0,0,0,0,0,0,0,0,364,364,0,365,364,365,364,364,0,364,364,364,364,364,365,364,364,364,365,364,364,364,364,364,364,365,364,364,364,0,365,364,364,365,364,365,364,365,364,364,366,366,0,0,366,367,366,367,367,367,366,367,367,366,367,367,367,366,367,366,367,366,367,367,368,0,369,0,0,369,369,369,369,369,369,369,370,371,0,0,0,0,0,372,373,374,374,370,371,374,370,371,374,370,371,372,370,373,371,0,374,370,371,374,370,371,372,373,374,374,370,371,374,370,371,374,370,371,374,370,371,0,375,0,0,376,0,376,376,376,376,376,0,376,376,376,377,0,0,378,377,378,377,378,378,377,378,378,377,378,378,378,378,377,378,377,378,377,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,379,379,1,1,1,1,1,1,1,1,1,1,1,379,379,380,0,0,381,380,381,380,0,380,381,380,0,0,0,381,380,0,0,0,0,0,0,381,380,381,380,381,380,0,0,0,382,0,382,382,382,382,382,382,382,382,382,382,382,382,383,0,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,1,2,384,3,1,0,0,3,3,0,0,0,0,0,0,0,4,3,384,384,384,384,384,3,2,384,384,3,2,384,3,2,384,3,2,2,2,2,2,2,2,3,3,3,3,3,2,2,2,384,384,2,2,2,384,3,2,384,2,2,384,384,2,384,3,3,3,2,384,3,384,3,3,2,384,3,2,2,2,3,2,2,4,2,2,384,3,384,2,384,3,2,2,2,2,2,2,2,384,2,2,384,384,3,4,2,0,0,0,0,0,2,2,3,3,2,2,12,2,2,384,3,2,384,2,2,384,384,3,2,384,2,384,2,2,384,3,2,2,384,3,2,384,2,384,3,3,3,3,0,0,0,0,0,0,385,0,385,0,0,0,0,0,0,0,0,385,386,387,388,389,390,388,389,390,388,389,389,391,390,388,386,387,392,389,389,391,390,388,386,387,389,390,390,388,388,385,389,390,388,388,391,389,390,388,390,388,389,390,388,386,386,387,387,389,391,390,388,386,387,389,389,393,389,385,390,388,389,391,390,388,386,387,390,388,390,388,389,392,389,390,388,389,389,393,389,391,386,387,393,389,389,389,389,389,391,390,390,388,388,386,387,389,390,388,389,389,391,390,388,386,387,389,391,390,388,386,387,391,389,391,394,394,0,0,394,0,0,0,0,0,0,0,0,0,0,0,395,0,0,0,396,395,397,397,395,397,395,397,397,397,397,395,397,397,397,397,395,397,396,395,397,397,397,395,397,395,397,395,397,3,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,398,0,398,398,0,0,0,0,399,399,0,0,0,399,398,398,399,399,400,398,399,2,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,384,418,418,419,420,421,422,423,423,424,425,426,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,427,427,427,0,0,0,0,0,0,0,0,0,0,428,429,430,430,430,429,430,428,430,429,428,431,0,0,0,0,0,0,0,0,432,432,432,432,0,0,0,0,433,434,435,2,0,0,401,0,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,402,0,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,403,0,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,404,0,0,0,436,436,404,404,436,404,437,404,437,0,404,437,404,404,404,404,437,404,404,404,404,404,437,404,404,404,404,404,404,404,404,404,404,404,404,437,404,404,404,437,404,437,404,404,437,405,0,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,0,405,405,405,405,405,405,405,405,405,405,405,405,0,406,407,408,409,410,0,0,0,0,0,0,0,0,406,407,408,409,410,406,407,408,409,410,406,407,408,409,410,406,407,408,409,410,406,407,408,409,410,406,407,408,409,410,406,406,407,407,408,408,409,409,410,410,406,407,408,409,410,406,407,408,409,410,406,407,408,409,410,406,407,428,406,407,429,410,430,407,408,430,407,408,430,407,408,429,410,430,407,408,428,406,407,430,407,408,429,410,428,406,407,406,407,408,409,410,406,407,408,409,410,406,407,408,410,407,408,0,406,407,408,409,410,406,407,408,409,410,406,406,407,407,408,408,409,409,410,410,406,407,408,409,410,406,407,408,409,410,406,407,408,409,410,406,407,408,409,410,406,407,408,409,410,406,407,408,409,410,411,0,438,0,0,0,438,411,411,411,411,439,411,439,411,411,411,411,411,439,411,411,411,411,439,411,411,411,411,411,439,439,431,411,411,411,411,438,411,411,411,439,439,411,439,411,411,411,411,439,411,411,411,439,411,439,411,411,438,411,412,0,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,413,414,0,0,0,413,414,413,414,413,414,413,414,413,414,0,413,414,413,413,414,414,413,414,413,414,413,414,413,413,413,414,413,414,413,413,413,0,413,414,413,414,413,413,414,414,413,414,413,414,413,414,413,414,413,414,413,414,415,0,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,416,0,0,416,416,416,416,416,440,416,440,416,416,416,416,416,416,416,416,416,440,416,416,416,416,416,416,416,416,416,416,416,416,416,440,416,416,440,440,416,416,416,416,440,416,0,440,416,416,416,440,416,416,416,416,416,440,416,416,416,440,416,440,416,416,417,0,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,384,0,418,0,418,418,418,418,418,418,0,0,418,418,418,418,418,0,0,0,418,418,418,418,418,418,418,418,418,418,418,418,0,419,0,419,419,419,419,419,419,419,419,419,419,419,0,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,0,0,419,419,419,419,419,419,419,419,419,419,419,420,421,0,0,0,420,420,421,420,421,420,421,441,420,421,441,420,420,421,420,421,420,420,421,420,421,420,420,421,421,420,421,441,420,421,420,421,420,421,441,441,420,421,420,421,420,421,420,421,420,421,441,441,420,441,441,441,420,421,420,421,420,420,421,421,441,420,421,420,421,420,421,441,420,421,441,420,421,420,421,422,0,0,422,422,422,432,422,432,422,422,422,422,422,432,422,422,422,422,432,422,422,432,432,432,432,432,422,432,422,422,422,432,422,422,422,432,422,432,422,422,423,0,0,427,427,427,427,423,423,423,427,423,427,427,427,423,423,423,427,423,423,427,423,427,423,423,423,423,427,423,427,423,423,427,423,423,427,423,427,423,423,427,423,423,423,427,423,427,423,423,427,433,434,435,424,0,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,425,0,0,425,425,425,425,425,442,425,442,425,425,425,425,425,425,425,442,425,425,425,425,425,425,425,425,425,425,425,425,425,442,425,442,442,425,425,425,425,442,442,425,442,442,425,425,425,425,425,425,442,425,425,425,442,442,0,425,442,425,425,0,426,0,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["python",3]],["pyobject",6]],null,null,null,null,null,null,[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],null,null,null,null,null,null,null,[[]],[[["py",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[]],[[["python",3]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["elementtype",4]],[[]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3],["u8",15]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3],["u8",15]],["pyresult",6]],[[],["usize",15]],[[]],[[["elementtype",4]],["bool",15]],[[],["bool",15]],[[["pyany",3]],["pyresult",6,[["pybuffer",3]]]],[[["formatter",3]],["result",6]],[[],["cstr",3]],[[]],[[]],[[]],[[["cstr",3]],["elementtype",4]],[[["pyany",3]],["pyresult",6,[["pybuffer",3]]]],[[]],[[]],null,[[]],[[]],[[]],[[],["bool",15]],[[["cstr",3]],["bool",15]],[[],["bool",15]],[[["u8",15]],["bool",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["u8",15]],["elementtype",4]],[[["elementtype",4]],["bool",15]],[[],["bool",15]],[[["python",3]]],[[]],[[["u8",15]],["elementtype",4]],[[]],[[],["option",4]],[[["python",3]],["pyresult",6,[["vec",3]]]],[[]],[[["python",3]],["pyresult",6,[["vec",3]]]],[[["python",3],["u8",15]],["pyresult",6,[["vec",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6,[["py_hash_t",6]]]],[[]],[[]],[[]],[[["python",3],["result",4,[["pyresult",6],["box",3,[["any",8]]]]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[["compareop",4]]],[[]],[[]],[[],["c_int",6]],[[]],[[]],[[],["compareop",4]],[[]],[[],["c_int",6]],[[["formatter",3]],["result",6]],[[]],[[["c_int",6]],["option",4]],[[]],[[],["py_hash_t",6]],[[]],[[]],[[["c_int",6]]],[[],["c_int",6]],[[],["c_int",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,[[["pyrefmut",3],["c_int",6]]],[[["pyrefmut",3]]],[[["c_int",6]],["c_int",6]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[["option",4]]],[[]],[[]],[[],["c_int",6]],null,null,null,null,null,null,[[]],[[["pyvisit",3]],["result",4,[["pytraverseerror",3]]]],null,null,[[]],[[]],[[]],[[]],[[],["result",4,[["pytraverseerror",3]]]],[[],["c_int",6]],[[],["pyvisit",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["visitproc",6]],["c_int",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[],["privatemarker",3]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3],["nonnull",3,[["pyobject",3]]]],["pyresult",6]],[[["python",3],["nonnull",3,[["pyobject",3]]]],["pyresult",6]],[[["python",3],["nonnull",3,[["pyobject",3]]]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[],["option",4,[["allocfunc",6]]]],[[["py_ssize_t",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[],["option",4,[["py_ssize_t",6]]]],[[]],[[]],[[["fnmut",8]]],[[["fnmut",8]]],[[],["option",4,[["freefunc",6]]]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["option",4,[["allocfunc",6]]]],[[],["option",4,[["freefunc",6]]]],[[["python",3]],["freelist",3]],[[],["option",4,[["newfunc",6]]]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[],["option",4,[["newfunc",6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["option",4,[["py_ssize_t",6]]]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["python",3]],["pyresult",6,[["pyiternextoutput",6]]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["c_int",6]],[[]],[[],["py_ssize_t",6]],[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4,[["pymethoddef",3],["nulbyteinstring",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15],["pycfunctionwithkeywords",3],["str",15]]],[[],["pymethodtype",4]],[[],["pycfunction",3]],[[],["pycfunctionwithkeywords",3]],[[],["pycfunctionfastwithkeywords",3]],[[],["pygetter",3]],[[],["pysetter",3]],[[],["pyclassattributefactory",3]],[[],["pymethoddef",3]],[[],["pyclassattributedef",3]],[[],["pygetterdef",3]],[[],["pysetterdef",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pygetsetdef",3]]],[[["pygetsetdef",3]]],null,null,[[["str",15],["pycfunctionfastwithkeywords",3],["str",15]]],[[["c_int",6]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4,[["cstr",3],["nulbyteinstring",3]]]],[[["str",15]],["result",4,[["cstr",3],["nulbyteinstring",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[["str",15],["pyclassattributefactory",3]]],[[["str",15],["pygetter",3],["str",15]]],[[["str",15],["pysetter",3],["str",15]]],[[["str",15],["pycfunction",3],["str",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["ipowmodulo",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["python",3]],["pyresult",6,[["pyiteranextoutput",6]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["c_int",6]],[[["py_ssize_t",6]],["c_int",6]],[[["py_ssize_t",6]]],[[]],[[["py_ssize_t",6]]],[[],["py_ssize_t",6]],[[["py_ssize_t",6]]],[[["py_ssize_t",6]],["c_int",6]],[[["py_ssize_t",6]],["c_int",6]],null,null,null,null,null,null,null,null,null,[[]],[[["pyany",3]],["pyresult",6]],[[["python",3]]],[[["python",3]],["pyresult",6]],[[["python",3]],["option",4]],[[["python",3]]],[[["python",3]]],[[["python",3]],["pyresult",6]],[[["python",3]],["option",4]],[[["python",3]]],[[]],[[["python",3]]],[[["python",3]],["pyobject",6]],[[["into",8,[["pyany",3]]]],["result",4,[["pydowncasterror",3]]]],[[["into",8,[["pyany",3]]]],["result",4,[["pydowncasterror",3]]]],[[["into",8,[["pyany",3]]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[["python",3]]],null,null,null,null,null,null,null,null,null,null,[[["usize",15],["usize",15]],["pyerr",3]],null,[[],["result",4]],[[["pyany",3]],["pyresult",6]],null,[[["pylong",3],["c_int",6]],["pyresult",6]],null,null,null,null,null,null,null,null,[[]],[[]],[[["python",3]],["pyfunctionarguments",4]],[[["pymodule",3]],["pyfunctionarguments",4]],[[]],[[]],[[]],[[],["result",4]],[[["pycell",3]],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[["python",3]],["option",4,[["pyerr",3]]]],[[["python",3]],["pyerr",3]],[[["python",3]],["result",4,[["pyerr",3]]]],[[["python",3]],["result",4,[["py",3,[["pyany",3]]],["pyerr",3]]]],null,[[["python",3],["c_int",6]],["pyresult",6]],[[["python",3]],["pyerr",3]],[[["python",3]],["pyerr",3]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[["incompletereaderror",3]],["pyerr",3]],[[["error",3]]],[[["parsefloaterror",3]],["pyerr",3]],[[["tryfrominterror",3]],["pyerr",3]],[[["parseboolerror",3]],["pyerr",3]],[[["intostringerror",3]],["pyerr",3]],[[["nulerror",3]],["pyerr",3]],[[["utf8error",3]],["pyerr",3]],[[["fromutf8error",3]],["pyerr",3]],[[["fromutf16error",3]],["pyerr",3]],[[["decodeutf16error",3]],["pyerr",3]],[[["addrparseerror",3]],["pyerr",3]],[[["pykeyerror",3]],["pyerr",3]],[[["pysystemerror",3]],["pyerr",3]],[[["pyreferenceerror",3]],["pyerr",3]],[[["pydowncasterror",3]],["pyerr",3]],[[["pybaseexception",3]],["pyerr",3]],[[["pyrecursionerror",3]],["pyerr",3]],[[["pyzerodivisionerror",3]],["pyerr",3]],[[["pyblockingioerror",3]],["pyerr",3]],[[["pyruntimeerror",3]],["pyerr",3]],[[["pybrokenpipeerror",3]],["pyerr",3]],[[["pychildprocesserror",3]],["pyerr",3]],[[["pyexception",3]],["pyerr",3]],[[["pyconnectionerror",3]],["pyerr",3]],[[["pyoverflowerror",3]],["pyerr",3]],[[["timeout",3]],["pyerr",3]],[[["pyconnectionabortederror",3]],["pyerr",3]],[[["gaierror",3]],["pyerr",3]],[[["pyconnectionrefusederror",3]],["pyerr",3]],[[["pystopasynciteration",3]],["pyerr",3]],[[["herror",3]],["pyerr",3]],[[["queuefull",3]],["pyerr",3]],[[["queueempty",3]],["pyerr",3]],[[["pynameerror",3]],["pyerr",3]],[[["limitoverrunerror",3]],["pyerr",3]],[[["pyconnectionreseterror",3]],["pyerr",3]],[[["pystopiteration",3]],["pyerr",3]],[[["timeouterror",3]],["pyerr",3]],[[["invalidstateerror",3]],["pyerr",3]],[[["pyborrowerror",3]]],[[["cancellederror",3]],["pyerr",3]],[[["tryfromsliceerror",3]],["pyerr",3]],[[["pygeneratorexit",3]],["pyerr",3]],[[["pyindexerror",3]],["pyerr",3]],[[["pyioerror",3]],["pyerr",3]],[[["pysystemexit",3]],["pyerr",3]],[[["pytypeerror",3]],["pyerr",3]],[[["panicexception",3]],["pyerr",3]],[[["pyunboundlocalerror",3]],["pyerr",3]],[[["pyborrowmuterror",3]]],[[["infallible",4]],["pyerr",3]],[[["intoinnererror",3]],["pyerr",3]],[[["pymodulenotfounderror",3]],["pyerr",3]],[[["pysyntaxerror",3]],["pyerr",3]],[[["pyimporterror",3]],["pyerr",3]],[[["pyoserror",3]],["pyerr",3]],[[]],[[["pyfileexistserror",3]],["pyerr",3]],[[["error",3]],["pyerr",3]],[[["pyvalueerror",3]],["pyerr",3]],[[["pyfilenotfounderror",3]],["pyerr",3]],[[["pyfloatingpointerror",3]],["pyerr",3]],[[["report",3]]],[[["parseinterror",3]],["pyerr",3]],[[["pymemoryerror",3]],["pyerr",3]],[[["pyunicodeerror",3]],["pyerr",3]],[[["pyunicodedecodeerror",3]],["pyerr",3]],[[["pyinterruptederror",3]],["pyerr",3]],[[["pynotimplementederror",3]],["pyerr",3]],[[["pyeoferror",3]],["pyerr",3]],[[["pyenvironmenterror",3]],["pyerr",3]],[[["pykeyboardinterrupt",3]],["pyerr",3]],[[["pyarithmeticerror",3]],["pyerr",3]],[[["pyunicodeencodeerror",3]],["pyerr",3]],[[["pytimeouterror",3]],["pyerr",3]],[[["pyisadirectoryerror",3]],["pyerr",3]],[[["pybuffererror",3]],["pyerr",3]],[[["pyprocesslookuperror",3]],["pyerr",3]],[[["pylookuperror",3]],["pyerr",3]],[[["pypermissionerror",3]],["pyerr",3]],[[["pynotadirectoryerror",3]],["pyerr",3]],[[["pyassertionerror",3]],["pyerr",3]],[[["pyattributeerror",3]],["pyerr",3]],[[["pyunicodetranslateerror",3]],["pyerr",3]],[[]],null,[[["pyany",3]],["pyerr",3]],[[["pyerrstate",4]],["pyerr",3]],[[["pytype",3]],["pyerr",3]],[[["pyany",3]],["pyerr",3]],[[["python",3]],["pytype",3]],null,[[["python",3]],["pybaseexception",3]],[[]],[[]],[[["python",3]],["py",3,[["pybaseexception",3]]]],[[["python",3]],["pyobject",6]],[[["python",3]],["py",3,[["pybaseexception",3]]]],[[["python",3],["pytype",3]],["bool",15]],[[["python",3]],["bool",15]],[[["python",3]],["pyerrstatenormalized",3]],[[["python",3]],["bool",15]],[[],["pyerr",3]],[[["pyany",3]]],[[["python",3],["str",15],["option",4,[["str",15]]],["option",4,[["pytype",3]]],["option",4,[["pyobject",6]]]],["pyresult",6,[["py",3,[["pytype",3]]]]]],[[["python",3]],["pyerrstatenormalized",3]],[[["python",3]],["bool",15]],[[["python",3]],["never",15]],[[["python",3]]],[[["python",3]]],[[["python",3]],["option",4,[["pytraceback",3]]]],[[["python",3]],["pytype",3]],[[["python",3]],["pybaseexception",3]],[[["python",3]]],[[["python",3],["option",4]]],null,[[["python",3]],["option",4,[["pyerr",3]]]],null,[[["python",3]],["pyobject",6]],[[],["string",3]],[[],["string",3]],[[["python",3]],["option",4,[["pytraceback",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["python",3]]],[[["python",3]],["pybaseexception",3]],[[["python",3],["pyany",3],["str",15],["i32",15]],["pyresult",6]],null,null,null,null,null,null,null,[[["python",3]],["pyobject",6]],[[]],[[]],[[]],[[]],[[],["box",3,[["fnonce",8]]]],[[],["pyerrstatenormalized",3]],[[]],[[["python",3]]],[[]],[[]],[[]],[[]],[[["python",3]]],null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],nullpyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[["pybaseexception",3]],["bool",15]],[[["pyexception",3]],["bool",15]],[[["pystopasynciteration",3]],["bool",15]],[[["pystopiteration",3]],["bool",15]],[[["pygeneratorexit",3]],["bool",15]],[[["pyarithmeticerror",3]],["bool",15]],[[["pylookuperror",3]],["bool",15]],[[["pyassertionerror",3]],["bool",15]],[[["pyattributeerror",3]],["bool",15]],[[["pybuffererror",3]],["bool",15]],[[["pyeoferror",3]],["bool",15]],[[["pyfloatingpointerror",3]],["bool",15]],[[["pyoserror",3]],["bool",15]],[[["pyimporterror",3]],["bool",15]],[[["pymodulenotfounderror",3]],["bool",15]],[[["pyindexerror",3]],["bool",15]],[[["pykeyerror",3]],["bool",15]],[[["pykeyboardinterrupt",3]],["bool",15]],[[["pymemoryerror",3]],["bool",15]],[[["pynameerror",3]],["bool",15]],[[["pyoverflowerror",3]],["bool",15]],[[["pyruntimeerror",3]],["bool",15]],[[["pyrecursionerror",3]],["bool",15]],[[["pynotimplementederror",3]],["bool",15]],[[["pysyntaxerror",3]],["bool",15]],[[["pyreferenceerror",3]],["bool",15]],[[["pysystemerror",3]],["bool",15]],[[["pysystemexit",3]],["bool",15]],[[["pytypeerror",3]],["bool",15]],[[["pyunboundlocalerror",3]],["bool",15]],[[["pyunicodeerror",3]],["bool",15]],[[["pyunicodedecodeerror",3]],["bool",15]],[[["pyunicodeencodeerror",3]],["bool",15]],[[["pyunicodetranslateerror",3]],["bool",15]],[[["pyvalueerror",3]],["bool",15]],[[["pyzerodivisionerror",3]],["bool",15]],[[["pyblockingioerror",3]],["bool",15]],[[["pybrokenpipeerror",3]],["bool",15]],[[["pychildprocesserror",3]],["bool",15]],[[["pyconnectionerror",3]],["bool",15]],[[["pyconnectionabortederror",3]],["bool",15]],[[["pyconnectionrefusederror",3]],["bool",15]],[[["pyconnectionreseterror",3]],["bool",15]],[[["pyfileexistserror",3]],["bool",15]],[[["pyfilenotfounderror",3]],["bool",15]],[[["pyinterruptederror",3]],["bool",15]],[[["pyisadirectoryerror",3]],["bool",15]],[[["pynotadirectoryerror",3]],["bool",15]],[[["pypermissionerror",3]],["bool",15]],[[["pyprocesslookuperror",3]],["bool",15]],[[["pytimeouterror",3]],["bool",15]],[[["pyenvironmenterror",3]],["bool",15]],[[["pyioerror",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["python",3],["cstr",3],["range",3,[["usize",15]]],["cstr",3]],["pyresult",6,[["pyunicodedecodeerror",3]]]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[["python",3],["utf8error",3]],["pyresult",6,[["pyunicodedecodeerror",3]]]],null,[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[["cancellederror",3]],["bool",15]],[[["invalidstateerror",3]],["bool",15]],[[["timeouterror",3]],["bool",15]],[[["incompletereaderror",3]],["bool",15]],[[["limitoverrunerror",3]],["bool",15]],[[["queueempty",3]],["bool",15]],[[["queuefull",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],null,null,null,[[]],[[]],[[]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[["herror",3]],["bool",15]],[[["gaierror",3]],["bool",15]],[[["timeout",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],null,null,[[]],[[]],[[]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],null,[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],null,null,null,null,null,null,null,[[],["c_int",6]],null,null,null,[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["py_ssize_t",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],null,[[],["c_int",6]],null,null,null,null,null,[[],["c_int",6]],null,null,null,null,null,null,[[],["c_int",6]],null,null,null,[[],["c_int",6]],[[],["c_int",6]],[[],["c_uchar",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],null,null,null,[[]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["pydatetime_capi",3]],[[],["c_uchar",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[]],null,null,[[],["c_int",6]],[[],["c_int",6]],[[]],[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,[[],["c_int",6]],null,null,null,null,null,[[],["c_int",6]],null,null,null,null,null,null,null,[[],["c_int",6]],null,[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_double",6]],null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,[[],["c_int",6]],null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],[[["py_ssize_t",6]]],[[],["py_ssize_t",6]],null,null,null,null,null,[[["py_ssize_t",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,[[],["py_ssize_t",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],[[]],null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,[[],["c_int",6]],null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],null,null,null,null,null,[[],["py_ssize_t",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[["size_t",6]]],null,null,null,null,null,[[["c_int",6]]],null,[[["c_int",6]]],null,null,null,null,null,null,null,[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],null,null,null,[[],["py_ssize_t",6]],null,null,null,null,null,null,null,null,null,[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],null,[[["py_ssize_t",6]],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["py_ssize_t",6]]],null,null,null,null,null,[[["py_ssize_t",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,[[]],null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,[[["py_ssize_t",6]]],[[],["py_ssize_t",6]],null,null,null,null,[[["py_ssize_t",6]]],null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,[[["c_ulong",6]],["c_int",6]],null,null,null,null,null,null,[[["c_ulong",6]],["c_int",6]],[[],["c_int",6]],null,null,null,[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,[[]],null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["py_ssize_t",6]],null,null,null,[[],["c_uint",6]],[[],["c_uint",6]],[[],["c_uint",6]],[[],["c_uint",6]],null,null,null,null,null,[[],["c_uint",6]],null,null,[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["option",4,[["vectorcallfunc",6]]]],[[["size_t",6]],["py_ssize_t",6]],null,[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["c_int",6]]],null,[[["c_int",6]]],null,[[]],null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["c_int",6]],null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,[[]],[[]],null,null,null,null,null,null,[[],["py_ssize_t",6]],null,null,null,[[],["py_ssize_t",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["py_ssize_t",6]]],[[["py_ssize_t",6]]],null,null,null,null,null,null,null,null,null,null,[[["size_t",6]]],null,null,null,null,null,null,null,null,null,null,null,[[]],null,[[]],null,null,null,null,null,null,null,[[]],null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,[[],["py_ssize_t",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,[[],["py_ssize_t",6]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],null,null,null,[[],["py_ssize_t",6]],null,null,null,null,null,null,null,null,null,[[],["c_int",6]],null,null,[[]],[[],["c_int",6]],[[],["c_int",6]],[[]],null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["py_complex",3]],[[],["pycomplexobject",3]],[[]],[[]],null,[[]],[[]],null,[[]],[[]],null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["c_int",6]],null,[[],["c_int",6]],null,null,null,null,null,[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["c_int",6]],null,null,null,[[["size_t",6]]],null,null,[[],["option",4,[["vectorcallfunc",6]]]],[[["size_t",6]],["py_ssize_t",6]],null,[[]],[[["py_ssize_t",6]]],[[["py_ssize_t",6]]],null,[[["size_t",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["py_ssize_t",6]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["pycodeobject",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["pyfuturefeatures",3]],[[]],null,null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["pytryblock",3]],[[],["pyframeobject",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["_inittab",3]],[[],["_frozen",3]],[[]],[[]],null,[[]],[[]],null,[[]],[[]],null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],["_pystatus_type",4]],[[],["pystatus",3]],[[],["pywidestringlist",3]],[[],["pypreconfig",3]],[[],["pyconfig",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["_pystatus_type",4]],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[["py_ssize_t",6]]],[[],["py_ssize_t",6]],[[["py_ssize_t",6]]],null,[[]],[[]],[[],["pylistobject",3]],[[]],[[]],[[]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],null,[[],["py_buffer",3]],[[]],null,[[]],null,null,[[]],null,null,null,[[]],null,null,null,null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pynumbermethods",3]],[[],["pysequencemethods",3]],[[],["pymappingmethods",3]],[[],["pyasyncmethods",3]],[[],["pybufferprocs",3]],[[],["pytypeobject",3]],[[],["pyheaptypeobject",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pymappingmethods",3]],[[],["pyasyncmethods",3]],[[],["pybufferprocs",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[],["pymemallocatordomain",4]],[[],["pymemallocatorex",3]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_int",6]]],null,[[["c_int",6]]],null,null,null,null,null,[[["py_ssize_t",6]]],[[],["py_ssize_t",6]],[[["py_ssize_t",6]]],[[]],[[]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,[[]],null,[[]],null,[[]],null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["py_ssize_t",6]],[[],["c_uint",6]],[[],["c_uint",6]],[[],["c_uint",6]],[[],["c_uint",6]],[[],["c_uint",6]],null,[[],["c_int",6]],null,null,null,null,null,null,[[]],null,[[]],null,null,null,null,[[],["c_uint",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["c_uint",6]],null,[[]],[[]],[[]],[[]],null,[[],["c_uint",6]],[[]],[[]],[[]],[[]],[[],["c_uint",6]],null,null,null,[[],["c_uint",6]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],[[],["c_uchar",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],null,null,null,[[]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["pydatetime_capi",3]],[[],["c_uchar",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[]],null,null,[[],["c_int",6]],[[],["c_int",6]],[[]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pydatetime_delta",3]],[[],["pydatetime_time",3]],[[],["pydatetime_date",3]],[[],["pydatetime_datetime",3]],[[],["pydatetime_capi",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["pygetsetdef",3]],[[]],null,null,[[["formatter",3]],["result",6]],[[]],null,null,[[]],null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["c_int",6]],null,null,null,null,[[],["c_int",6]],null,null,null,null,[[],["c_int",6]],null,[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_double",6]],null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],null,[[],["c_int",6]],null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,[[]],[[]],[[],["pygenobject",3]],[[]],[[]],null,null,null,null,[[]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],null,null,[[],["c_int",6]],null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["pymethoddef",3]],[[]],[[],["pymethoddef",3]],[[]],[[]],null,null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["pymoduledef_base",3]],[[],["pymoduledef_slot",3]],[[],["pymoduledef",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],null,[[],["c_int",6]],[[],["c_int",6]],null,[[["c_ulong",6]],["c_int",6]],null,null,null,null,null,null,[[["c_ulong",6]],["c_int",6]],null,null,null,null,null,null,null,[[]],[[]],null,null,null,null,[[]],[[],["c_int",6]],null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,[[]],[[]],null,[[],["py_ssize_t",6]],null,null,[[],["py_ssize_t",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],null,[[]],null,null,[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pyobject",3]],[[],["pyvarobject",3]],[[],["pytype_slot",3]],[[],["pytype_spec",3]],[[]],[[]],[[]],[[]],[[],["pytype_slot",3]],[[],["pytype_spec",3]],null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,[[]],null,[[],["c_int",6]],null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["pyobjectarenaallocator",3]],[[]],null,[[]],null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["pyhash_funcdef",3]],[[]],[[]],[[]],null,null,[[]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pygilstate_state",4]],[[]],[[["pygilstate_state",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_int",6]]],[[["c_int",6]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["pycompilerflags",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[],["c_int",6]],null,[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,[[],["c_int",6]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,null,[[]],[[]],null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[],["c_int",6]],null,[[["py_ssize_t",6]],["c_int",6]],null,null,null,[[]],null,[[]],[[]],[[]],[[]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["pymemberdef",3]],[[]],null,null,[[]],[[]],null,null,[[]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],null,null,null,[[["py_ssize_t",6]]],null,null,null,null,null,[[["py_ssize_t",6]]],null,[[]],[[]],[[]],[[]],[[],["pystructsequence_field",3]],[[],["pystructsequence_desc",3]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["gilguard",3]],[[],["gilguard",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[],["ensuregil",3]],[[],["ensuregil",3]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["gilpool",3]],null,null,[[]],[[],["python",3]],[[],["python",3]],[[],["python",3]],[[["nonnull",3,[["pyobject",3]]]]],[[["nonnull",3,[["pyobject",3]]]]],[[["nonnull",3,[["pyobject",3]]]]],[[["nonnull",3,[["pyobject",3]]]]],[[["python",3],["nonnull",3,[["pyobject",3]]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["python",3]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["python",3],["str",15],["pyerr",3]],["pyerr",3]],[[]],[[]],[[]],[[]],null,[[["pyany",3],["str",15]],["pyresult",6]],[[["python",3],["option",4]],["pyresult",6]],[[["python",3],["py_ssize_t",6]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[],["pyresult",6]],[[["str",15]],["option",4,[["usize",15]]]],[[]],[[]],[[],["string",3]],null,[[]],[[]],null,[[["str",15]],["pyerr",3]],[[],["pyerr",3]],[[],["pyerr",3]],[[["str",15]],["pyerr",3]],null,[[],["pyerr",3]],null,null,[[["string",3]]],null,null,[[["usize",15]],["pyerr",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["pyany",3]],["pyerr",3]],null,null,null,null,[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[],["option",4]],[[]],[[]],[[],["option",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15]],["freelist",3]],null,[[["python",3],["str",15]],["pyerr",3]],null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,[[],["privatemarker",3]],[[],["privatemarker",3]],[[],["privatemarker",3]],[[],["privatemarker",3]],[[],["privatemarker",3]],[[],["privatemarker",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[],["py_ssize_t",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["py_ssize_t",6]],null,null,[[["pymethoddef",3]],["pyresult",6,[["pycfunction",3]]]],null,null,[[]],[[]],[[["python",3]],["pyresult",6,[["frompyobject",8]]]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],null,[[]],[[]],null,[[]],[[]],[[["python",3]],["pyresult",6,[["pyobject",6]]]],[[]],[[["str",15],["str",15],["moduleinitializer",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[]],[[["python",3]],["pyiterator",3]],[[["python",3]],["pymapping",3]],[[["python",3]]],[[["python",3]],["pysequence",3]],[[]],[[["python",3]],["pyref",3]],[[]],[[["python",3]],["pyrefmut",3]],[[["python",3],["option",4,[["pydict",3]]]],["pyresult",6,[["pyobject",6]]]],[[["python",3]],["pyresult",6,[["pyobject",6]]]],[[["python",3]],["pyresult",6,[["pyobject",6]]]],[[["python",3],["str",15],["option",4,[["pydict",3]]]],["pyresult",6,[["pyobject",6]]]],[[["python",3],["str",15]],["pyresult",6,[["pyobject",6]]]],[[["python",3],["str",15]],["pyresult",6,[["pyobject",6]]]],[[["python",3]],["result",4,[["pydowncasterror",3]]]],[[["python",3]],["result",4,[["pydowncasterror",3]]]],[[]],[[]],[[["python",3]],["py",3]],[[["python",3]],["result",4,[["pyerr",3]]]],[[["python",3]],["result",4,[["py",3,[["pyany",3]]],["pyerr",3]]]],[[],["result",4,[["py",3]]]],[[]],[[["py",3]],["bool",15]],[[["pyany",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["pygeneratorexit",3]]],[[["pyrecursionerror",3]]],[[["pytype",3]]],[[["pytuple",3]]],[[["pytraceback",3]]],[[["pystring",3]]],[[["pyslice",3]]],[[["pyfrozenset",3]]],[[["pyset",3]]],[[["pysequence",3]]],[[["pylong",3]]],[[["pykeyboardinterrupt",3]]],[[["pyfloatingpointerror",3]]],[[["pymodule",3]]],[[["pyeoferror",3]]],[[["pybuffererror",3]]],[[["pyattributeerror",3]]],[[["pyunicodetranslateerror",3]]],[[["pyunicodeencodeerror",3]]],[[["pyunicodedecodeerror",3]]],[[["pyunicodeerror",3]]],[[["pymapping",3]]],[[["pylist",3]]],[[["pyiterator",3]]],[[["pyfunction",3]]],[[["pycfunction",3]]],[[["pyfloat",3]]],[[["pydict",3]]],[[["pydelta",3]]],[[["pytzinfo",3]]],[[["pytime",3]]],[[["pydatetime",3]]],[[["pydate",3]]],[[["pycomplex",3]]],[[["pycapsule",3]]],[[["pybytes",3]]],[[["pybytearray",3]]],[[["pybool",3]]],[[["pybaseexception",3]]],[[["pyunboundlocalerror",3]]],[[["pymemoryerror",3]]],[[["pytypeerror",3]]],[[["pysystemexit",3]]],[[["pynameerror",3]]],[[["pyoverflowerror",3]]],[[["pyindexerror",3]]],[[["queuefull",3]]],[[["pybrokenpipeerror",3]]],[[["pychildprocesserror",3]]],[[["queueempty",3]]],[[["pykeyerror",3]]],[[["herror",3]]],[[["pystopiteration",3]]],[[["pymodulenotfounderror",3]]],[[["pyisadirectoryerror",3]]],[[["pyconnectionerror",3]]],[[["pynotadirectoryerror",3]]],[[["pypermissionerror",3]]],[[["pyprocesslookuperror",3]]],[[["pyruntimeerror",3]]],[[["gaierror",3]]],[[["pyconnectionabortederror",3]]],[[["timeout",3]]],[[["pytimeouterror",3]]],[[["pyexception",3]]],[[["pyenvironmenterror",3]]],[[["pyioerror",3]]],[[["cancellederror",3]]],[[["invalidstateerror",3]]],[[["timeouterror",3]]],[[["incompletereaderror",3]]],[[["pyconnectionrefusederror",3]]],[[["pyarithmeticerror",3]]],[[["limitoverrunerror",3]]],[[["pysystemerror",3]]],[[["pyreferenceerror",3]]],[[["pysyntaxerror",3]]],[[["pystopasynciteration",3]]],[[["pyblockingioerror",3]]],[[["pynotimplementederror",3]]],[[]],[[["panicexception",3]]],[[["pyimporterror",3]]],[[["pyassertionerror",3]]],[[["pyconnectionreseterror",3]]],[[["pyfileexistserror",3]]],[[["pylookuperror",3]]],[[["pyinterruptederror",3]]],[[["pyrefmut",3]]],[[["pyref",3]]],[[["pycell",3]]],[[["pyfilenotfounderror",3]]],[[["pyoserror",3]]],[[["pyzerodivisionerror",3]]],[[["pyvalueerror",3]]],[[["python",3]],["py",3]],[[["python",3]],["pyresult",6]],[[["python",3]],["option",4]],[[["nonnull",3,[["pyobject",3]]]]],[[["python",3]],["py",3]],[[["python",3]],["pyresult",6,[["py",3]]]],[[["python",3]],["option",4]],[[["python",3]],["isize",15]],[[["python",3]],["pyresult",6,[["pyobject",6]]]],[[]],[[],["nonnull",3,[["pyobject",3]]]],[[]],[[["python",3]],["pyobject",6]],[[["python",3]],["pymapping",3]],[[["python",3]],["pysequence",3]],[[["python",3]],["pyiterator",3]],[[["python",3]]],[[["python",3]],["bool",15]],[[["python",3]],["pyresult",6,[["bool",15]]]],[[["python",3]],["pyresult",6,[["py",3]]]],[[],["python",3]],[[],["python",3]],[[],["result",4]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyobject",6]],[[]],[[],["string",3]],[[["python",3]],["result",4,[["pyref",3],["pyborrowerror",3]]]],[[["python",3]],["result",4,[["pyrefmut",3],["pyborrowmuterror",3]]]],[[],["result",4]],[[["pycell",3]],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["pyany",3]]],[[["pyany",3]]],null,null,null,[[]],[[]],[[]],[[]],[[["str",15],["str",15]],["result",4,[["cstr",3],["nulbyteinstring",3]]]],[[["formatter",3]],["result",6]],[[]],[[]],[[["usize",15]],["py_ssize_t",6]],null,[[["usize",15],["str",15],["usize",15]],["never",15]],[[]],[[]],null,null,null,[[["usize",15],["str",15],["usize",15]],["never",15]],[[["usize",15],["usize",15]],["never",15]],[[["usize",15],["str",15],["usize",15]],["never",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[["python",3],["i32",15]],["pyresult",6,[["pybytes",3]]]],[[["python",3]],["pyresult",6,[["pyany",3]]]],null,null,[[]],[[]],[[]],[[["python",3]],["option",4]],[[],["option",4]],[[["python",3]]],[[]],[[]],[[["python",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],[[],["pyany",3]],[[]],[[]],[[],["pyany",3]],[[["panicexception",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["box",3,[["any",8]]]],["pyerr",3]],[[]],[[],["pyerr",3]],[[],["option",4,[["error",8]]]],[[["python",3]],["pyobject",6]],[[],["string",3]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[]],[[],["result",4]],[[],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]]],[[["python",3]]],null,null,null,null,null,null,null,[[],["pyobject",6]],[[],["pyobject",6]],null,null,null,null,null,null,null,null,[[],["gilguard",3]],[[["str",15]],["pyresult",6]],[[],["pyresult",6]],[[["pycfunction",3]],["pyresult",6]],[[["pymodule",3]],["pyresult",6]],[[],["pyresult",6]],[[]],[[]],[[]],[[],["pyany",3]],[[],["python",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["option",4,[["pydict",3]]]],["pyresult",6,[["pyany",3]]]],[[],["pyresult",6,[["pyany",3]]]],[[],["pyresult",6,[["pyany",3]]]],[[["str",15],["option",4,[["pydict",3]]]],["pyresult",6,[["pyany",3]]]],[[["str",15]],["pyresult",6,[["pyany",3]]]],[[["str",15]],["pyresult",6,[["pyany",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[["pyobject",6]]],[[],["pyresult",6]],[[["pyobject",6]],["result",4,[["pydowncasterror",3]]]],[[],["python",3]],[[]],[[],["pyresult",6,[["ordering",4]]]],[[],["pyresult",6]],[[],["pyresult",6]],[[],["pyany",3]],[[],["pydict",3]],[[],["pylist",3]],[[],["result",4,[["pydowncasterror",3]]]],[[["pyany",3]],["bool",15]],[[["pymodule",3]],["bool",15]],[[["str",15],["option",4,[["pydict",3]]],["option",4,[["pydict",3]]]],["pyresult",6,[["pyany",3]]]],[[],["pyresult",6]],[[],["pyresult",6,[["str",15]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[],["pyresult",6]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[],["option",4]],[[["python",3],["str",15],["str",15],["str",15]],["pyresult",6,[["pymodule",3]]]],[[]],[[],["pyresult",6]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[],["option",4]],[[],["pyresult",6,[["pyany",3]]]],[[],["isize",15]],[[],["pytype",3]],[[],["pytype",3]],[[]],[[],["pyresult",6,[["pyany",3]]]],null,[[],["pyresult",6,[["bool",15]]]],[[],["pyresult",6,[["isize",15]]]],[[["python",3],["str",15]],["pyresult",6,[["pymodule",3]]]],[[["str",15]],["pyresult",6,[["pymodule",3]]]],[[],["pyresult",6,[["pylist",3]]]],[[]],[[]],[[]],[[],["bool",15]],[[],["pyresult",6,[["bool",15]]]],[[["pytype",3]],["pyresult",6,[["bool",15]]]],[[],["pyresult",6,[["bool",15]]]],[[],["bool",15]],[[],["pyresult",6,[["bool",15]]]],[[["pyany",3]],["bool",15]],[[["pyany",3]],["bool",15]],[[],["pyresult",6,[["pyiterator",3]]]],[[],["pyresult",6,[["usize",15]]]],[[],["pyresult",6,[["str",15]]]],[[["python",3],["str",15]],["pyresult",6,[["pymodule",3]]]],[[],["gilpool",3]],null,[[],["python",3]],null,null,null,null,null,[[],["pyresult",6,[["pystring",3]]]],[[["compareop",4]],["pyresult",6,[["pyany",3]]]],[[["str",15],["option",4,[["pydict",3]]],["option",4,[["pydict",3]]]],["pyresult",6]],[[["str",15],["c_int",6],["option",4,[["pydict",3]]],["option",4,[["pydict",3]]]],["pyresult",6,[["pyany",3]]]],[[],["pyresult",6]],[[],["pyresult",6]],null,[[],["pyresult",6,[["pystring",3]]]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[]],[[]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]]],[[["python",3]]],[[],["str",15]],[[],["pythonversioninfo",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["pyany",3]],[[]],[[]],[[],["pyref",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[],["pyrefmut",3]],[[]],[[]],[[]],[[]],[[]],null,[[["python",3]],["result",4,[["pyerr",3]]]],[[["python",3]],["result",4,[["py",3,[["pyany",3]]],["pyerr",3]]]],[[["python",3]],["result",4,[["pyerr",3]]]],[[["python",3]],["result",4,[["py",3,[["pyany",3]]],["pyerr",3]]]],[[]],[[],["pyany",3]],[[]],[[]],[[]],null,[[],["py_ssize_t",6]],[[]],[[]],[[["pyany",3]],["pyresult",6]],[[["pyany",3]],["pyresult",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[],["borrowflag",3]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[],["pyref",3]],[[],["pyrefmut",3]],[[["python",3]],["pyresult",6]],null,null,[[],["python",3]],[[],["python",3]],[[]],[[["fnonce",8]]],[[["borrowflag",3]]],[[]],null,[[],["string",3]],[[],["string",3]],[[["python",3]]],[[],["result",4,[["pyref",3],["pyborrowerror",3]]]],[[],["result",4,[["pyrefmut",3],["pyborrowmuterror",3]]]],[[],["result",4,[["pyborrowerror",3]]]],[[],["result",4]],[[["into",8,[["pyany",3]]]],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[["pycell",3]],["result",4]],[[],["result",4]],[[["pycell",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["into",8,[["pyany",3]]]],["result",4,[["pydowncasterror",3]]]],[[["pycell",3]],["result",4]],[[["pycell",3]],["result",4]],[[["into",8,[["pyany",3]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[],["py_ssize_t",6]],null,null,null,null,null,null,[[["python",3]]],[[["python",3],["str",15],["option",4,[["str",15]]],["str",15],["usize",15],["option",4,[["newfunc",6]]],["destructor",6],["option",4,[["allocfunc",6]]],["option",4,[["freefunc",6]]],["option",4,[["py_ssize_t",6]]],["option",4,[["py_ssize_t",6]]],["fn",8],["fn",8],["bool",15],["bool",15]],["pyresult",6]],[[["vec",3]]],[[["vec",3],["bool",15]]],[[["str",15]],["option",4]],[[["bool",15],["bool",15],["bool",15]],["c_uint",6]],[[["fn",8]],["vec",3,[["pymethoddef",3]]]],[[["bool",15],["fn",8]],["vec",3,[["pygetsetdef",3]]]],[[["option",4,[["str",15]]],["str",15]],["pyresult",6]],[[["str",15],["pybufferprocs",3],["option",4,[["py_ssize_t",6]]],["option",4,[["py_ssize_t",6]]]]],[[["python",3],["pyerr",3],["str",15]],["never",15]],null,null,null,null,[[],["privatemarker",3]],[[],["privatemarker",3]],[[],["privatemarker",3]],[[],["pyclassinitializer",3]],[[]],[[]],[[]],[[]],[[["python",3]],["result",4,[["pyclassinitializer",3],["pyerr",3]]]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[]],[[],["pyclassinitializer",3]],[[],["pyclassinitializer",3]],[[]],null,[[]],[[]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[["str",15]]],[[]],null,null,[[],["option",4,[["ordering",4]]]],[[],["option",4,[["ordering",4]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[["python",3],["str",15],["fn",8]]],[[["python",3]]],[[],["option",4,[["allocfunc",6]]]],[[],["freefunc",6]],[[["python",3],["vec",3]],["pyresult",6]],null,[[["pyany",3]],["bool",15]],[[["pyany",3]],["bool",15]],[[]],null,[[["python",3]],["pytype",3]],[[["python",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["u8",15]],[[],["i32",15]],[[],["bool",15]],[[],["u8",15]],[[],["u32",15]],[[],["i32",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["i32",15]],[[],["i32",15]],[[["python",3]],["pydict",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_int",6]],null,null,[[]],[[],["pyany",3]],[[]],[[]],[[],["pyany",3]],[[["pybool",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[]],[[],["bool",15]],[[["pyany",3]],["bool",15]],[[["python",3],["bool",15]],["pybool",3]],[[["python",3]],["pyobject",6]],[[],["string",3]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[]],[[],["result",4]],[[],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]]],null,null,[[]],[[]],[[]],[[],["pyany",3]],[[]],[[]],[[]],[[],["pyany",3]],[[["pybytearray",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[["python",3]],["pyresult",6,[["pybytearray",3]]]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[]],[[],["bool",15]],[[["pyany",3]],["bool",15]],[[],["usize",15]],[[["python",3]],["pybytearray",3]],[[["python",3],["usize",15]],["pyresult",6,[["pybytearray",3]]]],[[["usize",15]],["pyresult",6]],[[["python",3]],["pyobject",6]],[[],["string",3]],[[],["vec",3,[["u8",15]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[]],[[],["result",4]],[[],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]]],null,null,[[]],[[]],[[],["pyany",3]],[[]],[[]],[[],["pyany",3]],[[["pybytes",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3],["usize",15]],["pybytes",3]],[[]],[[]],[[["pyany",3]],["bool",15]],[[["python",3]],["pybytes",3]],[[["python",3],["usize",15]],["pyresult",6,[["pybytes",3]]]],[[["python",3]],["pyobject",6]],[[],["string",3]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[]],[[],["result",4]],[[],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]]],null,null,null,null,null,null,[[]],[[],["pyany",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pyany",3]],null,[[["pycapsule",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["pyresult",6]],[[["python",3],["cstr",3]],["pyresult",6]],[[]],[[]],[[["pyany",3]],["bool",15]],[[],["bool",15]],[[],["cstr",3]],[[["python",3],["",26,[["send",8],["assertnotzerosized",8]]],["cstr",3]],["pyresult",6]],[[["python",3],["",26,[["send",8],["assertnotzerosized",8]]],["cstr",3],["fnonce",8]],["pyresult",6]],[[]],[[]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyobject",6]],[[],["string",3]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]]],null,null,null,[[],["c_double",6]],[[]],[[],["pyany",3]],[[]],[[]],[[],["pyany",3]],[[["pycomplex",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[["python",3]],["option",4]],[[["python",3],["complex",3,[["into",8,[["c_double",6]]]]]],["pycomplex",3]],[[["python",3],["c_double",6],["c_double",6]],["pycomplex",3]],[[["python",3]],["option",4]],[[],["c_double",6]],[[]],[[["pyany",3]],["bool",15]],null,[[["pycomplex",3]],["pycomplex",3]],[[],["c_double",6]],[[["python",3]],["pyobject",6]],[[],["string",3]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[]],[[],["result",4]],[[],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]]],[[["pycomplex",3],["pycomplex",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[],["pyany",3]],[[["pydate",3]],["bool",15]],[[["pydatetime",3]],["bool",15]],[[["pytime",3]],["bool",15]],[[["pytzinfo",3]],["bool",15]],[[["pydelta",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3],["i64",15]],["pyresult",6,[["pydate",3]]]],[[["python",3],["f64",15],["option",4,[["pytzinfo",3]]]],["pyresult",6,[["pydatetime",3]]]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["i32",15]],[[],["i32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["i32",15]],[[],["i32",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[]],[[]],[[]],[[]],[[]],[[["pyany",3]],["bool",15]],[[["pyany",3]],["bool",15]],[[["pyany",3]],["bool",15]],[[["pyany",3]],["bool",15]],[[["pyany",3]],["bool",15]],[[["python",3],["i32",15],["u8",15],["u8",15]],["pyresult",6,[["pydate",3]]]],[[["python",3],["i32",15],["u8",15],["u8",15],["u8",15],["u8",15],["u8",15],["u32",15],["option",4,[["pyobject",6]]]],["pyresult",6,[["pydatetime",3]]]],[[["python",3],["u8",15],["u8",15],["u8",15],["u32",15],["option",4,[["pyobject",6]]]],["pyresult",6,[["pytime",3]]]],[[["python",3],["i32",15],["i32",15],["i32",15],["bool",15]],["pyresult",6,[["pydelta",3]]]],[[["python",3],["i32",15],["u8",15],["u8",15],["u8",15],["u8",15],["u8",15],["u32",15],["option",4,[["pyobject",6]]],["bool",15]],["pyresult",6,[["pydatetime",3]]]],[[["python",3],["u8",15],["u8",15],["u8",15],["u32",15],["option",4,[["pyobject",6]]],["bool",15]],["pyresult",6,[["pytime",3]]]],[[["python",3],["option",4,[["pyobject",6]]]]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],[[["python",3]]],null,null,null,null,null,null,null,[[],["pymapping",3]],[[]],[[],["pyany",3]],[[]],[[]],[[]],[[]],[[]],[[],["pyresult",6,[["bool",15]]]],[[],["pyresult",6,[["pydict",3]]]],[[],["pyresult",6]],[[],["pyany",3]],null,[[["pydict",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3],["pyobject",6]],["pyresult",6,[["pydict",3]]]],[[],["option",4,[["pyany",3]]]],[[]],[[]],[[]],[[["python",3]],["pydict",3]],[[],["bool",15]],[[["pyany",3]],["bool",15]],[[],["pylist",3]],[[],["pydictiterator",3]],[[]],[[],["pylist",3]],[[],["usize",15]],[[["python",3]],["pydict",3]],[[],["option",4]],null,[[],["pyresult",6]],[[]],[[["python",3]],["pyobject",6]],[[],["string",3]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]]],[[]],[[],["pylist",3]],null,null,[[]],[[],["pyany",3]],[[]],[[]],[[],["pyany",3]],[[["pyfloat",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[]],[[["pyany",3]],["bool",15]],[[["python",3],["c_double",6]],["pyfloat",3]],[[["python",3]],["pyobject",6]],[[],["string",3]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[]],[[],["result",4]],[[],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]]],[[],["c_double",6]],null,null,null,null,null,[[]],[[]],[[],["pyany",3]],[[],["pyany",3]],[[]],[[]],[[]],[[]],[[],["pyany",3]],[[],["pyany",3]],[[]],[[["pycfunction",3]],["bool",15]],[[["pyfunction",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["pymethoddef",3],["pyfunctionarguments",4]],["pyresult",6]],[[["pymethoddef",3],["python",3]],["pyresult",6]],[[]],[[]],[[["pyany",3]],["bool",15]],[[["pyany",3]],["bool",15]],[[["pycfunction",6],["str",15],["str",15],["pyfunctionarguments",4]],["pyresult",6]],[[["python",3]],["pyresult",6,[["pycfunction",3]]]],[[["pycfunctionwithkeywords",6],["str",15],["str",15],["pyfunctionarguments",4]],["pyresult",6]],[[]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[],["string",3]],[[],["string",3]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]]],[[["python",3]]],null,null,[[]],[[],["pyany",3]],[[]],[[]],[[],["pyany",3]],[[["pyiterator",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[["python",3]],["option",4]],[[["python",3]],["pyresult",6,[["pyiterator",3]]]],[[["python",3]],["option",4]],[[]],[[["python",3]],["pyobject",6]],[[],["string",3]],[[["into",8,[["pyany",3]]]],["result",4,[["pyiterator",3],["pydowncasterror",3]]]],[[],["result",4]],[[["into",8,[["pyany",3]]]],["result",4,[["pyiterator",3],["pydowncasterror",3]]]],[[["into",8,[["pyany",3]]]],["pyiterator",3]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[],["pyresult",6]],[[]],[[],["pyany",3]],[[],["pysequence",3]],[[]],[[]],[[]],[[]],[[],["pyresult",6,[["bool",15]]]],[[["usize",15]],["pyresult",6]],[[["usize",15],["usize",15]],["pyresult",6]],[[],["pyany",3]],[[["python",3]],["pylist",3]],[[["pylist",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["usize",15]],["pyresult",6,[["pyany",3]]]],[[["usize",15]],["pyany",3]],[[["usize",15],["usize",15]],["pylist",3]],[[["rangeto",3,[["usize",15]]]]],[[["rangeinclusive",3,[["usize",15]]]]],[[["rangefull",3]]],[[["rangefrom",3,[["usize",15]]]]],[[["rangetoinclusive",3,[["usize",15]]]]],[[],["pyresult",6,[["usize",15]]]],[[["usize",15]]],[[["range",3,[["usize",15]]]]],null,[[["usize",15]],["pyresult",6]],[[]],[[]],[[]],[[],["bool",15]],[[["pyany",3]],["bool",15]],[[],["pylistiterator",3]],[[],["usize",15]],null,[[["python",3]],["pylist",3]],[[]],[[],["option",4,[["pyany",3]]]],[[],["pyresult",6]],[[["usize",15]],["pyresult",6]],[[["usize",15],["usize",15],["pyany",3]],["pyresult",6]],[[]],[[],["pyresult",6]],[[["python",3]],["pyobject",6]],[[],["string",3]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]]],null,null,[[]],[[],["pyany",3]],[[]],[[]],[[],["pyresult",6]],[[],["pyany",3]],[[["pymapping",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[],["pyresult",6,[["pyany",3]]]],[[]],[[],["pyresult",6,[["bool",15]]]],[[],["pyresult",6,[["pysequence",3]]]],[[],["pyresult",6,[["pysequence",3]]]],[[],["pyresult",6,[["usize",15]]]],[[],["pyresult",6]],[[["python",3]],["pyobject",6]],[[],["string",3]],[[["into",8,[["pyany",3]]]],["result",4,[["pymapping",3],["pydowncasterror",3]]]],[[],["result",4]],[[["into",8,[["pyany",3]]]],["result",4,[["pymapping",3],["pydowncasterror",3]]]],[[["into",8,[["pyany",3]]]],["pymapping",3]],[[],["result",4]],[[],["typeid",3]],[[],["pyresult",6,[["pysequence",3]]]],null,null,null,null,[[]],[[],["pyany",3]],[[]],[[]],[[],["pyany",3]],[[["pylong",3]],["bool",15]],[[["python",3],["partialeq",8],["partialeq",8]],["pyresult",6,[["partialeq",8]]]],null,[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],null,null,null,[[]],[[["pyany",3]],["bool",15]],[[["python",3]],["pyobject",6]],[[],["string",3]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[]],[[],["result",4]],[[],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]]],null,null,null,[[]],[[],["pyany",3]],[[]],[[]],[[["pysequence",3]],["pyresult",6,[["pysequence",3]]]],[[],["pyresult",6,[["bool",15]]]],[[],["pyresult",6,[["usize",15]]]],[[["usize",15]],["pyresult",6]],[[["usize",15],["usize",15]],["pyresult",6]],[[],["pyany",3]],[[["pysequence",3]],["bool",15]],[[["pyany",3]],["pyresult",6,[["vec",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["usize",15]],["pyresult",6,[["pyany",3]]]],[[["usize",15],["usize",15]],["pyresult",6,[["pysequence",3]]]],[[["pysequence",3]],["pyresult",6,[["pysequence",3]]]],[[["usize",15]],["pyresult",6,[["pysequence",3]]]],[[],["pyresult",6,[["usize",15]]]],[[["rangetoinclusive",3,[["usize",15]]]]],[[["usize",15]]],[[["range",3,[["usize",15]]]]],[[["rangefrom",3,[["usize",15]]]]],[[["rangefull",3]]],[[["rangeinclusive",3,[["usize",15]]]]],[[["rangeto",3,[["usize",15]]]]],[[]],[[],["pyresult",6,[["bool",15]]]],[[],["pyresult",6,[["usize",15]]]],[[],["pyresult",6,[["pylist",3]]]],[[["usize",15]],["pyresult",6,[["pysequence",3]]]],[[["pysequence",3]],["usize",15]],[[["pysequence",3],["usize",15],["usize",15]],["pysequence",3]],[[["usize",15]],["pyresult",6]],[[["usize",15],["usize",15],["pyany",3]],["pyresult",6]],[[["python",3]],["pyobject",6]],[[],["string",3]],[[],["result",4]],[[["into",8,[["pyany",3]]]],["result",4,[["pysequence",3],["pydowncasterror",3]]]],[[["into",8,[["pyany",3]]]],["result",4,[["pysequence",3],["pydowncasterror",3]]]],[[["into",8,[["pyany",3]]]],["pysequence",3]],[[],["result",4]],[[],["pyresult",6,[["pytuple",3]]]],[[],["typeid",3]],null,null,null,null,null,[[],["pyresult",6]],[[]],[[]],[[],["pyany",3]],[[],["pyany",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pyresult",6,[["bool",15]]]],[[],["pyresult",6,[["bool",15]]]],[[],["pyany",3]],[[],["pyany",3]],[[]],[[["python",3]],["pyresult",6,[["pyset",3]]]],[[["python",3]],["pyresult",6,[["pyfrozenset",3]]]],[[["pyset",3]],["bool",15]],[[["pyfrozenset",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["pyany",3]],["bool",15]],[[["pyany",3]],["bool",15]],[[],["pysetiterator",3]],[[],["pysetiterator",3]],[[],["usize",15]],[[],["usize",15]],[[["python",3]],["pyresult",6,[["pyset",3]]]],[[["python",3]],["pyresult",6,[["pyfrozenset",3]]]],[[["pyany",3]],["pysetiterator",3]],[[],["option",4]],[[],["option",4,[["pyobject",6]]]],null,null,[[]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[],["string",3]],[[],["string",3]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]]],[[["python",3]]],null,null,null,[[]],[[],["pyany",3]],[[]],[[]],[[]],[[]],[[],["pyany",3]],[[["pyslice",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["c_long",6]],["pyresult",6,[["pysliceindices",3]]]],[[]],[[]],[[["pyany",3]],["bool",15]],[[["python",3],["isize",15],["isize",15],["isize",15]],["pyslice",3]],[[["isize",15],["isize",15],["isize",15]],["pysliceindices",3]],null,null,null,null,[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[],["string",3]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]]],null,null,null,null,null,null,[[]],[[]],[[],["pyany",3]],[[]],[[]],[[]],[[]],[[],["pystringdata",4]],[[]],[[],["pyresult",6,[["pystringdata",4]]]],[[],["pyany",3]],[[["pystring",3]],["bool",15]],[[["pystringdata",4]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[]],[[]],[[["python",3]],["option",4]],[[["pyany",3],["str",15],["str",15]],["pyresult",6,[["pystring",3]]]],[[["python",3]],["option",4]],[[]],[[]],[[["pyany",3]],["bool",15]],[[["pystringdata",4]],["bool",15]],[[["python",3],["str",15]],["pystring",3]],[[["python",3]],["pyobject",6]],[[]],[[],["pyresult",6,[["str",15]]]],[[],["string",3]],[[["python",3]],["pyresult",6,[["cow",4,[["str",15]]]]]],[[],["cow",4,[["str",15]]]],[[],["cow",4,[["str",15]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]]],[[],["usize",15]],null,null,null,null,null,[[]],[[],["pyany",3]],[[]],[[]],[[],["pyany",3]],[[["pytraceback",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[],["pyresult",6,[["string",3]]]],[[]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[]],[[["pyany",3]],["bool",15]],[[["python",3]],["pyobject",6]],[[],["string",3]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[]],[[],["result",4]],[[],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]]],null,null,null,[[]],[[],["pyany",3]],[[],["pysequence",3]],[[]],[[]],[[]],[[]],[[]],[[],["pyresult",6,[["bool",15]]]],[[],["pyany",3]],[[["python",3]],["pytuple",3]],[[["pytuple",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["usize",15]],["pyresult",6,[["pyany",3]]]],[[["usize",15]],["pyany",3]],[[["usize",15],["usize",15]],["pytuple",3]],[[],["pyresult",6,[["usize",15]]]],[[["rangetoinclusive",3,[["usize",15]]]]],[[["rangeto",3,[["usize",15]]]]],[[["rangeinclusive",3,[["usize",15]]]]],[[["rangefull",3]]],[[["rangefrom",3,[["usize",15]]]]],[[["range",3,[["usize",15]]]]],[[["usize",15]]],null,[[]],[[]],[[]],[[],["bool",15]],[[["pyany",3]],["bool",15]],[[],["pytupleiterator",3]],[[],["usize",15]],[[],["usize",15]],null,[[["python",3]],["pytuple",3]],[[],["option",4,[["pyany",3]]]],[[]],[[["isize",15],["isize",15]],["pytuple",3]],[[["usize",15]],["pytuple",3]],[[["python",3]],["pyobject",6]],[[],["string",3]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[]],[[],["result",4]],[[],["result",4]],null,null,[[],["typeid",3]],[[],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]]],[[["pytuple",3],["usize",15]],["pyerr",3]],null,null,[[]],[[],["pyany",3]],[[]],[[]],[[]],[[],["pyany",3]],[[["pytype",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[["python",3]],["pytype",3]],[[]],[[],["pyresult",6,[["bool",15]]]],[[["pytype",3]],["pyresult",6,[["bool",15]]]],[[],["pyresult",6,[["bool",15]]]],[[["pyany",3]],["bool",15]],[[],["pyresult",6,[["str",15]]]],[[["python",3]],["pytype",3]],[[["python",3]],["pyobject",6]],[[],["string",3]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[]],[[],["result",4]],[[],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]]]],"p":[[3,"Py"],[3,"PyAny"],[3,"Python"],[3,"GILGuard"],[3,"GILPool"],[8,"PyErrArguments"],[6,"PyIterNextOutput"],[6,"PyIterANextOutput"],[6,"PyObject"],[3,"PyDowncastError"],[3,"PythonVersionInfo"],[3,"PyErr"],[3,"PyBuffer"],[3,"ReadOnlyCell"],[4,"ElementType"],[8,"Element"],[13,"SignedInteger"],[13,"UnsignedInteger"],[13,"Float"],[3,"HashCallbackOutput"],[8,"PyCallbackOutput"],[8,"IntoPyCallbackOutput"],[8,"WrappingCastTo"],[4,"CompareOp"],[8,"PyObjectGetAttrProtocol"],[8,"PyObjectSetAttrProtocol"],[8,"PyObjectDelAttrProtocol"],[8,"PyObjectRichcmpProtocol"],[8,"PyObjectStrProtocol"],[8,"PyObjectReprProtocol"],[8,"PyObjectHashProtocol"],[8,"PyObjectBoolProtocol"],[8,"PyObjectProtocol"],[8,"PyBufferGetBufferProtocol"],[8,"PyBufferReleaseBufferProtocol"],[8,"PyBufferProtocol"],[8,"PyDescrGetProtocol"],[8,"PyDescrSetProtocol"],[8,"PyDescrProtocol"],[3,"PyTraverseError"],[8,"PyGCProtocol"],[3,"PyVisit"],[3,"PyClassImplCollector"],[3,"ThreadCheckerStub"],[3,"ThreadCheckerImpl"],[3,"ThreadCheckerInherited"],[8,"PyClassBaseType"],[8,"PyClassImpl"],[8,"PyClass__add__SlotFragment"],[8,"PyClass__and__SlotFragment"],[8,"PyClass__delattr__SlotFragment"],[8,"PyClass__delete__SlotFragment"],[8,"PyClass__delitem__SlotFragment"],[8,"PyClass__divmod__SlotFragment"],[8,"PyClass__floordiv__SlotFragment"],[8,"PyClass__lshift__SlotFragment"],[8,"PyClass__matmul__SlotFragment"],[8,"PyClass__mod__SlotFragment"],[8,"PyClass__mul__SlotFragment"],[8,"PyClass__or__SlotFragment"],[8,"PyClass__pow__SlotFragment"],[8,"PyClassThreadChecker"],[8,"PyClass__radd__SlotFragment"],[8,"PyClass__rand__SlotFragment"],[8,"PyClass__rdivmod__SlotFragment"],[8,"PyClass__rfloordiv__SlotFragment"],[8,"PyClass__rlshift__SlotFragment"],[8,"PyClass__rmatmul__SlotFragment"],[8,"PyClass__rmod__SlotFragment"],[8,"PyClass__rmul__SlotFragment"],[8,"PyClass__ror__SlotFragment"],[8,"PyClass__rpow__SlotFragment"],[8,"PyClass__rrshift__SlotFragment"],[8,"PyClass__rshift__SlotFragment"],[8,"PyClass__rsub__SlotFragment"],[8,"PyClass__rtruediv__SlotFragment"],[8,"PyClass__rxor__SlotFragment"],[8,"PyClass__set__SlotFragment"],[8,"PyClass__setattr__SlotFragment"],[8,"PyClass__setitem__SlotFragment"],[8,"PyClass__sub__SlotFragment"],[8,"PyClass__truediv__SlotFragment"],[8,"PyClass__xor__SlotFragment"],[8,"PyClassAllocImpl"],[8,"PyAsyncProtocolMethods"],[8,"PyAsyncProtocolSlots"],[8,"PyBufferProtocolSlots"],[8,"PyDescrProtocolMethods"],[8,"PyDescrProtocolSlots"],[8,"PyClassFreeImpl"],[8,"PyGCProtocolSlots"],[8,"PyClassWithFreeList"],[8,"PyIterProtocolSlots"],[8,"PyMappingProtocolMethods"],[8,"PyMappingProtocolSlots"],[8,"PyClassInventory"],[8,"PyClassNewImpl"],[8,"PyNumberProtocolMethods"],[8,"PyNumberProtocolSlots"],[8,"PyObjectProtocolMethods"],[8,"PyObjectProtocolSlots"],[8,"PyClassDefaultSlots"],[8,"PyClassDescriptors"],[8,"PySequenceProtocolSlots"],[8,"PyIterIterProtocol"],[8,"PyIterNextProtocol"],[4,"IterNextOutput"],[8,"PyIterProtocol"],[13,"Yield"],[13,"Return"],[8,"PyMappingGetItemProtocol"],[8,"PyMappingSetItemProtocol"],[8,"PyMappingDelItemProtocol"],[8,"PyMappingLenProtocol"],[8,"PyMappingProtocol"],[3,"PyCFunction"],[3,"PyCFunctionWithKeywords"],[3,"PyCFunctionFastWithKeywords"],[3,"PyGetter"],[3,"PySetter"],[3,"PyClassAttributeFactory"],[4,"PyMethodDefType"],[4,"PyMethodType"],[3,"PyMethodDef"],[3,"PyClassAttributeDef"],[3,"PyGetterDef"],[3,"PySetterDef"],[13,"Class"],[13,"Static"],[13,"Method"],[13,"ClassAttribute"],[13,"Getter"],[13,"Setter"],[13,"PyCFunction"],[13,"PyCFunctionWithKeywords"],[13,"PyCFunctionFastWithKeywords"],[8,"PyNumberAddProtocol"],[8,"PyNumberSubProtocol"],[8,"PyNumberMulProtocol"],[8,"PyNumberMatmulProtocol"],[8,"PyNumberTruedivProtocol"],[8,"PyNumberFloordivProtocol"],[8,"PyNumberModProtocol"],[8,"PyNumberDivmodProtocol"],[8,"PyNumberPowProtocol"],[8,"PyNumberLShiftProtocol"],[8,"PyNumberRShiftProtocol"],[8,"PyNumberAndProtocol"],[8,"PyNumberXorProtocol"],[8,"PyNumberOrProtocol"],[8,"PyNumberRPowProtocol"],[8,"PyNumberIPowProtocol"],[8,"PyNumberRAddProtocol"],[8,"PyNumberRSubProtocol"],[8,"PyNumberRMulProtocol"],[8,"PyNumberRMatmulProtocol"],[8,"PyNumberRTruedivProtocol"],[8,"PyNumberRFloordivProtocol"],[8,"PyNumberRModProtocol"],[8,"PyNumberRDivmodProtocol"],[8,"PyNumberRLShiftProtocol"],[8,"PyNumberRRShiftProtocol"],[8,"PyNumberRAndProtocol"],[8,"PyNumberRXorProtocol"],[8,"PyNumberROrProtocol"],[8,"PyNumberIAddProtocol"],[8,"PyNumberISubProtocol"],[8,"PyNumberIMulProtocol"],[8,"PyNumberIMatmulProtocol"],[8,"PyNumberITruedivProtocol"],[8,"PyNumberIFloordivProtocol"],[8,"PyNumberIModProtocol"],[8,"PyNumberIDivmodProtocol"],[8,"PyNumberILShiftProtocol"],[8,"PyNumberIRShiftProtocol"],[8,"PyNumberIAndProtocol"],[8,"PyNumberIXorProtocol"],[8,"PyNumberIOrProtocol"],[8,"PyNumberNegProtocol"],[8,"PyNumberPosProtocol"],[8,"PyNumberAbsProtocol"],[8,"PyNumberInvertProtocol"],[8,"PyNumberIntProtocol"],[8,"PyNumberFloatProtocol"],[8,"PyNumberIndexProtocol"],[8,"PyNumberProtocol"],[8,"PyAsyncAwaitProtocol"],[8,"PyAsyncAiterProtocol"],[8,"PyAsyncAnextProtocol"],[4,"IterANextOutput"],[8,"PyAsyncProtocol"],[13,"Yield"],[13,"Return"],[8,"PySequenceGetItemProtocol"],[8,"PySequenceSetItemProtocol"],[8,"PySequenceDelItemProtocol"],[8,"PySequenceRepeatProtocol"],[8,"PySequenceInplaceRepeatProtocol"],[8,"PySequenceContainsProtocol"],[8,"PySequenceConcatProtocol"],[8,"PySequenceInplaceConcatProtocol"],[8,"PySequenceLenProtocol"],[8,"PySequenceProtocol"],[8,"AsPyPointer"],[8,"FromPyObject"],[8,"FromPyPointer"],[8,"IntoPyPointer"],[8,"IntoPy"],[8,"ToPyObject"],[8,"PyTryFrom"],[8,"PyTryInto"],[8,"ToBorrowedObject"],[8,"TryFromPyCell"],[4,"PyFunctionArguments"],[8,"ExtractExt"],[13,"Python"],[13,"PyModule"],[4,"PyErrState"],[3,"PyErrStateNormalized"],[13,"Normalized"],[13,"FfiTuple"],[13,"LazyTypeAndValue"],[13,"LazyValue"],[3,"PyBaseException"],[3,"PyException"],[3,"PyStopAsyncIteration"],[3,"PyStopIteration"],[3,"PyGeneratorExit"],[3,"PyArithmeticError"],[3,"PyLookupError"],[3,"PyAssertionError"],[3,"PyAttributeError"],[3,"PyBufferError"],[3,"PyEOFError"],[3,"PyFloatingPointError"],[3,"PyOSError"],[3,"PyImportError"],[3,"PyModuleNotFoundError"],[3,"PyIndexError"],[3,"PyKeyError"],[3,"PyKeyboardInterrupt"],[3,"PyMemoryError"],[3,"PyNameError"],[3,"PyOverflowError"],[3,"PyRuntimeError"],[3,"PyRecursionError"],[3,"PyNotImplementedError"],[3,"PySyntaxError"],[3,"PyReferenceError"],[3,"PySystemError"],[3,"PySystemExit"],[3,"PyTypeError"],[3,"PyUnboundLocalError"],[3,"PyUnicodeError"],[3,"PyUnicodeDecodeError"],[3,"PyUnicodeEncodeError"],[3,"PyUnicodeTranslateError"],[3,"PyValueError"],[3,"PyZeroDivisionError"],[3,"PyBlockingIOError"],[3,"PyBrokenPipeError"],[3,"PyChildProcessError"],[3,"PyConnectionError"],[3,"PyConnectionAbortedError"],[3,"PyConnectionRefusedError"],[3,"PyConnectionResetError"],[3,"PyFileExistsError"],[3,"PyFileNotFoundError"],[3,"PyInterruptedError"],[3,"PyIsADirectoryError"],[3,"PyNotADirectoryError"],[3,"PyPermissionError"],[3,"PyProcessLookupError"],[3,"PyTimeoutError"],[3,"PyEnvironmentError"],[3,"PyIOError"],[3,"CancelledError"],[3,"InvalidStateError"],[3,"TimeoutError"],[3,"IncompleteReadError"],[3,"LimitOverrunError"],[3,"QueueEmpty"],[3,"QueueFull"],[3,"herror"],[3,"gaierror"],[3,"timeout"],[3,"PyLongObject"],[3,"PyArena"],[3,"PyThreadState"],[3,"PyInterpreterState"],[3,"_mod"],[3,"symtable"],[3,"_node"],[3,"PyWeakReference"],[3,"_PyOpcache"],[3,"PyDictKeysObject"],[3,"PyDateTime_CAPI"],[4,"PyMemAllocatorDomain"],[4,"PyGILState_STATE"],[4,"_PyStatus_TYPE"],[3,"PyCompactUnicodeObject"],[3,"PyUnicodeObject"],[3,"PyPreConfig"],[3,"PyConfig"],[3,"PyStatus"],[3,"PyObjectArenaAllocator"],[3,"PyListObject"],[3,"PyAsyncMethods"],[19,"PyUnicodeObjectData"],[3,"PyBaseExceptionObject"],[3,"PyHeapTypeObject"],[3,"PyTryBlock"],[3,"PyType_Spec"],[3,"PyBufferProcs"],[3,"Py_buffer"],[3,"PyMemAllocatorEx"],[3,"PyCompilerFlags"],[3,"PyGetSetDef"],[3,"PyCodeObject"],[3,"PySystemExitObject"],[3,"_frozen"],[3,"PyComplexObject"],[3,"PyDateTime_Time"],[3,"PyDateTime_Date"],[3,"PyDateTime_DateTime"],[3,"PyDateTime_Delta"],[3,"PyStructSequence_Field"],[3,"PyStructSequence_Desc"],[3,"PyUnicodeErrorObject"],[3,"PySyntaxErrorObject"],[3,"PyImportErrorObject"],[3,"PyOSErrorObject"],[3,"PyStopIterationObject"],[3,"PyFrameObject"],[3,"PyFutureFeatures"],[3,"PySetObject"],[3,"PyGenObject"],[3,"PyASCIIObject"],[3,"PyHash_FuncDef"],[3,"setentry"],[3,"Py_complex"],[3,"_inittab"],[3,"_PyDateTimeAPI_impl"],[3,"_PyDateTime_TimeZone_UTC_impl"],[3,"PyWideStringList"],[3,"PyModuleDef"],[3,"PyModuleDef_Base"],[3,"PyDictObject"],[3,"PyMethodDef"],[3,"PyMappingMethods"],[3,"PyNumberMethods"],[3,"PyFloatObject"],[3,"PySliceObject"],[3,"PyTupleObject"],[3,"PyVarObject"],[3,"PyTypeObject"],[3,"PyObject"],[3,"PyType_Slot"],[3,"PyModuleDef_Slot"],[3,"PySequenceMethods"],[3,"PyMemberDef"],[3,"EnsureGIL"],[3,"ReferencePool"],[3,"FunctionDescription"],[3,"KeywordOnlyParameterDescription"],[4,"Slot"],[3,"FreeList"],[13,"Filled"],[3,"NotSend"],[3,"PyClassDictSlot"],[3,"PyClassWeakRefSlot"],[8,"PyClassDict"],[8,"PyClassWeakRef"],[3,"PyClassDummySlot"],[8,"PyFunctionDef"],[3,"IPowModulo"],[3,"ModuleInitializer"],[3,"ModuleDef"],[8,"PyNativeType"],[3,"NulByteInString"],[3,"PrivateMarker"],[3,"GILOnceCell"],[3,"PanicException"],[3,"PyModule"],[3,"BorrowFlag"],[3,"PyBorrowError"],[3,"PyBorrowMutError"],[3,"PyRefMut"],[3,"PyCell"],[3,"PyRef"],[3,"PyCellContents"],[3,"PyCellBase"],[8,"PyCellLayout"],[8,"PyClass"],[3,"PyNativeTypeInitializer"],[8,"PyObjectInit"],[3,"PyClassInitializer"],[8,"PyTypeInfo"],[3,"LazyStaticType"],[8,"PyTypeObject"],[3,"PyBool"],[3,"PyByteArray"],[3,"PyBytes"],[3,"PyCapsule"],[3,"PyComplex"],[3,"PyDate"],[3,"PyDateTime"],[3,"PyTime"],[3,"PyTzInfo"],[3,"PyDelta"],[3,"PyDict"],[3,"PyFloat"],[3,"PyCFunction"],[3,"PyFunction"],[3,"PyIterator"],[3,"PyList"],[3,"PyMapping"],[3,"PyLong"],[3,"PySequence"],[3,"PySet"],[3,"PyFrozenSet"],[3,"PySlice"],[3,"PyString"],[3,"PyTraceback"],[3,"PyTuple"],[3,"PyType"],[4,"PyStringData"],[8,"PyDateAccess"],[8,"PyDeltaAccess"],[8,"PyTimeAccess"],[8,"IntoPyDict"],[3,"PySliceIndices"],[13,"Ucs1"],[13,"Ucs2"],[13,"Ucs4"],[8,"AssertNotZeroSized"],[3,"CapsuleContents"],[8,"PyDictItem"],[3,"PyDictIterator"],[3,"PyListIterator"],[3,"PySetIterator"],[3,"PyTupleIterator"]],"a":{"intopycallbackoutput":[1118]}},\
"pyo3_build_config":{"doc":"Configuration used by PyO3 for conditional support of …","t":[12,17,4,3,17,13,13,3,17,17,3,13,13,13,13,13,4,3,5,12,5,5,12,14,12,11,5,14,0,12,12,5,5,0,12,12,12,12,12,12,12,5,12,0,12,12,5,12,12,12,14,11,12,12,8,3,3,6,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,10,12,12,17,18,4,3,13,13,3,3,17,13,18,13,13,13,13,4,3,3,17,12,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,5,5,5,11,5,5,11,5,5,11,11,11,11,12,12,5,5,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,12,11,11,11,11,11,11,11,11,5,5,11,5,12,12,12,5,5,12,5,5,12,11,11,11,11,11,12,5,5,11,12,5,5,12,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,12,5,12,3,3,12,12,5,5,0,12,12,12,12,12,12,5,12,12,5,12,12,12,12,8,3,3,6,14,10,14,12,12,14,10],"n":["0","ABI3_CONFIG","BuildFlag","BuildFlags","CONFIG_FILE","COUNT_ALLOCS","CPython","CrossCompileConfig","DEFAULT_CROSS_COMPILE_CONFIG_PATH","HOST_CONFIG","InterpreterConfig","Other","PyPy","Py_DEBUG","Py_REF_DEBUG","Py_TRACE_REFS","PythonImplementation","PythonVersion","_add_extension_module_link_args","abi3","abi3_config","add_extension_module_link_args","arch","bail","build_flags","context","cross_compiling","ensure","errors","executable","extra_build_script_lines","find_all_sysconfigdata","get","impl_","implementation","lib_dir","lib_dir","lib_name","major","minor","os","parse_sysconfigdata","pointer_width","pyo3_build_script_impl","shared","suppress_build_script_link_lines","use_pyo3_cfgs","vendor","version","version","warn","with_context","0","0","Context","Error","ErrorReport","Result","borrow","borrow","borrow_mut","borrow_mut","context","fmt","fmt","fmt","from","from","from","from","from","into","into","report","source","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","value","with_context","0","0","ABI3_MAX_MINOR","ALL","BuildFlag","BuildFlags","COUNT_ALLOCS","CPython","CrossCompileConfig","InterpreterConfig","MINIMUM_SUPPORTED_VERSION","Other","PY37","PyPy","Py_DEBUG","Py_REF_DEBUG","Py_TRACE_REFS","PythonImplementation","PythonVersion","Sysconfigdata","WINDOWS_ABI3_LIB_NAME","abi3","any_cross_compiling_env_vars_set","arch","assert_receiver_is_total_eq","assert_receiver_is_total_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_flags","cargo_env_var","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","conda_env_interpreter","cross_compiling","cross_compiling_from_cargo_env","default","default_lib_name_unix","default_lib_name_windows","emit_pyo3_cfgs","ends_with","env_var","eq","eq","eq","eq","executable","extra_build_script_lines","find_all_sysconfigdata","find_interpreter","find_sysconfigdata","fixup","fixup_config_for_abi3","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_interpreter","from_interpreter","from_path","from_reader","from_soabi","from_str","from_str","from_str","from_str","from_sysconfigdata","from_sysconfigdata","get_abi3_version","get_env_interpreter","get_value","hash","implementation","insert","into","into","into","into","into","into","into","is_abi3","is_cpython_lib_dir","is_pypy","is_pypy_lib_dir","lib_dir","lib_dir","lib_name","load_cross_compile_config","load_cross_compile_from_sysconfigdata","major","make_cross_compile_config","make_interpreter_config","minor","ne","ne","ne","new","new","os","parse_script_output","parse_sysconfigdata","partial_cmp","pointer_width","run_python_script","search_lib_dir","shared","starts_with","suppress_build_script_link_lines","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_writer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vendor","venv_interpreter","version","version","windows_hardcoded_cross_compile","0","InterpreterConfig","PythonVersion","abi3","build_flags","cargo_env_var","env_var","errors","executable","extra_build_script_lines","implementation","lib_dir","lib_name","major","make_cross_compile_config","minor","pointer_width","resolve_interpreter_config","shared","suppress_build_script_link_lines","version","0","Context","Error","ErrorReport","Result","bail","context","ensure","source","value","warn","with_context"],"q":["pyo3_build_config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3_build_config::BuildFlag","pyo3_build_config::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3_build_config::impl_","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3_build_config::impl_::BuildFlag","pyo3_build_config::pyo3_build_script_impl","","","","","","","","","","","","","","","","","","","","pyo3_build_config::pyo3_build_script_impl::errors","","","","","","","","","","",""],"d":["","Build configuration set if abi3 features enabled and …","","A list of python interpreter compile-time preprocessor …","Build configuration provided by <code>PYO3_CONFIG_FILE</code>. May be …","","","Configuration needed by PyO3 to cross-compile for a target …","Path where PyO3’s build.rs will write configuration by …","Build configuration discovered by <code>pyo3-build-config</code> build …","Configuration needed by PyO3 to build for the correct …","","","","","","","","","Whether linking against the stable/limited Python 3 API.","","Adds linker arguments (for macOS) suitable for PyO3’s …","The <code>arch</code> component of the compilaton target triple.","A simple macro for returning an error. Resembles …","Additional relevant Python build flags / configuration …","","Detect whether we are cross compiling and return an …","A simple macro for checking a condition. Resembles …","","Path of host <code>python</code> executable.","Additional lines to <code>println!()</code> from Cargo build scripts.","Finds <code>_sysconfigdata*.py</code> files for detected Python …","Loads the configuration determined from the build …","","The Python implementation flavor.","The directory containing the Python library to link …","The directory containing the Python library to link …","The name of the link library defining Python.","","","The <code>os</code> component of the compilaton target triple.","Parse sysconfigdata file","Width in bits of pointers on the target machine.","Private exports used in PyO3’s build.rs","Whether link library is shared.","Whether to suppress emitting of <code>cargo:rustc-link-*</code> lines …","Adds all the <code>#[cfg]</code> flags to the current compilation.","The <code>vendor</code> component of the compilaton target triple.","Python <code>X.Y</code> version. e.g. <code>3.9</code>.","The version of the Python library to link against.","Show warning. If needed, please extend this macro to …","","","","","A simple error implementation which allows chaining of …","Error report inspired by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maximum Python version that can be used as minimum …","","","A list of python interpreter compile-time preprocessor …","","","Configuration needed by PyO3 to cross-compile for a target …","Configuration needed by PyO3 to build for the correct …","Minimum Python version PyO3 supports.","","","","","","","","","Parsed data from Python sysconfigdata file","","Whether linking against the stable/limited Python 3 API.","","The <code>arch</code> component of the compilaton target triple.","","","","","","","","","","","","","","","","","Additional relevant Python build flags / configuration …","Gets an environment variable owned by cargo.","","","","","","","","","","","Detect whether we are cross compiling and return an …","","","","","","","Gets an external environment variable, and registers the …","","","","","Path of host <code>python</code> executable.","Additional lines to <code>println!()</code> from Cargo build scripts.","Finds <code>_sysconfigdata*.py</code> files for detected Python …","Attempts to locate a python interpreter.","","","Lowers the configured version to the abi3 version, if set.","","","","","","","","","","","","","","","","","Examine python’s compile flags to pass to cfg by …","","","","","","","","Generate from parsed sysconfigdata file","","","","","","The Python implementation flavor.","","","","","","","","","","","","","The directory containing the Python library to link …","The directory containing the Python library to link …","The name of the link library defining Python.","","Find cross compilation information from sysconfigdata file","","Generates an interpreter config suitable for …","Generates an interpreter config which will be hard-coded …","","","","","","","The <code>os</code> component of the compilaton target triple.","","Parse sysconfigdata file","","Width in bits of pointers on the target machine.","Run a python script using the specified interpreter binary.","recursive search for _sysconfigdata, returns all …","Whether link library is shared.","","Whether to suppress emitting of <code>cargo:rustc-link-*</code> lines …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>vendor</code> component of the compilaton target triple.","","Python <code>X.Y</code> version. e.g. <code>3.9</code>.","The version of the Python library to link against.","","","Configuration needed by PyO3 to build for the correct …","","Whether linking against the stable/limited Python 3 API.","Additional relevant Python build flags / configuration …","Gets an environment variable owned by cargo.","Gets an external environment variable, and registers the …","","Path of host <code>python</code> executable.","Additional lines to <code>println!()</code> from Cargo build scripts.","The Python implementation flavor.","The directory containing the Python library to link …","The name of the link library defining Python.","","Generates an interpreter config suitable for …","","Width in bits of pointers on the target machine.","Gets the configuration for use from PyO3’s build script.","Whether link library is shared.","Whether to suppress emitting of <code>cargo:rustc-link-*</code> lines …","Python <code>X.Y</code> version. e.g. <code>3.9</code>.","","","A simple error implementation which allows chaining of …","Error report inspired by …","","A simple macro for returning an error. Resembles …","","A simple macro for checking a condition. Resembles …","","","Show warning. If needed, please extend this macro to …",""],"i":[1,0,0,0,0,2,3,0,0,0,0,2,3,2,2,2,0,0,0,4,0,0,5,0,4,6,0,0,0,4,4,0,0,0,4,4,5,4,7,7,5,0,4,0,4,4,0,5,4,5,0,6,8,9,0,0,0,0,9,10,9,10,11,9,10,10,9,10,10,10,10,9,10,10,10,10,9,10,9,10,9,10,9,10,10,11,12,1,0,1,0,0,2,3,0,0,0,2,7,3,2,2,2,0,0,0,0,4,0,5,7,2,4,12,7,3,5,2,1,4,12,7,3,5,2,1,4,0,7,3,2,1,7,3,2,1,7,0,0,0,1,0,0,4,0,0,7,3,5,2,4,4,0,0,0,1,0,7,7,3,3,5,2,2,1,4,12,7,3,5,2,1,4,1,4,4,3,7,3,2,1,4,1,0,0,12,2,4,12,4,12,7,3,5,2,1,0,0,3,0,4,5,4,0,0,7,0,0,7,7,5,2,12,1,5,0,0,7,4,0,0,4,0,4,7,3,2,1,7,3,2,1,4,4,12,7,3,5,2,1,4,12,7,3,5,2,1,4,12,7,3,5,2,1,5,0,4,5,0,8,0,0,4,4,0,0,0,4,4,4,4,4,7,0,7,4,0,4,4,4,9,0,0,0,0,0,11,0,10,10,0,11],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]]],null,[[],["interpreterconfig",3]],[[]],null,null,null,[[],["result",6]],[[["str",15],["str",15],["str",15],["str",15]],["result",6,[["option",4,[["crosscompileconfig",3]]]]]],null,null,null,null,[[["crosscompileconfig",3]],["vec",3,[["pathbuf",3]]]],[[],["interpreterconfig",3]],null,null,null,null,null,null,null,null,[[],["result",6,[["sysconfigdata",3]]]],null,null,null,null,[[]],null,null,null,null,[[],["result",6]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["infallible",4]]],[[["str",15]]],[[]],[[["string",3]]],[[]],[[]],[[],["errorreport",3]],[[],["option",4,[["error",8]]]],null,[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["str",15]],["option",4,[["string",3]]]],[[],["pythonversion",3]],[[],["pythonimplementation",4]],[[],["buildflag",4]],[[],["buildflags",3]],[[]],[[]],[[]],[[]],[[["pythonversion",3]],["ordering",4]],[[["osstr",3],["bool",15]],["pathbuf",3]],[[["str",15],["str",15],["str",15],["str",15]],["result",6,[["option",4,[["crosscompileconfig",3]]]]]],[[],["result",6,[["option",4,[["crosscompileconfig",3]]]]]],[[],["buildflags",3]],[[["pythonversion",3],["pythonimplementation",4],["option",4,[["str",15]]]],["string",3]],[[["pythonversion",3],["pythonimplementation",4],["bool",15],["bool",15]],["string",3]],[[]],[[["direntry",3],["str",15]],["bool",15]],[[["str",15]],["option",4,[["osstring",3]]]],[[["pythonversion",3]],["bool",15]],[[["pythonimplementation",4]],["bool",15]],[[["crosscompileconfig",3]],["bool",15]],[[["buildflag",4]],["bool",15]],null,null,[[["crosscompileconfig",3]],["vec",3,[["pathbuf",3]]]],[[],["result",6,[["pathbuf",3]]]],[[["crosscompileconfig",3]],["result",6,[["pathbuf",3]]]],[[["pythonversion",3]]],[[["interpreterconfig",3],["option",4,[["pythonversion",3]]]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[["sysconfigdata",3]],["result",6]],[[["sysconfigdata",3]]],[[],["option",4,[["pythonversion",3]]]],[[],["option",4,[["pathbuf",3]]]],[[["asref",8,[["str",15]]]],["option",4,[["str",15]]]],[[]],null,[[["into",8,[["string",3]]],["into",8,[["string",3]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["str",15],["option",4]],["bool",15]],[[],["bool",15]],[[["str",15],["option",4]],["bool",15]],null,null,null,[[["crosscompileconfig",3]],["result",6,[["interpreterconfig",3]]]],[[["crosscompileconfig",3]],["result",6,[["interpreterconfig",3]]]],null,[[],["result",6,[["option",4,[["interpreterconfig",3]]]]]],[[],["result",6,[["interpreterconfig",3]]]],null,[[["pythonversion",3]],["bool",15]],[[["crosscompileconfig",3]],["bool",15]],[[["buildflag",4]],["bool",15]],[[]],[[]],null,[[["str",15]],["hashmap",3,[["string",3],["string",3]]]],[[],["result",6,[["sysconfigdata",3]]]],[[["pythonversion",3]],["option",4,[["ordering",4]]]],null,[[["path",3],["str",15]],["result",6,[["string",3]]]],[[["crosscompileconfig",3]],["vec",3,[["pathbuf",3]]]],null,[[["direntry",3],["str",15]],["bool",15]],null,[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["osstr",3],["bool",15]],["pathbuf",3]],null,null,[[["crosscompileconfig",3]],["result",6,[["interpreterconfig",3]]]],null,null,null,null,null,[[["str",15]],["option",4,[["string",3]]]],[[["str",15]],["option",4,[["osstring",3]]]],null,null,null,null,null,null,null,[[],["result",6,[["option",4,[["interpreterconfig",3]]]]]],null,null,[[],["result",6,[["interpreterconfig",3]]]],null,null,null,null,null,null,null,null,null,[[],["result",6]],null,null,null,null,[[],["result",6]]],"p":[[3,"BuildFlags"],[4,"BuildFlag"],[4,"PythonImplementation"],[3,"InterpreterConfig"],[3,"CrossCompileConfig"],[6,"Result"],[3,"PythonVersion"],[13,"Other"],[3,"ErrorReport"],[3,"Error"],[8,"Context"],[3,"Sysconfigdata"]]},\
"pyo3_macros":{"doc":"This crate declares only the proc macro attributes, as a …","t":[24,8,5,23,5,5,23,23,5,23,23,10,14,14],"n":["FromPyObject","UnwrapOrCompileError","methods_type","pyclass","pyclass_enum_impl","pyclass_impl","pyfunction","pymethods","pymethods_impl","pymodule","pyproto","unwrap_or_compile_error","wrap_pyfunction","wrap_pymodule"],"q":["pyo3_macros","","","","","","","","","","","","",""],"d":["","","","A proc macro used to expose Rust structs as Python objects.","","","A proc macro used to expose Rust functions to Python.","A proc macro used to expose methods to Python.","","A proc macro used to implement Python modules.","A proc macro used to implement Python’s dunder methods.","","Wraps a Rust function annotated with <code>#[pyfunction]</code>.","Returns a function that takes a <code>Python</code> instance and …"],"i":[0,0,0,0,0,0,0,0,0,0,0,1,0,0],"f":[null,null,[[],["pyclassmethodstype",4]],null,[[["tokenstream",3],["itemenum",3],["pyclassmethodstype",4]],["tokenstream",3]],[[["tokenstream",3],["itemstruct",3],["pyclassmethodstype",4]],["tokenstream",3]],null,null,[[["tokenstream",3],["pyclassmethodstype",4]],["tokenstream",3]],null,null,[[],["tokenstream2",3]],null,null],"p":[[8,"UnwrapOrCompileError"]]},\
"pyo3_macros_backend":{"doc":"This crate contains the implementation of the proc macro …","t":[13,3,4,3,3,13,3,0,12,5,5,5,5,5,5,12,12,0,0,12,12,0,12,5,12,12,12,12,12,12,0,12,12,0,0,12,12,12,12,0,12,5,0,0,0,0,0,5,0,12,12,0,0,5,5,12,12,12,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,5,11,11,11,11,5,0,12,12,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,5,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,5,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,5,3,5,11,11,11,11,11,11,11,11,11,11,11,3,5,11,11,11,11,11,11,11,11,11,11,11,3,5,3,5,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,3,3,17,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,11,12,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,4,4,13,3,13,4,4,3,13,13,13,13,13,13,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,5,12,12,12,12,12,12,12,12,12,12,3,3,13,4,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,4,13,13,13,4,13,13,3,13,13,13,3,13,4,13,13,17,3,4,13,13,13,13,13,4,13,13,13,13,13,13,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,12,12,11,11,11,5,5,12,12,12,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,13,3,3,4,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,12,12,12,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,5,5,5,5,3,11,12,11,11,11,11,11,5,5,11,5,12,11,11,12,11,11,11,12,12,13,13,4,3,13,13,3,3,3,4,4,3,13,13,13,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,11,11,12,11,5,12,11,12,11,5,11,12,11,11,11,11,11,11,11,11,12,5,12,12,12,12,12,11,5,5,5,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,12,13,4,13,13,13,13,13,13,13,13,4,3,4,3,3,13,13,13,13,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,5,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,4,3,4,13,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,5,5,5,5,5,5,11,11,11,12,11,11,5,11,11,11,11,11,11,11,11,11,11,12,12,12,13,13,13,13,13,13,4,13,13,13,13,17,13,13,4,13,13,13,13,3,4,4,13,4,13,13,3,13,3,13,3,3,13,4,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,11,12,12,11,12,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,5,5,11,11,11,12,12,5,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,5,5,5,11,11,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,11,5,5,11,12,11,11,12,12,11,11,12,11,12,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,5,5,5,12,3,3,12,14,11,11,11,11,11,11,5,14,14,11,11,5,5,11,11,5,5,11,5,5,11,11,11,12,11,11,11,11,11,11,5,5,3,11,11,12,11,12,11,5,11,11,11,11,5,5],"n":["Inventory","PyClassArgs","PyClassMethodsType","PyFunctionOptions","PyModuleOptions","Specialization","WrapPyFunctionArgs","attributes","base","build_derive_from_pyobject","build_py_class","build_py_enum","build_py_function","build_py_methods","build_py_proto","class_kind","comma_and_arg","defs","deprecations","deprecations","freelist","frompyobject","function","get_doc","has_dict","has_extends","has_unsendable","has_weaklist","is_basetype","is_gc","konst","krate","krate","method","module","module","name","name","name","params","pass_module","process_functions_in_module","proto_method","pyclass","pyfunction","pyimpl","pymethod","pymodule_impl","pyproto","signature","text_signature","utils","wrap","wrap_pyfunction_impl","wrap_pymodule_impl","0","0","0","CrateAttribute","FromPyWithAttribute","NameAttribute","TextSignatureAttribute","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq_token","fmt","fmt","fmt","fmt","from","from","from","from","get_pyo3_options","into","into","into","into","is_attribute_ident","kw","kw","lit","ne","ne","ne","ne","parse","parse","parse","parse","take_attributes","take_pyo3_options","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","annotation","annotation","attribute","attribute","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","display","display","display","display","display","display","display","display","display","display","display","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_py_with","from_py_with","get","get","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","item","item","name","name","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","pass_module","pass_module","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","peek","set","set","signature","signature","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","text_signature","text_signature","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","transparent","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ASYNC","BUFFER","DESCR","GC","ITER","MAPPING","NUM","OBJECT","Proto","PyMethod","SEQ","SlotDef","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","can_coexist","coexist","from","from","from","get_method","get_proto","into","into","into","methods","methods_trait","methods_trait_methods","module","module","name","name","new","proto","proto_names","py_methods","slot","slot_defs","slot_defs","slot_impl","slots_trait","slots_trait_slots","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","CallAttribute","Deprecation","Deprecations","borrow","borrow","borrow_mut","borrow_mut","default","from","from","ident","into","into","new","push","span","to_tokens","try_from","try_from","try_into","try_into","type_id","type_id","Container","ContainerOptions","ContainerPyO3Attribute","ContainerType","Crate","Enum","ErrorAnnotation","FieldGetter","FieldPyO3Attribute","FieldPyO3Attributes","FromPyWith","GetAttr","GetItem","Getter","Struct","StructNewtype","Transparent","Tuple","TupleNewtype","annotation","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build_derive_from_pyobject","build_newtype_struct","build_struct","build_tuple_struct","clone","clone","clone_into","clone_into","default","enum_ident","err_name","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_attrs","from_attrs","from_py_with","getter","into","into","into","into","into","into","into","into","is_enum_variant","krate","new","new","parse","parse","path","to_owned","to_owned","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variants","verify_and_get_lifetime","0","0","0","0","0","0","0","0","0","0","ConstAttributes","ConstSpec","Name","PyO3ConstAttribute","attributes","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deprecations","from","from","from","from_attrs","into","into","into","is_class_attr","name","null_terminated_python_name","parse","python_name","rust_ident","set_name","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","CallingConvention","ClassAttribute","ClassAttribute","ClassMethod","ExtractErrorMode","Fastcall","Fn","FnArg","FnClass","FnModule","FnNew","FnSpec","FnStatic","FnType","Getter","Getter","IMPL_TRAIT_ERR","MethodAttributes","MethodTypeAttribute","New","Noargs","NotImplemented","Raise","Receiver","SelfType","Setter","Setter","StaticMethod","TpNew","TryFromPyCell","Varargs","args","args","assert_receiver_is_total_eq","attrs","attrs","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by_ref","can_use_fastcall","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","convention","default_value","deprecations","doc","ensure_text_signature_on_valid_method","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_args","get_methoddef","get_return_info","get_wrapper_function","into","into","into","into","into","into","into","into","is_kw_only","is_pos_only","krate","mutability","name","name","ne","ne","null_terminated_python_name","optional","output","parse","parse","parse_fn_type","parse_method_attributes","parse_method_receiver","py","python_name","python_name","receiver","self_arg","self_conversion","text_signature","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tp","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsafety","0","0","0","0","mutable","Crate","Name","PyFnArgs","PyModuleOptions","PyModulePyO3Option","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","from","from","from","from_attrs","get_pyfn_attr","into","into","into","krate","modname","name","options","parse","parse","process_functions_in_module","pymodule_impl","set_crate","set_name","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","0","accept_args_kwargs","impl_arg_param","impl_arg_params","is_args","is_forwarded_args","is_kwargs","MethodProto","args","args","borrow","borrow_mut","fmt","from","has_self","impl_method_proto","insert_lifetime","into","modify_self_ty","name","new","no_result","proto","try_from","try_into","type_id","with_result","with_self","Crate","Enum","FieldPyO3Option","FieldPyO3Options","Get","Name","PyClassArgs","PyClassEnumVariant","PyClassImplsBuilder","PyClassKind","PyClassPyO3Option","PyClassPyO3Options","Set","Struct","TextSignature","add_assign","add_expr","add_path","assert_receiver_is_total_eq","attr","base","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_py_class","build_py_enum","class_kind","clone","clone_into","cls","default","define_inventory_class","deprecations","doc","doc","eq","extract_variant_data","fmt","freelist","from","from","from","from","from","from","from","from","get","get_class_python_name","has_dict","has_extends","has_unsendable","has_weaklist","ident","impl_all","impl_class","impl_descriptors","impl_enum","impl_enum_class","impl_extractext","impl_freelist","impl_gc","impl_into_py","impl_pyclass","impl_pyclassimpl","impl_pytypeinfo","into","into","into","into","into","into","into","into","is_basetype","is_gc","krate","methods_type","module","name","name","new","new","parse","parse","parse","parse_enum_args","parse_stuct_args","set","set_crate","set_text_signature","take_pyo3_options","take_pyo3_options","text_signature","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unit_variants_as_descriptors","0","0","0","0","0","Arg","Argument","Crate","FromPyWith","KeywordArgs","Kwarg","Name","PassModule","PosOnlyArg","PosOnlyArgsSeparator","PyFunctionArgPyO3Attribute","PyFunctionArgPyO3Attributes","PyFunctionOption","PyFunctionOptions","PyFunctionSignature","Signature","TextSignature","VarArgs","VarArgsSeparator","add_attributes","add_item","add_literal","add_name_value","add_nv_common","add_work","arguments","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_py_function","clone","clone","clone_into","clone_into","default","default","deprecations","eq","eq","fmt","fmt","from","from","from","from","from","from","from_attrs","from_attrs","from_meta","from_py_with","has_kw","has_kwargs","has_posonly_args","has_varargs","impl_wrap_pyfunction","into","into","into","into","into","into","krate","kw_arg_is_ok","name","ne","ne","parse","parse","parse","parse","pass_module","posonly_arg_is_ok","set_name","signature","text_signature","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_is_pymodule","vararg_is_ok","0","0","0","0","0","1","1","1","0","0","0","0","0","0","Crate","Inventory","PyClassMethodsType","PyImplOptions","PyImplPyO3Option","Specialization","add_shared_proto_slots","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_py_methods","clone","clone_into","default","from","from","from","from_attrs","gen_default_slot_impls","gen_py_const","get_cfg_attributes","impl_methods","impl_protos","impl_py_methods","into","into","into","krate","parse","set_crate","submit_methods_inventory","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","0","0","Call","CompareOp","Conversion","Descriptor","Fn","Function","GeneratedPyMethod","IPowModulo","Int","MaybeNullObject","Method","NO_ARGUMENTS","NonNullObject","Object","PropertyType","Proto","Proto","PyBuffer","PyHashT","PyMethod","PyMethodKind","PyMethodProtoKind","PySsizeT","ReturnMode","ReturnSelf","Slot","SlotDef","SlotFragment","SlotFragmentDef","SlotTraitImpl","StaticIdent","TokenGenerator","TraitImpl","Ty","Void","__ABS__","__ADD__","__AITER__","__AND__","__ANEXT__","__AWAIT__","__BOOL__","__CONTAINS__","__DELATTR__","__DELETE__","__DELITEM__","__DIVMOD__","__FLOAT__","__FLOORDIV__","__GETATTR__","__GETBUFFER__","__GETITEM__","__GET__","__HASH__","__IADD__","__IAND__","__IFLOORDIV__","__ILSHIFT__","__IMATMUL__","__IMOD__","__IMUL__","__INDEX__","__INT__","__INVERT__","__IOR__","__IPOW__","__IRSHIFT__","__ISUB__","__ITER__","__ITRUEDIV__","__IXOR__","__LEN__","__LSHIFT__","__MATMUL__","__MOD__","__MUL__","__NEG__","__NEXT__","__OR__","__POS__","__POW__","__RADD__","__RAND__","__RDIVMOD__","__RELEASEBUFFER__","__REPR__","__RFLOORDIV__","__RICHCMP__","__RLSHIFT__","__RMATMUL__","__RMOD__","__RMUL__","__ROR__","__RPOW__","__RRSHIFT__","__RSHIFT__","__RSUB__","__RTRUEDIV__","__RXOR__","__SETATTR__","__SETITEM__","__SET__","__STR__","__SUB__","__TRUEDIV__","__XOR__","arguments","arguments","arguments","before_call_method","before_call_method","binary_num_slot_fragment_def","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_generic","clone","clone_into","deprecations","doc","ensure_function_options_valid","ensure_no_forbidden_protocol_attributes","extract","extract_error_mode","extract_error_mode","extract_error_mode","extract_error_mode","extract_object","extract_proto_arguments","ffi_type","fragment","from","from","from","from","from","from","from","from","from","from","from","from_name","func_ty","gen_py_method","generate_method_arguments","generate_method_body","generate_pyproto_fragment","generate_type_slot","handle_error","impl_call_getter","impl_call_setter","impl_call_slot","impl_py_class_attribute","impl_py_getter_def","impl_py_method_def","impl_py_method_def_new","impl_py_setter_def","into","into","into","into","into","into","into","into","into","into","into","is_proto_method","kind","method_name","new","new","null_terminated_python_name","parse","pyproto","pyproto_fragment","require_unsafe","require_unsafe","ret_ty","ret_ty","ret_ty","ret_ty","return_call_output","return_conversion","return_mode","return_self","slot","span","span","spec","split_off_python_arg","to_owned","to_tokens","to_tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","1","field","field_index","python_name","self_type","spec","0","0","0","0","build_py_proto","impl_normal_methods","impl_proto_impl","impl_proto_methods","0","DocArgs","PythonDoc","_eq_token","bail_spanned","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","ensure_not_async_fn","ensure_spanned","err_spanned","from","from","get_doc","get_pyo3_crate","into","into","is_python","option_type_argument","parse","remove_lifetime","replace_self","span","to_owned","to_tokens","token_stream","try_from","try_from","try_into","try_into","type_id","type_id","unwrap_group","unwrap_ty_group","WrapPyFunctionArgs","borrow","borrow_mut","comma_and_arg","from","function","into","module_def_ident","parse","try_from","try_into","type_id","wrap_pyfunction_impl","wrap_pymodule_impl"],"q":["pyo3_macros_backend","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3_macros_backend::attributes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3_macros_backend::attributes::kwpyo3_macros_backend::defs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3_macros_backend::deprecations","","","","","","","","","","","","","","","","","","","","","","","","pyo3_macros_backend::frompyobject","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3_macros_backend::frompyobject::ContainerPyO3Attribute","","","pyo3_macros_backend::frompyobject::ContainerType","","","pyo3_macros_backend::frompyobject::FieldGetter","","pyo3_macros_backend::frompyobject::FieldPyO3Attribute","","pyo3_macros_backend::konst","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3_macros_backend::konst::PyO3ConstAttribute","pyo3_macros_backend::method","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3_macros_backend::method::FnType","","","pyo3_macros_backend::method::SelfType","","pyo3_macros_backend::module","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3_macros_backend::module::PyModulePyO3Option","","pyo3_macros_backend::params","","","","","","pyo3_macros_backend::proto_method","","","","","","","","","","","","","","","","","","","","","pyo3_macros_backend::pyclass","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3_macros_backend::pyclass::FieldPyO3Option","","","pyo3_macros_backend::pyclass::PyClassPyO3Option","","pyo3_macros_backend::pyfunction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3_macros_backend::pyfunction::Argument","","","","","","","","pyo3_macros_backend::pyfunction::PyFunctionArgPyO3Attribute","pyo3_macros_backend::pyfunction::PyFunctionOption","","","","","pyo3_macros_backend::pyimpl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3_macros_backend::pyimpl::PyImplPyO3Option","pyo3_macros_backend::pymethodpyo3_macros_backend::pymethod::GeneratedPyMethod","","","","","pyo3_macros_backend::pymethod::PropertyType","","","","","pyo3_macros_backend::pymethod::PyMethodKind","pyo3_macros_backend::pymethod::PyMethodProtoKind","","pyo3_macros_backend::pymethod::ReturnMode","pyo3_macros_backend::pyproto","","","","pyo3_macros_backend::utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3_macros_backend::wrap","","","","","","","","","","","","",""],"d":["","The parsed arguments of the pyclass macro","The mechanism used to collect <code>#[pymethods]</code> into the type …","","","","","","","Derive FromPyObject for enums and structs.","","","","","","","","","","","","","","Collects all #[doc = “…”] attributes into a …","","","","","","","","","","","Code generation for the function that initializes a python …","","","","","","","Finds and takes care of the #[pyfn(…)] in <code>#[pymodule]</code>","","","","","","Generates the function that is called by the python …","","","","","","","","","","","For specifying the path to the pyo3 crate.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Takes attributes from an attribute vectorredicates for <code>#[pyproto]</code>.","Represents a method registered as a normal method like …","","Represents a slot definition.","","","","","","","","","","","","","","","","","Trait which stores the slots Trait method which accesses …","","","","The path to the module which contains this proto …","The name of this protocol. E.g., Iter.","","","","Protocols necessary to meet this def. E.g., we need …","All methods registered as normal methods like <code>#[pymethods]</code>.","The Python slot name.","","All methods registered to the slot table.","The name of the function in pyo3 which implements the slot.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Data container","","Attributes for deriving FromPyObject scoped on containers.","Container Style","Change the path for the pyo3 crate","Describes derivation input of an enum.","Change the name of an enum variant in the generated error …","","","Attributes for deriving FromPyObject scoped on fields.","","","","","Struct Container, e.g. <code>struct Foo { a: String }</code>","Newtype struct container, e.g. …","Treat the Container as a Wrapper, directly extract its …","Tuple struct, e.g. <code>struct Foo(String)</code>.","Tuple newtype, e.g. <code>#[transparent] struct Foo(String)</code>","Change the name of an enum variant in the generated error …","","","","","","","","","","","","","","","","","Build derivation body for enums.","Build derivation body for a struct.","Derive FromPyObject for enums and structs.","","","","","","","","","","","","","","","","","","","","","","","","","","Extract the field attributes.","","","","","","","","","","","","Change the path for the pyo3 crate","Construct a new enum representation.","Construct a container based on fields, identifier and …","","","","","","Treat the Container as a Wrapper, directly extract its …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Null-terminated Python name","","","","","","","","","","","","","","","Determines which CPython calling convention a given FnSpec …","<code>#[classattr]</code>","","<code>#[classmethod]</code>","","","","","","","","","","","<code>#[getter]</code>","","","","","<code>#[new]</code>","","","","","","<code>#[setter]</code>","","<code>#[staticmethod]</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Determine default calling convention from an argument …","Return a <code>PyMethodDef</code> constructor for this function, …","","Return a C wrapper function for this signature.","","","","","","","","","","","","","","","","","","","","Parser function signature and function attributes","Transforms a rust fn arg parsed with syn into a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extracts the data from the #[pyfn(…)] attribute of a …","","","","","","","","","","Finds and takes care of the #[pyfn(…)] in <code>#[pymodule]</code>","Generates the function that is called by the python …","","","","","","","","","","","","","","Determine if the function gets passed a *args tuple or **…","Re option_pos: The option slice doesn’t contain the py: …","","","Return true if the argument list is simply (*args, **kwds).","","","","","","","","","","","Insert lifetime <code>&#39;p</code> to <code>PyRef&lt;Self&gt;</code> or references (e.g., …","","","","","","","","","","","","","","","<code>#[pyo3()]</code> options for pyclass fields","","","The parsed arguments of the pyclass macro","","Implements most traits used by <code>#[pyclass]</code>.","If the class is derived from a Rust <code>struct</code> or <code>enum</code>.","","","","","","Match a key/value flag","Adda single expression from the comma separated list in …","Match a single flag","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enforce at compile time that PyGCProtocol is implemented","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The attributes of the pyfunction macro","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses #[pyo3(from_python_with = “func”)]","","","","","","","","Generates python wrapper over a function that allows …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The mechanism used to collect <code>#[pymethods]</code> into the type …lso used by pyfunction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Split an argument of pyo3::Python from the front of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A syntax tree which evaluates to a null-terminated …","","Macro inspired by <code>anyhow::bail!</code> to return a compiler error …","","","","","","","","Macro inspired by <code>anyhow::ensure!</code> to return a compiler …","Macro inspired by <code>anyhow::anyhow!</code> to create a compiler …","","","Collects all #[doc = “…”] attributes into a …","Extract the path to the pyo3 crate, or use the default (…","","","Check if the given type <code>ty</code> is <code>pyo3::Python</code>.","If <code>ty</code> is Option, return <code>Some(T)</code>, else None.","","Remove lifetime from reference","Replace <code>Self</code> keyword in type with <code>cls</code>","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,0,0,0,1,0,0,2,0,0,0,0,0,0,2,3,0,0,4,2,0,3,0,2,2,2,2,2,2,0,5,4,0,0,2,2,5,4,0,4,0,0,0,0,0,0,0,0,4,4,0,0,0,0,6,7,8,0,0,0,0,6,7,8,9,6,7,8,9,6,7,8,9,6,7,8,9,6,7,8,9,9,6,7,8,9,6,7,8,9,0,6,7,8,9,0,0,9,9,6,7,8,9,6,7,8,9,0,0,6,7,8,9,6,7,8,9,6,7,8,9,6,7,8,9,0,0,0,0,10,11,12,13,14,15,16,17,18,19,20,10,11,12,13,14,15,16,17,18,19,20,10,11,12,13,14,15,16,17,18,19,20,10,11,12,13,14,15,16,17,18,19,20,10,11,12,13,14,15,16,17,18,19,20,10,11,12,13,14,15,16,17,18,19,20,10,11,12,13,14,15,16,17,18,19,20,10,11,12,13,14,15,16,17,18,19,20,10,11,12,13,14,15,16,17,18,19,20,0,0,0,0,10,11,12,13,14,15,16,17,18,19,20,10,11,12,13,14,15,16,17,18,19,20,0,0,0,0,10,11,12,13,14,15,16,17,18,19,20,0,0,10,11,12,13,14,15,16,17,18,19,20,0,0,0,0,10,11,12,13,14,15,16,17,18,19,20,10,11,12,13,14,15,16,17,18,19,20,0,0,10,11,12,13,14,15,16,17,18,19,20,10,11,12,13,14,15,16,17,18,19,20,0,0,10,11,12,13,14,15,16,17,18,19,20,10,11,12,13,14,15,16,17,18,19,20,10,11,12,13,14,15,16,17,18,19,20,0,0,0,0,0,0,0,0,0,0,0,0,21,22,23,21,22,23,22,22,21,22,23,21,21,21,22,23,21,21,21,21,21,21,22,23,22,23,21,23,21,21,23,21,21,21,22,23,21,22,23,21,22,23,24,25,0,0,25,24,25,24,24,25,24,25,25,24,24,24,24,24,25,24,25,24,25,24,0,0,0,0,26,0,26,0,0,0,27,28,28,27,29,29,26,29,29,30,27,31,29,32,30,26,33,28,27,31,29,32,30,26,33,28,31,32,0,32,32,32,33,28,33,28,30,31,32,31,29,32,26,33,28,27,31,29,32,30,26,33,28,30,33,33,33,27,31,29,32,30,26,33,28,32,30,31,32,27,26,32,33,28,30,27,31,29,32,30,26,33,28,27,31,29,32,30,26,33,28,32,27,31,29,32,30,26,33,28,31,0,34,35,36,37,38,39,40,41,42,43,0,0,44,0,45,45,46,44,45,46,44,46,45,46,44,46,45,46,44,46,46,45,44,45,45,46,45,46,44,45,46,44,45,46,44,47,0,48,49,48,0,50,49,0,49,49,49,0,49,0,48,49,0,0,0,48,50,51,51,52,0,48,49,48,50,52,50,53,54,48,53,55,53,55,48,49,52,51,50,54,53,55,48,49,52,51,50,54,55,0,55,48,49,52,51,50,54,55,48,49,52,51,50,54,53,53,53,53,53,55,48,54,55,48,49,52,50,54,53,55,48,49,52,51,50,54,50,53,0,53,53,55,48,49,52,51,50,54,53,53,53,55,53,55,55,54,53,55,53,53,55,53,0,0,55,53,54,52,49,49,53,55,48,49,52,51,50,54,53,53,55,48,49,52,51,50,54,53,55,48,49,52,51,50,54,55,54,53,55,48,49,52,51,50,54,53,56,57,58,59,60,61,61,0,0,0,62,61,5,62,61,5,5,62,61,5,5,0,62,61,5,5,62,5,62,62,61,0,0,5,5,62,61,5,62,61,5,62,61,5,63,64,0,0,0,0,0,0,0,65,65,65,65,65,65,65,0,0,65,0,65,65,65,65,65,65,65,65,65,66,67,0,0,68,68,0,0,0,0,0,0,68,67,66,2,2,2,67,69,2,2,66,70,68,71,69,67,72,2,66,70,68,71,69,67,72,0,0,2,67,67,69,72,0,72,69,69,67,0,67,2,2,66,70,68,71,69,67,72,70,0,2,2,2,2,71,69,0,0,0,0,69,69,69,69,69,69,0,2,66,70,68,71,69,67,72,2,2,72,69,2,2,70,2,69,2,66,68,2,2,70,72,72,70,72,72,67,2,66,70,68,71,69,67,72,2,66,70,68,71,69,67,72,2,66,70,68,71,69,67,72,0,73,74,75,76,77,78,0,79,80,78,78,79,79,78,78,0,0,0,0,0,79,79,78,78,4,81,81,81,81,81,81,80,79,78,81,82,4,80,79,78,81,82,4,0,78,82,78,82,81,4,4,78,82,78,82,80,79,78,81,82,4,82,4,81,82,81,81,81,81,0,80,79,78,81,82,4,4,81,4,78,82,80,79,81,4,4,81,4,4,4,78,82,80,79,78,81,82,4,80,79,78,81,82,4,80,79,78,81,82,4,0,81,83,84,85,86,87,85,86,87,88,89,90,91,92,93,94,1,0,0,0,1,0,94,1,95,94,1,95,0,1,1,95,94,1,95,95,0,0,0,0,0,0,94,1,95,95,94,95,0,1,94,1,95,94,1,95,94,1,95,96,97,98,99,100,101,102,103,102,0,100,100,100,104,0,100,100,0,104,103,100,100,0,0,0,100,0,101,99,0,99,0,104,0,0,104,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,105,106,105,105,0,104,107,103,99,102,101,105,106,97,98,100,104,107,103,99,102,101,105,106,97,98,100,0,100,100,102,102,0,0,100,105,106,105,106,0,0,100,106,104,107,103,99,102,101,105,106,97,98,100,103,105,0,0,0,106,105,0,0,0,0,0,0,0,0,0,104,107,103,99,102,101,105,106,97,98,100,0,107,107,105,106,102,107,0,0,105,105,105,106,105,106,101,105,105,105,105,97,98,107,0,100,97,98,104,107,103,99,102,101,105,106,97,98,100,104,107,103,99,102,101,105,106,97,98,100,104,107,103,99,102,101,105,106,97,98,100,108,109,110,111,111,112,112,112,113,113,114,115,116,117,0,0,0,0,118,0,0,119,0,119,118,119,118,118,118,0,0,0,119,118,0,0,119,118,0,0,119,0,0,118,118,118,119,119,118,119,118,119,118,0,0,0,3,3,3,3,3,3,0,3,3,3,3,0,0],"f":[null,null,null,null,null,null,null,null,null,[[["deriveinput",3]],["result",6,[["tokenstream",3]]]],[[["itemstruct",3],["pyclassargs",3],["pyclassmethodstype",4]],["result",6,[["tokenstream",3]]]],[[["itemenum",3],["pyclassargs",3],["pyclassmethodstype",4]],["result",6,[["tokenstream",3]]]],[[["itemfn",3],["pyfunctionoptions",3]],["result",6,[["tokenstream",3]]]],[[["itemimpl",3],["pyclassmethodstype",4]],["result",6,[["tokenstream",3]]]],[[["itemimpl",3]],["result",6,[["tokenstream",3]]]],null,null,null,null,null,null,null,null,[[["option",4]],["pythondoc",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["itemfn",3]],["result",6]],null,null,null,null,null,[[["ident",3],["pymoduleoptions",3],["pythondoc",3],["visibility",4]],["tokenstream",3]],null,null,null,null,null,[[["wrappyfunctionargs",3]],["tokenstream",3]],[[["path",3]],["result",6,[["tokenstream",3]]]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["frompywithattribute",3]],[[],["nameattribute",3]],[[],["crateattribute",3]],[[],["textsignatureattribute",3]],[[]],[[]],[[]],[[]],[[["frompywithattribute",3]],["bool",15]],[[["nameattribute",3]],["bool",15]],[[["crateattribute",3]],["bool",15]],[[["textsignatureattribute",3]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["attribute",3]],["result",6,[["option",4,[["punctuated",3,[["parse",8],["comma",3]]]]]]]],[[]],[[]],[[]],[[]],[[["attribute",3],["str",15]],["bool",15]],null,null,null,[[["frompywithattribute",3]],["bool",15]],[[["nameattribute",3]],["bool",15]],[[["crateattribute",3]],["bool",15]],[[["textsignatureattribute",3]],["bool",15]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["vec",3]],["result",6]],[[["vec",3]],["result",6,[["vec",3,[["parse",8]]]]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["intospans",8]],["annotation",3]],null,[[["intospans",8]],["attribute",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["bool",6]],[[],["bool",6]],[[],["bool",6]],[[],["bool",6]],[[],["bool",6]],[[],["bool",6]],[[],["bool",6]],[[],["bool",6]],[[],["bool",6]],[[],["bool",6]],[[],["bool",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["intospans",8]],["from_py_with",3]],null,[[["intospans",8]],["get",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["intospans",8]],["item",3]],null,[[["intospans",8]],["name",3]],[[["parsestream",6]],["result",6,[["annotation",3]]]],[[["parsestream",6]],["result",6,[["attribute",3]]]],[[["parsestream",6]],["result",6,[["from_py_with",3]]]],[[["parsestream",6]],["result",6,[["get",3]]]],[[["parsestream",6]],["result",6,[["item",3]]]],[[["parsestream",6]],["result",6,[["pass_module",3]]]],[[["parsestream",6]],["result",6,[["name",3]]]],[[["parsestream",6]],["result",6,[["set",3]]]],[[["parsestream",6]],["result",6,[["signature",3]]]],[[["parsestream",6]],["result",6,[["text_signature",3]]]],[[["parsestream",6]],["result",6,[["transparent",3]]]],null,[[["intospans",8]],["pass_module",3]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["cursor",3]],["bool",15]],null,[[["intospans",8]],["set",3]],null,[[["intospans",8]],["signature",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["intospans",8]],["text_signature",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["tokenstream2",3]]],[[["tokenstream2",3]]],[[["tokenstream2",3]]],[[["tokenstream2",3]]],[[["tokenstream2",3]]],[[["tokenstream2",3]]],[[["tokenstream2",3]]],[[["tokenstream2",3]]],[[["tokenstream2",3]]],[[["tokenstream2",3]]],[[["tokenstream2",3]]],null,[[["intospans",8]],["transparent",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[["str",15],["str",15]]],[[]],[[]],[[]],[[],["option",4,[["pymethod",3]]]],[[],["option",4,[["methodproto",3]]]],[[]],[[]],[[]],null,[[],["ident",3]],[[],["ident",3]],[[],["path",3]],null,null,null,[[["str",15],["str",15]]],null,null,null,null,[[["hashset",3,[["string",3]]]]],null,null,[[],["ident",3]],[[],["ident",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[],["deprecations",3]],[[]],[[]],[[["span",3]],["ident",3]],[[]],[[]],[[]],[[["deprecation",4],["span",3]]],[[],["span",3]],[[["tokenstream",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["tokenstream",3]],[[],["tokenstream",3]],[[["deriveinput",3]],["result",6,[["tokenstream",3]]]],[[["option",4,[["ident",3]]]],["tokenstream",3]],[[],["tokenstream",3]],[[["usize",15]],["tokenstream",3]],[[],["fieldpyo3attributes",3]],[[],["fieldgetter",4]],[[]],[[]],[[],["containeroptions",3]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",6]],[[],["result",6]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["dataenum",3],["ident",3]],["result",6]],[[["fields",4],["path",3],["containeroptions",3],["bool",15]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],null,[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["generics",3]],["result",6,[["option",4,[["lifetimedef",3]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[["vec",3]],["result",6]],[[]],[[]],[[]],null,null,[[],["tokenstream",3]],[[["parsestream",6]],["result",6]],[[],["cow",4,[["ident",3]]]],null,[[["nameattribute",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["bool",15]],[[],["fnarg",3]],[[],["methodtypeattribute",4]],[[],["fntype",4]],[[],["selftype",4]],[[],["extracterrormode",4]],[[],["callingconvention",4]],[[],["methodattributes",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["ident",3]],["option",4,[["tokenstream",3]]]],null,null,[[["fntype",4],["option",4,[["textsignatureattribute",3]]]],["result",6]],[[["fnarg",3]],["bool",15]],[[["methodtypeattribute",4]],["bool",15]],[[["methodattributes",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["tokenstream",3]],[[["returntype",4]],["type",4]],[[["ident",3],["option",4,[["type",4]]]],["result",6,[["tokenstream",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["ident",3]],["bool",15]],[[["ident",3]],["bool",15]],null,null,null,null,[[["fnarg",3]],["bool",15]],[[["methodattributes",3]],["bool",15]],[[],["litstr",3]],null,null,[[["signature",3],["vec",3],["pyfunctionoptions",3]],["result",6,[["fnspec",3]]]],[[["fnarg",4]],["result",6]],[[["signature",3],["option",4,[["methodtypeattribute",4]]],["option",4]],["result",6]],[[["vec",3],["option",4,[["ident",3]]],["deprecations",3]],["result",6,[["methodattributes",3]]]],[[["fnarg",4]],["result",6,[["selftype",4]]]],null,null,null,[[["type",4],["extracterrormode",4]],["tokenstream",3]],[[],["tokenstream",3]],[[["option",4,[["type",4]]],["extracterrormode",4]],["tokenstream",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["pymoduleoptions",3]],[[]],[[]],[[]],[[["vec",3]],["result",6]],[[["vec",3]],["result",6,[["option",4,[["pyfnargs",3]]]]]],[[]],[[]],[[]],null,null,null,null,[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["itemfn",3]],["result",6]],[[["ident",3],["pymoduleoptions",3],["pythondoc",3],["visibility",4]],["tokenstream",3]],[[["crateattribute",3]],["result",6]],[[["ident",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[["fnarg",3],["fnspec",3],["usize",15],["option",4,[["type",4]]],["usize",15],["ident",3],["ident",3]],["result",6,[["tokenstream",3]]]],[[["fnspec",3],["option",4,[["type",4]]],["ident",3],["bool",15]],["result",6,[["tokenstream",3]]]],[[["ident",3]],["bool",15]],[[],["bool",15]],[[["ident",3]],["bool",15]],null,[[],["methodproto",3]],null,[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[],["methodproto",3]],[[["type",4],["signature",3],["path",3],["methodproto",3]],["result",6,[["tokenstream",3]]]],[[["type",4]]],[[]],[[["signature",3]]],null,[[["str",15],["str",15]]],[[],["methodproto",3]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["exprassign",3]],["result",6]],[[["expr",4]],["result",6]],[[["exprpath",3]],["result",6]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["itemstruct",3],["pyclassargs",3],["pyclassmethodstype",4]],["result",6,[["tokenstream",3]]]],[[["itemenum",3],["pyclassargs",3],["pyclassmethodstype",4]],["result",6,[["tokenstream",3]]]],null,[[],["pyclasskind",4]],[[]],null,[[],["pyclasspyo3options",3]],[[["ident",3]],["tokenstream",3]],null,[[["pythondoc",3]]],null,[[["pyclasskind",4]],["bool",15]],[[["variant",3]],["result",6,[["pyclassenumvariant",3]]]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["ident",3],["pyclassargs",3]],["ident",3]],null,null,null,null,null,[[],["tokenstream",3]],[[["ident",3],["pyclassargs",3],["pythondoc",3],["vec",3],["pyclassmethodstype",4],["deprecations",3],["path",3]],["result",6,[["tokenstream",3]]]],[[["ident",3],["vec",3]],["result",6,[["tokenstream",3]]]],[[["itemenum",3],["pyclassargs",3],["vec",3,[["pyclassenumvariant",3]]],["pyclassmethodstype",4],["pyclasspyo3options",3]],["result",6,[["tokenstream",3]]]],[[["ident",3],["pyclassargs",3],["vec",3,[["pyclassenumvariant",3]]],["pythondoc",3],["pyclassmethodstype",4],["path",3]],["result",6,[["tokenstream",3]]]],[[],["tokenstream",3]],[[],["tokenstream",3]],[[],["tokenstream",3]],[[],["tokenstream",3]],[[],["tokenstream",3]],[[],["tokenstream",3]],[[["ident",3],["pyclassargs",3],["option",4,[["deprecations",3]]]],["tokenstream",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["pyclasskind",4]]],[[["ident",3],["pyclassargs",3],["pyclassmethodstype",4]]],[[["parsestream",6],["pyclasskind",4]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],null,[[["crateattribute",3]],["result",6]],[[["textsignatureattribute",3]],["result",6]],[[["vec",3]],["result",6]],[[["vec",3]],["result",6]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["ident",3]],["tokenstream",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",6]],[[["nestedmeta",4]],["result",6]],[[["nestedmeta",4],["lit",4]],["result",6]],[[["nestedmeta",4],["metanamevalue",3]],["result",6]],[[["nestedmeta",4],["path",3],["string",3]],["result",6]],[[["nestedmeta",4],["path",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["itemfn",3],["pyfunctionoptions",3]],["result",6,[["tokenstream",3]]]],[[],["argument",4]],[[],["pyfunctionargpyo3attributes",3]],[[]],[[]],[[],["pyfunctionsignature",3]],[[],["pyfunctionoptions",3]],null,[[["argument",4]],["bool",15]],[[["pyfunctionargpyo3attributes",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3]],["result",6]],[[["vec",3]],["result",6]],[[],["result",6]],null,null,null,null,null,[[["itemfn",3],["pyfunctionoptions",3]],["result",6,[["tokenstream",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["nestedmeta",4]],["result",6]],null,[[["argument",4]],["bool",15]],[[["pyfunctionargpyo3attributes",3]],["bool",15]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsebuffer",3]],["result",6]],[[["parsestream",6]],["result",6]],null,[[["nestedmeta",4]],["result",6]],[[["nameattribute",3]],["result",6]],null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["type",4]],["bool",15]],[[["nestedmeta",4]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["type",4],["vec",3],["hashset",3,[["string",3]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["itemimpl",3],["pyclassmethodstype",4]],["result",6,[["tokenstream",3]]]],[[],["pyclassmethodstype",4]],[[]],[[],["pyimploptions",3]],[[]],[[]],[[]],[[["vec",3]],["result",6]],[[["ident",3],["vec",3,[["tokenstream",3]]]],["tokenstream",3]],[[["type",4],["constspec",3]],["tokenstream",3]],[[],["vec",3,[["attribute",3]]]],[[["type",4],["vec",3],["pyclassmethodstype",4],["pyimploptions",3]],["result",6,[["tokenstream",3]]]],[[["type",4],["vec",3,[["tokenstream",3]]]],["tokenstream",3]],[[["type",4],["vec",3,[["tokenstream",3]]]],["tokenstream",3]],[[]],[[]],[[]],null,[[["parsestream",6]],["result",6]],[[["crateattribute",3]],["result",6]],[[["type",4],["vec",3,[["tokenstream",3]]],["vec",3,[["tokenstream",3]]]],["tokenstream",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,[[["tokengenerator",3]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["signature",3]],["result",6]],[[],["ty",4]],[[]],[[],["option",4,[["deprecations",3]]]],[[],["cow",4,[["pythondoc",3]]]],[[["pyfunctionoptions",3]],["result",6]],[[["fnspec",3],["str",15]],["result",6]],[[["type",4],["ident",3],["ident",3],["fnarg",3],["extracterrormode",4]],["tokenstream",3]],[[["extracterrormode",4]]],[[["extracterrormode",4]]],null,null,[[["type",4],["type",4],["ident",3],["tokenstream",3]],["tokenstream",3]],[[["type",4],["ident",3],["extracterrormode",4]],["result",6]],[[],["tokenstream",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]]],null,[[["type",4],["signature",3],["vec",3],["pyfunctionoptions",3]],["result",6,[["generatedpymethod",4]]]],[[]],[[["type",4],["fnspec",3],["ident",3],["extracterrormode",4],["option",4,[["returnmode",4]]]],["result",6,[["tokenstream",3]]]],[[["type",4],["fnspec",3]],["result",6,[["tokenstream",3]]]],[[["type",4],["fnspec",3],["str",15]],["result",6,[["tokenstream",3]]]],[[["extracterrormode",4],["ident",3],["tokenstream",3]],["tokenstream",3]],[[["type",4],["fnspec",3]],["result",6,[["tokenstream",3]]]],[[["type",4],["fnspec",3]],["result",6,[["tokenstream",3]]]],[[["type",4],["fnspec",3]],["result",6,[["tokenstream",3]]]],[[["type",4],["fnspec",3]],["tokenstream",3]],[[["type",4],["propertytype",4]],["result",6,[["tokenstream",3]]]],[[["type",4],["fnspec",3],["option",4,[["tokenstream",3]]]],["result",6,[["tokenstream",3]]]],[[["type",4],["fnspec",3]],["result",6,[["tokenstream",3]]]],[[["type",4],["propertytype",4]],["result",6,[["tokenstream",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["bool",15]],null,null,[[["str",15],["str",15]]],[[["str",15]]],[[],["result",6,[["litstr",3]]]],[[["signature",3],["vec",3],["pyfunctionoptions",3]],["result",6]],[[["str",15]],["option",4,[["slotdef",3]]]],[[["str",15]],["option",4,[["slotfragmentdef",3]]]],[[]],null,[[["ty",4]]],[[["ty",4]]],null,null,[[["ident",3],["tokenstream",3]],["tokenstream",3]],[[["tokengenerator",3]]],null,[[]],null,[[],["span",3]],[[],["span",3]],null,[[]],[[]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["itemimpl",3]],["result",6,[["tokenstream",3]]]],[[["vec",3,[["tokenstream",3]]],["type",4],["proto",3]],["tokenstream",3]],[[["type",4],["vec",3],["proto",3]],["result",6,[["tokenstream",3]]]],[[["hashset",3,[["string",3]]],["type",4],["proto",3]],["tokenstream",3]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["pythondoc",3]],[[]],[[["signature",3]],["result",6]],null,null,[[]],[[]],[[["option",4]],["pythondoc",3]],[[["option",4]],["path",3]],[[]],[[]],[[["type",4]],["bool",15]],[[["type",4]],["option",4,[["type",4]]]],[[["parsestream",6]],["result",6]],[[["typereference",3]],["typereference",3]],[[["type",4],["type",4]]],[[],["span",3]],[[]],[[["tokenstream",3]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["expr",4]],["expr",4]],[[["type",4]],["type",4]],null,[[]],[[]],null,[[]],null,[[]],[[["ident",3]],["ident",3]],[[["parsestream",6]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["wrappyfunctionargs",3]],["tokenstream",3]],[[["path",3]],["result",6,[["tokenstream",3]]]]],"p":[[4,"PyClassMethodsType"],[3,"PyClassArgs"],[3,"WrapPyFunctionArgs"],[3,"PyFunctionOptions"],[3,"PyModuleOptions"],[3,"FromPyWithAttribute"],[3,"NameAttribute"],[3,"CrateAttribute"],[3,"TextSignatureAttribute"],[3,"annotation"],[3,"attribute"],[3,"from_py_with"],[3,"get"],[3,"item"],[3,"pass_module"],[3,"name"],[3,"set"],[3,"signature"],[3,"text_signature"],[3,"transparent"],[3,"Proto"],[3,"PyMethod"],[3,"SlotDef"],[3,"Deprecations"],[4,"Deprecation"],[4,"ContainerPyO3Attribute"],[4,"FieldPyO3Attribute"],[4,"FieldGetter"],[4,"ContainerType"],[3,"ContainerOptions"],[3,"Enum"],[3,"Container"],[3,"FieldPyO3Attributes"],[13,"Transparent"],[13,"ErrorAnnotation"],[13,"Crate"],[13,"Struct"],[13,"StructNewtype"],[13,"Tuple"],[13,"GetItem"],[13,"GetAttr"],[13,"Getter"],[13,"FromPyWith"],[4,"PyO3ConstAttribute"],[3,"ConstSpec"],[3,"ConstAttributes"],[13,"Name"],[4,"MethodTypeAttribute"],[4,"FnType"],[4,"CallingConvention"],[4,"ExtractErrorMode"],[4,"SelfType"],[3,"FnSpec"],[3,"MethodAttributes"],[3,"FnArg"],[13,"Getter"],[13,"Setter"],[13,"Fn"],[13,"TryFromPyCell"],[13,"Receiver"],[4,"PyModulePyO3Option"],[3,"PyFnArgs"],[13,"Crate"],[13,"Name"],[3,"MethodProto"],[4,"PyClassPyO3Option"],[4,"PyClassKind"],[4,"FieldPyO3Option"],[3,"PyClassImplsBuilder"],[3,"FieldPyO3Options"],[3,"PyClassEnumVariant"],[3,"PyClassPyO3Options"],[13,"Get"],[13,"Set"],[13,"Name"],[13,"TextSignature"],[13,"Crate"],[4,"Argument"],[4,"PyFunctionOption"],[4,"PyFunctionArgPyO3Attribute"],[3,"PyFunctionSignature"],[3,"PyFunctionArgPyO3Attributes"],[13,"VarArgs"],[13,"KeywordArgs"],[13,"PosOnlyArg"],[13,"Arg"],[13,"Kwarg"],[13,"FromPyWith"],[13,"Name"],[13,"PassModule"],[13,"Signature"],[13,"TextSignature"],[13,"Crate"],[4,"PyImplPyO3Option"],[3,"PyImplOptions"],[13,"Crate"],[3,"StaticIdent"],[3,"TokenGenerator"],[4,"PyMethodProtoKind"],[4,"Ty"],[4,"ReturnMode"],[4,"PropertyType"],[4,"PyMethodKind"],[4,"GeneratedPyMethod"],[3,"SlotDef"],[3,"SlotFragmentDef"],[3,"PyMethod"],[13,"Method"],[13,"Proto"],[13,"TraitImpl"],[13,"SlotTraitImpl"],[13,"Descriptor"],[13,"Function"],[13,"Proto"],[13,"Slot"],[13,"SlotFragment"],[13,"Conversion"],[3,"PythonDoc"],[3,"DocArgs"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};